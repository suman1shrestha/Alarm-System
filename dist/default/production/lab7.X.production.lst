

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Dec 14 15:53:45 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73 ;;getTemperature@arr	offset	0
    74 ;;___lwtoft@c	offset=-2 (param)
    75 ;;___ftdiv@f3	offset	0
    76 ;;___ftdiv@sign	offset	3
    77 ;;___ftdiv@exp	offset	4
    78 ;;___ftdiv@cntr	offset	5
    79 ;;___ftdiv@f1	offset=-3 (param)
    80 ;;___ftdiv@f2	offset=-6 (param)
    81 ;;reception@val	offset	0
    82 ;;write_EEPROM@add	offset=-2 (param)
    83 ;;write_EEPROM@c	offset=-3 (param)
    84 ;;getTempPassword@inputMsg	offset	0
    85 ;;getTempPassword@i	offset	4
    86 ;;atoi@a	offset	0
    87 ;;atoi@sign	offset	2
    88 ;;atoi@s	offset=-2 (param)
    89 ;;_isdigit$1608	offset	0
    90 ;;isdigit@c	offset=-1 (param)
    91 ;;fround@prec	offset=-1 (param)
    92 ;;___lbmod@rem	offset	0
    93 ;;___lbmod@counter	offset	1
    94 ;;___lbmod@dividend	offset=-1 (param)
    95 ;;___lbmod@divisor	offset=-2 (param)
    96 ;;___lbdiv@quotient	offset	0
    97 ;;___lbdiv@counter	offset	1
    98 ;;___lbdiv@dividend	offset=-1 (param)
    99 ;;___lbdiv@divisor	offset=-2 (param)
   100 ;;scale@scl	offset=-1 (param)
   101 ;;___wmul@product	offset	0
   102 ;;___wmul@multiplier	offset=-2 (param)
   103 ;;___wmul@multiplicand	offset=-4 (param)
   104 ;;___awmod@sign	offset	0
   105 ;;___awmod@counter	offset	1
   106 ;;___awmod@dividend	offset=-2 (param)
   107 ;;___awmod@divisor	offset=-4 (param)
   108 ;;__tdiv_to_l_@quot	offset	0
   109 ;;__tdiv_to_l_@exp1	offset	4
   110 ;;__tdiv_to_l_@cntr	offset	5
   111 ;;__tdiv_to_l_@f1	offset=-3 (param)
   112 ;;__tdiv_to_l_@f2	offset=-6 (param)
   113 ;;__div_to_l_@quot	offset	0
   114 ;;__div_to_l_@exp1	offset	4
   115 ;;__div_to_l_@cntr	offset	5
   116 ;;__div_to_l_@f1	offset=-3 (param)
   117 ;;__div_to_l_@f2	offset=-6 (param)
   118 ;;___ftsub@f1	offset=-3 (param)
   119 ;;___ftsub@f2	offset=-6 (param)
   120 ;;___awdiv@quotient	offset	0
   121 ;;___awdiv@sign	offset	2
   122 ;;___awdiv@counter	offset	3
   123 ;;___awdiv@dividend	offset=-2 (param)
   124 ;;___awdiv@divisor	offset=-4 (param)
   125 ;;___ftge@ff1	offset=-3 (param)
   126 ;;___ftge@ff2	offset=-6 (param)
   127 ;;___ftneg@f1	offset=-3 (param)
   128 ;;___fttol@lval	offset	0
   129 ;;___fttol@exp1	offset	4
   130 ;;___fttol@sign1	offset	5
   131 ;;___fttol@f1	offset=-3 (param)
   132 ;;___lldiv@quotient	offset	0
   133 ;;___lldiv@counter	offset	4
   134 ;;___lldiv@dividend	offset=-4 (param)
   135 ;;___lldiv@divisor	offset=-8 (param)
   136 ;;___llmod@counter	offset	0
   137 ;;___llmod@dividend	offset=-4 (param)
   138 ;;___llmod@divisor	offset=-8 (param)
   139 ;;___lltoft@exp	offset	0
   140 ;;___lltoft@c	offset=-4 (param)
   141 ;;read_EEPROM@add	offset=-2 (param)
   142 ;;printChar@msg	offset=-2 (param)
   143 ;;sprintf@val	offset	0
   144 ;;sprintf@tmpval	offset	4
   145 ;;sprintf@fval	offset	8
   146 ;;sprintf@prec	offset	11
   147 ;;sprintf@exp	offset	13
   148 ;;sprintf@width	offset	15
   149 ;;sprintf@flag	offset	17
   150 ;;sprintf@ap	offset	19
   151 ;;sprintf@c	offset	21
   152 ;;sprintf@sp	offset=-3 (param)
   153 ;;sprintf@f	offset=-5 (param)
   154 ;;___ftmul@f3_as_product	offset	0
   155 ;;___ftmul@sign	offset	3
   156 ;;___ftmul@cntr	offset	4
   157 ;;___ftmul@exp	offset	5
   158 ;;___ftmul@f1	offset=-3 (param)
   159 ;;___ftmul@f2	offset=-6 (param)
   160 ;;___ftpack@arg	offset=-3 (param)
   161 ;;___ftpack@exp	offset=-4 (param)
   162 ;;___ftpack@sign	offset=-5 (param)
   163 ;;___ftadd@exp1	offset	0
   164 ;;___ftadd@exp2	offset	1
   165 ;;___ftadd@sign	offset	2
   166 ;;___ftadd@f1	offset=-3 (param)
   167 ;;___ftadd@f2	offset=-6 (param)
   168 ;;read_EEPROM@add	offset=-2 (param)
   169 ;;getTemperature@arr	offset	0
   170 ;;sprintf@val	offset	0
   171 ;;sprintf@tmpval	offset	4
   172 ;;sprintf@fval	offset	8
   173 ;;sprintf@prec	offset	11
   174 ;;sprintf@exp	offset	13
   175 ;;sprintf@width	offset	15
   176 ;;sprintf@flag	offset	17
   177 ;;sprintf@ap	offset	19
   178 ;;sprintf@c	offset	21
   179 ;;sprintf@sp	offset=-3 (param)
   180 ;;sprintf@f	offset=-5 (param)
   181 ;;scale@scl	offset=-1 (param)
   182 ;;___awmod@sign	offset	0
   183 ;;___awmod@counter	offset	1
   184 ;;___awmod@dividend	offset=-2 (param)
   185 ;;___awmod@divisor	offset=-4 (param)
   186 ;;___awdiv@quotient	offset	0
   187 ;;___awdiv@sign	offset	2
   188 ;;___awdiv@counter	offset	3
   189 ;;___awdiv@dividend	offset=-2 (param)
   190 ;;___awdiv@divisor	offset=-4 (param)
   191 ;;fround@prec	offset=-1 (param)
   192 ;;___lbmod@rem	offset	0
   193 ;;___lbmod@counter	offset	1
   194 ;;___lbmod@dividend	offset=-1 (param)
   195 ;;___lbmod@divisor	offset=-2 (param)
   196 ;;___lbdiv@quotient	offset	0
   197 ;;___lbdiv@counter	offset	1
   198 ;;___lbdiv@dividend	offset=-1 (param)
   199 ;;___lbdiv@divisor	offset=-2 (param)
   200 ;;___ftmul@f3_as_product	offset	0
   201 ;;___ftmul@sign	offset	3
   202 ;;___ftmul@cntr	offset	4
   203 ;;___ftmul@exp	offset	5
   204 ;;___ftmul@f1	offset=-3 (param)
   205 ;;___ftmul@f2	offset=-6 (param)
   206 ;;__tdiv_to_l_@quot	offset	0
   207 ;;__tdiv_to_l_@exp1	offset	4
   208 ;;__tdiv_to_l_@cntr	offset	5
   209 ;;__tdiv_to_l_@f1	offset=-3 (param)
   210 ;;__tdiv_to_l_@f2	offset=-6 (param)
   211 ;;__div_to_l_@quot	offset	0
   212 ;;__div_to_l_@exp1	offset	4
   213 ;;__div_to_l_@cntr	offset	5
   214 ;;__div_to_l_@f1	offset=-3 (param)
   215 ;;__div_to_l_@f2	offset=-6 (param)
   216 ;;___lltoft@exp	offset	0
   217 ;;___lltoft@c	offset=-4 (param)
   218 ;;___llmod@counter	offset	0
   219 ;;___llmod@dividend	offset=-4 (param)
   220 ;;___llmod@divisor	offset=-8 (param)
   221 ;;___lldiv@quotient	offset	0
   222 ;;___lldiv@counter	offset	4
   223 ;;___lldiv@dividend	offset=-4 (param)
   224 ;;___lldiv@divisor	offset=-8 (param)
   225 ;;___fttol@lval	offset	0
   226 ;;___fttol@exp1	offset	4
   227 ;;___fttol@sign1	offset	5
   228 ;;___fttol@f1	offset=-3 (param)
   229 ;;___ftsub@f1	offset=-3 (param)
   230 ;;___ftsub@f2	offset=-6 (param)
   231 ;;___ftadd@exp1	offset	0
   232 ;;___ftadd@exp2	offset	1
   233 ;;___ftadd@sign	offset	2
   234 ;;___ftadd@f1	offset=-3 (param)
   235 ;;___ftadd@f2	offset=-6 (param)
   236 ;;___ftneg@f1	offset=-3 (param)
   237 ;;___ftge@ff1	offset=-3 (param)
   238 ;;___ftge@ff2	offset=-6 (param)
   239 ;;___lwtoft@c	offset=-2 (param)
   240 ;;___ftdiv@f3	offset	0
   241 ;;___ftdiv@sign	offset	3
   242 ;;___ftdiv@exp	offset	4
   243 ;;___ftdiv@cntr	offset	5
   244 ;;___ftdiv@f1	offset=-3 (param)
   245 ;;___ftdiv@f2	offset=-6 (param)
   246 ;;write_EEPROM@add	offset=-2 (param)
   247 ;;write_EEPROM@c	offset=-3 (param)
   248 ;;atoi@a	offset	0
   249 ;;atoi@sign	offset	2
   250 ;;atoi@s	offset=-2 (param)
   251 ;;_isdigit$1608	offset	0
   252 ;;isdigit@c	offset=-1 (param)
   253 ;;___wmul@product	offset	0
   254 ;;___wmul@multiplier	offset=-2 (param)
   255 ;;___wmul@multiplicand	offset=-4 (param)
   256 ;;getTempPassword@inputMsg	offset	0
   257 ;;getTempPassword@i	offset	4
   258 ;;printChar@msg	offset=-2 (param)
   259 ;;reception@val	offset	0
   260 ;;___ftpack@arg	offset=-3 (param)
   261 ;;___ftpack@exp	offset=-4 (param)
   262 ;;___ftpack@sign	offset=-5 (param)
   263 ;;write_EEPROM@add	offset=-2 (param)
   264 ;;write_EEPROM@c	offset=-3 (param)
   265 ;;read_EEPROM@add	offset=-2 (param)
   266 ;;getTempPassword@inputMsg	offset	0
   267 ;;getTempPassword@i	offset	4
   268 ;;reception@val	offset	0
   269 ;;printChar@msg	offset=-2 (param)
   270                           
   271                           	psect	idataCOMRAM
   272  0046C0                     __pidataCOMRAM:
   273                           	opt stack 0
   274                           
   275                           ;initializer for _inputMethodAddress
   276  0046C0  0003               	dw	3
   277                           
   278                           ;initializer for _inputType
   279  0046C2  E7                 	db	low STR_3
   280  0046C3  7F                 	db	high STR_3
   281                           
   282                           ;initializer for _pirState
   283  0046C4  DE                 	db	low STR_1
   284  0046C5  7F                 	db	high STR_1
   285                           
   286                           ;initializer for _tempState
   287  0046C6  DE                 	db	low STR_1
   288  0046C7  7F                 	db	high STR_1
   289                           
   290                           ;initializer for _tempStatusAddress
   291  0046C8  0001               	dw	1
   292                           
   293                           ;initializer for _tempThresholdAddress
   294  0046CA  0010               	dw	16
   295                           
   296                           ;initializer for _thresholdTemp
   297  0046CC  0050               	dw	80
   298                           
   299                           ;initializer for _degree
   300  0046CE  B0                 	db	176
   301  0046CF  46                 	db	70
   302  0046D0  00                 	db	0
   303                           
   304                           	psect	mediumconst
   305  007312                     __pmediumconst:
   306                           	opt stack 0
   307  007312  00                 	db	0
   308  007313                     _dpowers:
   309                           	opt stack 0
   310  007313  0001               	dw	1
   311  007315  0000               	dw	0
   312  007317  000A               	dw	10
   313  007319  0000               	dw	0
   314  00731B  0064               	dw	100
   315  00731D  0000               	dw	0
   316  00731F  03E8               	dw	1000
   317  007321  0000               	dw	0
   318  007323  2710               	dw	10000
   319  007325  0000               	dw	0
   320  007327  86A0               	dw	34464
   321  007329  0001               	dw	1
   322  00732B  4240               	dw	16960
   323  00732D  000F               	dw	15
   324  00732F  9680               	dw	38528
   325  007331  0098               	dw	152
   326  007333  E100               	dw	57600
   327  007335  05F5               	dw	1525
   328  007337  CA00               	dw	51712
   329  007339  3B9A               	dw	15258
   330  00733B                     __end_of_dpowers:
   331                           	opt stack 0
   332  00733B                     __npowers_:
   333                           	opt stack 0
   334  00733B  00                 	db	0
   335  00733C  80                 	db	128
   336  00733D  3F                 	db	63
   337  00733E  CD                 	db	205
   338  00733F  CC                 	db	204
   339  007340  3D                 	db	61
   340  007341  D7                 	db	215
   341  007342  23                 	db	35
   342  007343  3C                 	db	60
   343  007344  12                 	db	18
   344  007345  83                 	db	131
   345  007346  3A                 	db	58
   346  007347  B7                 	db	183
   347  007348  D1                 	db	209
   348  007349  38                 	db	56
   349  00734A  C6                 	db	198
   350  00734B  27                 	db	39
   351  00734C  37                 	db	55
   352  00734D  38                 	db	56
   353  00734E  86                 	db	134
   354  00734F  35                 	db	53
   355  007350  C0                 	db	192
   356  007351  D6                 	db	214
   357  007352  33                 	db	51
   358  007353  CC                 	db	204
   359  007354  2B                 	db	43
   360  007355  32                 	db	50
   361  007356  70                 	db	112
   362  007357  89                 	db	137
   363  007358  30                 	db	48
   364  007359  E7                 	db	231
   365  00735A  DB                 	db	219
   366  00735B  2E                 	db	46
   367  00735C  E5                 	db	229
   368  00735D  3C                 	db	60
   369  00735E  1E                 	db	30
   370  00735F  42                 	db	66
   371  007360  A2                 	db	162
   372  007361  0D                 	db	13
   373  007362                     __end_of__npowers_:
   374                           	opt stack 0
   375  007362                     __powers_:
   376                           	opt stack 0
   377  007362  00                 	db	0
   378  007363  80                 	db	128
   379  007364  3F                 	db	63
   380  007365  00                 	db	0
   381  007366  20                 	db	32
   382  007367  41                 	db	65
   383  007368  00                 	db	0
   384  007369  C8                 	db	200
   385  00736A  42                 	db	66
   386  00736B  00                 	db	0
   387  00736C  7A                 	db	122
   388  00736D  44                 	db	68
   389  00736E  40                 	db	64
   390  00736F  1C                 	db	28
   391  007370  46                 	db	70
   392  007371  50                 	db	80
   393  007372  C3                 	db	195
   394  007373  47                 	db	71
   395  007374  24                 	db	36
   396  007375  74                 	db	116
   397  007376  49                 	db	73
   398  007377  97                 	db	151
   399  007378  18                 	db	24
   400  007379  4B                 	db	75
   401  00737A  BC                 	db	188
   402  00737B  BE                 	db	190
   403  00737C  4C                 	db	76
   404  00737D  6B                 	db	107
   405  00737E  6E                 	db	110
   406  00737F  4E                 	db	78
   407  007380  03                 	db	3
   408  007381  15                 	db	21
   409  007382  50                 	db	80
   410  007383  79                 	db	121
   411  007384  AD                 	db	173
   412  007385  60                 	db	96
   413  007386  F3                 	db	243
   414  007387  49                 	db	73
   415  007388  71                 	db	113
   416  007389                     __end_of__powers_:
   417                           	opt stack 0
   418  0000                     _ADCON0	set	4034
   419  0000                     _ADCON0bits	set	4034
   420  0000                     _ADCON1	set	4033
   421  0000                     _ADCON2	set	4032
   422  0000                     _ADRESH	set	4036
   423  0000                     _ADRESL	set	4035
   424  0000                     _EEADR	set	4009
   425  0000                     _EECON1bits	set	4006
   426  0000                     _EECON2	set	4007
   427  0000                     _EEDATA	set	4008
   428  0000                     _INTCON2bits	set	4081
   429  0000                     _INTCONbits	set	4082
   430  0000                     _IPR1bits	set	3999
   431  0000                     _PIE1bits	set	3997
   432  0000                     _PIR1bits	set	3998
   433  0000                     _PORTA	set	3968
   434  0000                     _PORTBbits	set	3969
   435  0000                     _PORTD	set	3971
   436  0000                     _PORTDbits	set	3971
   437  0000                     _RCONbits	set	4048
   438  0000                     _RCREG	set	4014
   439  0000                     _RCSTAbits	set	4011
   440  0000                     _SPBRG	set	4015
   441  0000                     _T0CON	set	4053
   442  0000                     _T0CONbits	set	4053
   443  0000                     _TMR0H	set	4055
   444  0000                     _TMR0L	set	4054
   445  0000                     _TRISA	set	3986
   446  0000                     _TRISAbits	set	3986
   447  0000                     _TRISB	set	3987
   448  0000                     _TRISBbits	set	3987
   449  0000                     _TRISC	set	3988
   450  0000                     _TRISCbits	set	3988
   451  0000                     _TRISD	set	3989
   452  0000                     _TRISE	set	3990
   453  0000                     _TXREG	set	4013
   454  0000                     _TXSTAbits	set	4012
   455  0000                     _ADIE	set	31982
   456  0000                     _CARRY	set	32448
   457  0000                     _CFGS	set	32054
   458  0000                     _EEPGD	set	32055
   459  0000                     _GIE	set	32663
   460  0000                     _RD	set	32048
   461  0000                     _WR	set	32049
   462  0000                     _WREN	set	32050
   463  007389                     STR_141:
   464  007389  0A                 	db	10
   465  00738A  0D                 	db	13
   466  00738B  50                 	db	80	;'P'
   467  00738C  6C                 	db	108	;'l'
   468  00738D  65                 	db	101	;'e'
   469  00738E  61                 	db	97	;'a'
   470  00738F  73                 	db	115	;'s'
   471  007390  65                 	db	101	;'e'
   472  007391  20                 	db	32
   473  007392  65                 	db	101	;'e'
   474  007393  6E                 	db	110	;'n'
   475  007394  74                 	db	116	;'t'
   476  007395  65                 	db	101	;'e'
   477  007396  72                 	db	114	;'r'
   478  007397  20                 	db	32
   479  007398  74                 	db	116	;'t'
   480  007399  68                 	db	104	;'h'
   481  00739A  65                 	db	101	;'e'
   482  00739B  20                 	db	32
   483  00739C  6E                 	db	110	;'n'
   484  00739D  65                 	db	101	;'e'
   485  00739E  77                 	db	119	;'w'
   486  00739F  20                 	db	32
   487  0073A0  54                 	db	84	;'T'
   488  0073A1  65                 	db	101	;'e'
   489  0073A2  6D                 	db	109	;'m'
   490  0073A3  70                 	db	112	;'p'
   491  0073A4  65                 	db	101	;'e'
   492  0073A5  72                 	db	114	;'r'
   493  0073A6  61                 	db	97	;'a'
   494  0073A7  74                 	db	116	;'t'
   495  0073A8  75                 	db	117	;'u'
   496  0073A9  72                 	db	114	;'r'
   497  0073AA  65                 	db	101	;'e'
   498  0073AB  20                 	db	32
   499  0073AC  53                 	db	83	;'S'
   500  0073AD  65                 	db	101	;'e'
   501  0073AE  6E                 	db	110	;'n'
   502  0073AF  73                 	db	115	;'s'
   503  0073B0  6F                 	db	111	;'o'
   504  0073B1  72                 	db	114	;'r'
   505  0073B2  20                 	db	32
   506  0073B3  41                 	db	65	;'A'
   507  0073B4  6C                 	db	108	;'l'
   508  0073B5  61                 	db	97	;'a'
   509  0073B6  72                 	db	114	;'r'
   510  0073B7  6D                 	db	109	;'m'
   511  0073B8  20                 	db	32
   512  0073B9  54                 	db	84	;'T'
   513  0073BA  68                 	db	104	;'h'
   514  0073BB  72                 	db	114	;'r'
   515  0073BC  65                 	db	101	;'e'
   516  0073BD  73                 	db	115	;'s'
   517  0073BE  68                 	db	104	;'h'
   518  0073BF  6F                 	db	111	;'o'
   519  0073C0  6C                 	db	108	;'l'
   520  0073C1  64                 	db	100	;'d'
   521  0073C2  20                 	db	32
   522  0073C3  28                 	db	40
   523  0073C4  32                 	db	50	;'2'
   524  0073C5  20                 	db	32
   525  0073C6  64                 	db	100	;'d'
   526  0073C7  69                 	db	105	;'i'
   527  0073C8  67                 	db	103	;'g'
   528  0073C9  69                 	db	105	;'i'
   529  0073CA  74                 	db	116	;'t'
   530  0073CB  73                 	db	115	;'s'
   531  0073CC  29                 	db	41
   532  0073CD  3A                 	db	58	;':'
   533  0073CE  20                 	db	32
   534  0073CF  00                 	db	0
   535  0073D0                     STR_24:
   536  0073D0  0A                 	db	10
   537  0073D1  0D                 	db	13
   538  0073D2  45                 	db	69	;'E'
   539  0073D3  6E                 	db	110	;'n'
   540  0073D4  74                 	db	116	;'t'
   541  0073D5  65                 	db	101	;'e'
   542  0073D6  72                 	db	114	;'r'
   543  0073D7  20                 	db	32
   544  0073D8  74                 	db	116	;'t'
   545  0073D9  68                 	db	104	;'h'
   546  0073DA  65                 	db	101	;'e'
   547  0073DB  20                 	db	32
   548  0073DC  70                 	db	112	;'p'
   549  0073DD  61                 	db	97	;'a'
   550  0073DE  73                 	db	115	;'s'
   551  0073DF  73                 	db	115	;'s'
   552  0073E0  63                 	db	99	;'c'
   553  0073E1  6F                 	db	111	;'o'
   554  0073E2  64                 	db	100	;'d'
   555  0073E3  65                 	db	101	;'e'
   556  0073E4  20                 	db	32
   557  0073E5  74                 	db	116	;'t'
   558  0073E6  6F                 	db	111	;'o'
   559  0073E7  20                 	db	32
   560  0073E8  72                 	db	114	;'r'
   561  0073E9  65                 	db	101	;'e'
   562  0073EA  73                 	db	115	;'s'
   563  0073EB  65                 	db	101	;'e'
   564  0073EC  74                 	db	116	;'t'
   565  0073ED  20                 	db	32
   566  0073EE  74                 	db	116	;'t'
   567  0073EF  68                 	db	104	;'h'
   568  0073F0  65                 	db	101	;'e'
   569  0073F1  20                 	db	32
   570  0073F2  61                 	db	97	;'a'
   571  0073F3  6C                 	db	108	;'l'
   572  0073F4  61                 	db	97	;'a'
   573  0073F5  72                 	db	114	;'r'
   574  0073F6  6D                 	db	109	;'m'
   575  0073F7  20                 	db	32
   576  0073F8  61                 	db	97	;'a'
   577  0073F9  6E                 	db	110	;'n'
   578  0073FA  64                 	db	100	;'d'
   579  0073FB  20                 	db	32
   580  0073FC  72                 	db	114	;'r'
   581  0073FD  65                 	db	101	;'e'
   582  0073FE  74                 	db	116	;'t'
   583  0073FF  75                 	db	117	;'u'
   584  007400  72                 	db	114	;'r'
   585  007401  6E                 	db	110	;'n'
   586  007402  20                 	db	32
   587  007403  74                 	db	116	;'t'
   588  007404  6F                 	db	111	;'o'
   589  007405  20                 	db	32
   590  007406  6D                 	db	109	;'m'
   591  007407  61                 	db	97	;'a'
   592  007408  69                 	db	105	;'i'
   593  007409  6E                 	db	110	;'n'
   594  00740A  20                 	db	32
   595  00740B  6D                 	db	109	;'m'
   596  00740C  65                 	db	101	;'e'
   597  00740D  6E                 	db	110	;'n'
   598  00740E  75                 	db	117	;'u'
   599  00740F  2E                 	db	46
   600  007410  00                 	db	0
   601  007411                     STR_124:
   602  007411  0A                 	db	10
   603  007412  0D                 	db	13
   604  007413  2A                 	db	42
   605  007414  2A                 	db	42
   606  007415  2A                 	db	42
   607  007416  2A                 	db	42
   608  007417  2A                 	db	42
   609  007418  2A                 	db	42
   610  007419  2A                 	db	42
   611  00741A  2A                 	db	42
   612  00741B  2A                 	db	42
   613  00741C  2A                 	db	42
   614  00741D  2A                 	db	42
   615  00741E  2A                 	db	42
   616  00741F  2A                 	db	42
   617  007420  2A                 	db	42
   618  007421  2A                 	db	42
   619  007422  2A                 	db	42
   620  007423  2A                 	db	42
   621  007424  54                 	db	84	;'T'
   622  007425  65                 	db	101	;'e'
   623  007426  6D                 	db	109	;'m'
   624  007427  70                 	db	112	;'p'
   625  007428  65                 	db	101	;'e'
   626  007429  72                 	db	114	;'r'
   627  00742A  61                 	db	97	;'a'
   628  00742B  74                 	db	116	;'t'
   629  00742C  75                 	db	117	;'u'
   630  00742D  72                 	db	114	;'r'
   631  00742E  65                 	db	101	;'e'
   632  00742F  20                 	db	32
   633  007430  53                 	db	83	;'S'
   634  007431  65                 	db	101	;'e'
   635  007432  6E                 	db	110	;'n'
   636  007433  73                 	db	115	;'s'
   637  007434  6F                 	db	111	;'o'
   638  007435  72                 	db	114	;'r'
   639  007436  20                 	db	32
   640  007437  41                 	db	65	;'A'
   641  007438  6C                 	db	108	;'l'
   642  007439  61                 	db	97	;'a'
   643  00743A  72                 	db	114	;'r'
   644  00743B  6D                 	db	109	;'m'
   645  00743C  20                 	db	32
   646  00743D  2A                 	db	42
   647  00743E  2A                 	db	42
   648  00743F  2A                 	db	42
   649  007440  2A                 	db	42
   650  007441  2A                 	db	42
   651  007442  2A                 	db	42
   652  007443  2A                 	db	42
   653  007444  2A                 	db	42
   654  007445  2A                 	db	42
   655  007446  2A                 	db	42
   656  007447  2A                 	db	42
   657  007448  2A                 	db	42
   658  007449  2A                 	db	42
   659  00744A  2A                 	db	42
   660  00744B  2A                 	db	42
   661  00744C  2A                 	db	42
   662  00744D  2A                 	db	42
   663  00744E  2A                 	db	42
   664  00744F  2A                 	db	42
   665  007450  00                 	db	0
   666  007451                     STR_108:
   667  007451  0A                 	db	10
   668  007452  0D                 	db	13
   669  007453  2A                 	db	42
   670  007454  2A                 	db	42
   671  007455  2A                 	db	42
   672  007456  2A                 	db	42
   673  007457  2A                 	db	42
   674  007458  2A                 	db	42
   675  007459  2A                 	db	42
   676  00745A  2A                 	db	42
   677  00745B  2A                 	db	42
   678  00745C  2A                 	db	42
   679  00745D  2A                 	db	42
   680  00745E  2A                 	db	42
   681  00745F  2A                 	db	42
   682  007460  2A                 	db	42
   683  007461  2A                 	db	42
   684  007462  2A                 	db	42
   685  007463  2A                 	db	42
   686  007464  2A                 	db	42
   687  007465  2A                 	db	42
   688  007466  2A                 	db	42
   689  007467  2A                 	db	42
   690  007468  50                 	db	80	;'P'
   691  007469  49                 	db	73	;'I'
   692  00746A  52                 	db	82	;'R'
   693  00746B  20                 	db	32
   694  00746C  53                 	db	83	;'S'
   695  00746D  65                 	db	101	;'e'
   696  00746E  6E                 	db	110	;'n'
   697  00746F  73                 	db	115	;'s'
   698  007470  6F                 	db	111	;'o'
   699  007471  72                 	db	114	;'r'
   700  007472  20                 	db	32
   701  007473  41                 	db	65	;'A'
   702  007474  6C                 	db	108	;'l'
   703  007475  61                 	db	97	;'a'
   704  007476  72                 	db	114	;'r'
   705  007477  6D                 	db	109	;'m'
   706  007478  20                 	db	32
   707  007479  2A                 	db	42
   708  00747A  2A                 	db	42
   709  00747B  2A                 	db	42
   710  00747C  2A                 	db	42
   711  00747D  2A                 	db	42
   712  00747E  2A                 	db	42
   713  00747F  2A                 	db	42
   714  007480  2A                 	db	42
   715  007481  2A                 	db	42
   716  007482  2A                 	db	42
   717  007483  2A                 	db	42
   718  007484  2A                 	db	42
   719  007485  2A                 	db	42
   720  007486  2A                 	db	42
   721  007487  2A                 	db	42
   722  007488  2A                 	db	42
   723  007489  2A                 	db	42
   724  00748A  2A                 	db	42
   725  00748B  2A                 	db	42
   726  00748C  2A                 	db	42
   727  00748D  2A                 	db	42
   728  00748E  2A                 	db	42
   729  00748F  2A                 	db	42
   730  007490  00                 	db	0
   731  007491                     STR_21:
   732  007491  0A                 	db	10
   733  007492  0D                 	db	13
   734  007493  21                 	db	33
   735  007494  21                 	db	33
   736  007495  21                 	db	33
   737  007496  21                 	db	33
   738  007497  21                 	db	33
   739  007498  21                 	db	33
   740  007499  21                 	db	33
   741  00749A  21                 	db	33
   742  00749B  21                 	db	33
   743  00749C  21                 	db	33
   744  00749D  21                 	db	33
   745  00749E  21                 	db	33
   746  00749F  21                 	db	33
   747  0074A0  20                 	db	32
   748  0074A1  54                 	db	84	;'T'
   749  0074A2  65                 	db	101	;'e'
   750  0074A3  6D                 	db	109	;'m'
   751  0074A4  70                 	db	112	;'p'
   752  0074A5  65                 	db	101	;'e'
   753  0074A6  72                 	db	114	;'r'
   754  0074A7  61                 	db	97	;'a'
   755  0074A8  74                 	db	116	;'t'
   756  0074A9  75                 	db	117	;'u'
   757  0074AA  72                 	db	114	;'r'
   758  0074AB  65                 	db	101	;'e'
   759  0074AC  20                 	db	32
   760  0074AD  53                 	db	83	;'S'
   761  0074AE  45                 	db	69	;'E'
   762  0074AF  4E                 	db	78	;'N'
   763  0074B0  53                 	db	83	;'S'
   764  0074B1  4F                 	db	79	;'O'
   765  0074B2  52                 	db	82	;'R'
   766  0074B3  20                 	db	32
   767  0074B4  48                 	db	72	;'H'
   768  0074B5  41                 	db	65	;'A'
   769  0074B6  53                 	db	83	;'S'
   770  0074B7  20                 	db	32
   771  0074B8  44                 	db	68	;'D'
   772  0074B9  45                 	db	69	;'E'
   773  0074BA  54                 	db	84	;'T'
   774  0074BB  45                 	db	69	;'E'
   775  0074BC  43                 	db	67	;'C'
   776  0074BD  54                 	db	84	;'T'
   777  0074BE  45                 	db	69	;'E'
   778  0074BF  44                 	db	68	;'D'
   779  0074C0  20                 	db	32
   780  0074C1  21                 	db	33
   781  0074C2  21                 	db	33
   782  0074C3  21                 	db	33
   783  0074C4  21                 	db	33
   784  0074C5  21                 	db	33
   785  0074C6  21                 	db	33
   786  0074C7  21                 	db	33
   787  0074C8  21                 	db	33
   788  0074C9  21                 	db	33
   789  0074CA  21                 	db	33
   790  0074CB  21                 	db	33
   791  0074CC  21                 	db	33
   792  0074CD  21                 	db	33
   793  0074CE  21                 	db	33
   794  0074CF  00                 	db	0
   795  0074D0                     STR_61:
   796  0074D0  0A                 	db	10
   797  0074D1  0D                 	db	13
   798  0074D2  2A                 	db	42
   799  0074D3  20                 	db	32
   800  0074D4  20                 	db	32
   801  0074D5  20                 	db	32
   802  0074D6  20                 	db	32
   803  0074D7  20                 	db	32
   804  0074D8  20                 	db	32
   805  0074D9  20                 	db	32
   806  0074DA  20                 	db	32
   807  0074DB  20                 	db	32
   808  0074DC  20                 	db	32
   809  0074DD  20                 	db	32
   810  0074DE  20                 	db	32
   811  0074DF  20                 	db	32
   812  0074E0  20                 	db	32
   813  0074E1  20                 	db	32
   814  0074E2  20                 	db	32
   815  0074E3  20                 	db	32
   816  0074E4  20                 	db	32
   817  0074E5  20                 	db	32
   818  0074E6  20                 	db	32
   819  0074E7  20                 	db	32
   820  0074E8  20                 	db	32
   821  0074E9  53                 	db	83	;'S'
   822  0074EA  75                 	db	117	;'u'
   823  0074EB  6D                 	db	109	;'m'
   824  0074EC  61                 	db	97	;'a'
   825  0074ED  6E                 	db	110	;'n'
   826  0074EE  20                 	db	32
   827  0074EF  53                 	db	83	;'S'
   828  0074F0  68                 	db	104	;'h'
   829  0074F1  72                 	db	114	;'r'
   830  0074F2  65                 	db	101	;'e'
   831  0074F3  73                 	db	115	;'s'
   832  0074F4  74                 	db	116	;'t'
   833  0074F5  68                 	db	104	;'h'
   834  0074F6  61                 	db	97	;'a'
   835  0074F7  20                 	db	32
   836  0074F8  20                 	db	32
   837  0074F9  20                 	db	32
   838  0074FA  20                 	db	32
   839  0074FB  20                 	db	32
   840  0074FC  20                 	db	32
   841  0074FD  20                 	db	32
   842  0074FE  20                 	db	32
   843  0074FF  20                 	db	32
   844  007500  20                 	db	32
   845  007501  20                 	db	32
   846  007502  20                 	db	32
   847  007503  20                 	db	32
   848  007504  20                 	db	32
   849  007505  20                 	db	32
   850  007506  20                 	db	32
   851  007507  20                 	db	32
   852  007508  20                 	db	32
   853  007509  20                 	db	32
   854  00750A  20                 	db	32
   855  00750B  20                 	db	32
   856  00750C  20                 	db	32
   857  00750D  2A                 	db	42
   858  00750E  00                 	db	0
   859  00750F                     STR_59:
   860  00750F  0A                 	db	10
   861  007510  0D                 	db	13
   862  007511  2A                 	db	42
   863  007512  20                 	db	32
   864  007513  20                 	db	32
   865  007514  20                 	db	32
   866  007515  20                 	db	32
   867  007516  20                 	db	32
   868  007517  20                 	db	32
   869  007518  20                 	db	32
   870  007519  20                 	db	32
   871  00751A  20                 	db	32
   872  00751B  20                 	db	32
   873  00751C  20                 	db	32
   874  00751D  20                 	db	32
   875  00751E  20                 	db	32
   876  00751F  20                 	db	32
   877  007520  20                 	db	32
   878  007521  43                 	db	67	;'C'
   879  007522  53                 	db	83	;'S'
   880  007523  45                 	db	69	;'E'
   881  007524  20                 	db	32
   882  007525  33                 	db	51	;'3'
   883  007526  34                 	db	52	;'4'
   884  007527  34                 	db	52	;'4'
   885  007528  32                 	db	50	;'2'
   886  007529  3A                 	db	58	;':'
   887  00752A  20                 	db	32
   888  00752B  45                 	db	69	;'E'
   889  00752C  6D                 	db	109	;'m'
   890  00752D  62                 	db	98	;'b'
   891  00752E  65                 	db	101	;'e'
   892  00752F  64                 	db	100	;'d'
   893  007530  64                 	db	100	;'d'
   894  007531  65                 	db	101	;'e'
   895  007532  64                 	db	100	;'d'
   896  007533  20                 	db	32
   897  007534  53                 	db	83	;'S'
   898  007535  79                 	db	121	;'y'
   899  007536  73                 	db	115	;'s'
   900  007537  74                 	db	116	;'t'
   901  007538  65                 	db	101	;'e'
   902  007539  6D                 	db	109	;'m'
   903  00753A  73                 	db	115	;'s'
   904  00753B  20                 	db	32
   905  00753C  49                 	db	73	;'I'
   906  00753D  20                 	db	32
   907  00753E  20                 	db	32
   908  00753F  20                 	db	32
   909  007540  20                 	db	32
   910  007541  20                 	db	32
   911  007542  20                 	db	32
   912  007543  20                 	db	32
   913  007544  20                 	db	32
   914  007545  20                 	db	32
   915  007546  20                 	db	32
   916  007547  20                 	db	32
   917  007548  20                 	db	32
   918  007549  20                 	db	32
   919  00754A  20                 	db	32
   920  00754B  20                 	db	32
   921  00754C  2A                 	db	42
   922  00754D  00                 	db	0
   923  00754E                     STR_58:
   924  00754E  0A                 	db	10
   925  00754F  0D                 	db	13
   926  007550  2A                 	db	42
   927  007551  20                 	db	32
   928  007552  20                 	db	32
   929  007553  20                 	db	32
   930  007554  20                 	db	32
   931  007555  20                 	db	32
   932  007556  20                 	db	32
   933  007557  20                 	db	32
   934  007558  20                 	db	32
   935  007559  20                 	db	32
   936  00755A  20                 	db	32
   937  00755B  20                 	db	32
   938  00755C  20                 	db	32
   939  00755D  20                 	db	32
   940  00755E  20                 	db	32
   941  00755F  20                 	db	32
   942  007560  20                 	db	32
   943  007561  20                 	db	32
   944  007562  20                 	db	32
   945  007563  41                 	db	65	;'A'
   946  007564  6C                 	db	108	;'l'
   947  007565  61                 	db	97	;'a'
   948  007566  72                 	db	114	;'r'
   949  007567  6D                 	db	109	;'m'
   950  007568  20                 	db	32
   951  007569  53                 	db	83	;'S'
   952  00756A  79                 	db	121	;'y'
   953  00756B  73                 	db	115	;'s'
   954  00756C  74                 	db	116	;'t'
   955  00756D  65                 	db	101	;'e'
   956  00756E  6D                 	db	109	;'m'
   957  00756F  20                 	db	32
   958  007570  69                 	db	105	;'i'
   959  007571  73                 	db	115	;'s'
   960  007572  20                 	db	32
   961  007573  43                 	db	67	;'C'
   962  007574  6F                 	db	111	;'o'
   963  007575  6E                 	db	110	;'n'
   964  007576  6E                 	db	110	;'n'
   965  007577  65                 	db	101	;'e'
   966  007578  63                 	db	99	;'c'
   967  007579  74                 	db	116	;'t'
   968  00757A  65                 	db	101	;'e'
   969  00757B  64                 	db	100	;'d'
   970  00757C  20                 	db	32
   971  00757D  20                 	db	32
   972  00757E  20                 	db	32
   973  00757F  20                 	db	32
   974  007580  20                 	db	32
   975  007581  20                 	db	32
   976  007582  20                 	db	32
   977  007583  20                 	db	32
   978  007584  20                 	db	32
   979  007585  20                 	db	32
   980  007586  20                 	db	32
   981  007587  20                 	db	32
   982  007588  20                 	db	32
   983  007589  20                 	db	32
   984  00758A  20                 	db	32
   985  00758B  2A                 	db	42
   986  00758C  00                 	db	0
   987  00758D                     STR_60:
   988  00758D  0A                 	db	10
   989  00758E  0D                 	db	13
   990  00758F  2A                 	db	42
   991  007590  20                 	db	32
   992  007591  20                 	db	32
   993  007592  20                 	db	32
   994  007593  20                 	db	32
   995  007594  20                 	db	32
   996  007595  4C                 	db	76	;'L'
   997  007596  61                 	db	97	;'a'
   998  007597  62                 	db	98	;'b'
   999  007598  20                 	db	32
  1000  007599  37                 	db	55	;'7'
  1001  00759A  20                 	db	32
  1002  00759B  28                 	db	40
  1003  00759C  41                 	db	65	;'A'
  1004  00759D  42                 	db	66	;'B'
  1005  00759E  45                 	db	69	;'E'
  1006  00759F  54                 	db	84	;'T'
  1007  0075A0  29                 	db	41
  1008  0075A1  20                 	db	32
  1009  0075A2  2D                 	db	45
  1010  0075A3  20                 	db	32
  1011  0075A4  53                 	db	83	;'S'
  1012  0075A5  74                 	db	116	;'t'
  1013  0075A6  61                 	db	97	;'a'
  1014  0075A7  6E                 	db	110	;'n'
  1015  0075A8  64                 	db	100	;'d'
  1016  0075A9  61                 	db	97	;'a'
  1017  0075AA  6C                 	db	108	;'l'
  1018  0075AB  6F                 	db	111	;'o'
  1019  0075AC  6E                 	db	110	;'n'
  1020  0075AD  65                 	db	101	;'e'
  1021  0075AE  20                 	db	32
  1022  0075AF  50                 	db	80	;'P'
  1023  0075B0  49                 	db	73	;'I'
  1024  0075B1  43                 	db	67	;'C'
  1025  0075B2  20                 	db	32
  1026  0075B3  77                 	db	119	;'w'
  1027  0075B4  69                 	db	105	;'i'
  1028  0075B5  74                 	db	116	;'t'
  1029  0075B6  68                 	db	104	;'h'
  1030  0075B7  20                 	db	32
  1031  0075B8  43                 	db	67	;'C'
  1032  0075B9  6F                 	db	111	;'o'
  1033  0075BA  6D                 	db	109	;'m'
  1034  0075BB  6D                 	db	109	;'m'
  1035  0075BC  75                 	db	117	;'u'
  1036  0075BD  6E                 	db	110	;'n'
  1037  0075BE  69                 	db	105	;'i'
  1038  0075BF  63                 	db	99	;'c'
  1039  0075C0  61                 	db	97	;'a'
  1040  0075C1  74                 	db	116	;'t'
  1041  0075C2  69                 	db	105	;'i'
  1042  0075C3  6F                 	db	111	;'o'
  1043  0075C4  6E                 	db	110	;'n'
  1044  0075C5  20                 	db	32
  1045  0075C6  20                 	db	32
  1046  0075C7  20                 	db	32
  1047  0075C8  20                 	db	32
  1048  0075C9  20                 	db	32
  1049  0075CA  2A                 	db	42
  1050  0075CB  00                 	db	0
  1051  0075CC                     STR_57:
  1052  0075CC  0A                 	db	10
  1053  0075CD  0D                 	db	13
  1054  0075CE  2A                 	db	42
  1055  0075CF  2A                 	db	42
  1056  0075D0  2A                 	db	42
  1057  0075D1  2A                 	db	42
  1058  0075D2  2A                 	db	42
  1059  0075D3  2A                 	db	42
  1060  0075D4  2A                 	db	42
  1061  0075D5  2A                 	db	42
  1062  0075D6  2A                 	db	42
  1063  0075D7  2A                 	db	42
  1064  0075D8  2A                 	db	42
  1065  0075D9  2A                 	db	42
  1066  0075DA  2A                 	db	42
  1067  0075DB  2A                 	db	42
  1068  0075DC  2A                 	db	42
  1069  0075DD  2A                 	db	42
  1070  0075DE  2A                 	db	42
  1071  0075DF  2A                 	db	42
  1072  0075E0  2A                 	db	42
  1073  0075E1  2A                 	db	42
  1074  0075E2  2A                 	db	42
  1075  0075E3  2A                 	db	42
  1076  0075E4  2A                 	db	42
  1077  0075E5  2A                 	db	42
  1078  0075E6  2A                 	db	42
  1079  0075E7  2A                 	db	42
  1080  0075E8  2A                 	db	42
  1081  0075E9  2A                 	db	42
  1082  0075EA  2A                 	db	42
  1083  0075EB  2A                 	db	42
  1084  0075EC  2A                 	db	42
  1085  0075ED  2A                 	db	42
  1086  0075EE  2A                 	db	42
  1087  0075EF  2A                 	db	42
  1088  0075F0  2A                 	db	42
  1089  0075F1  2A                 	db	42
  1090  0075F2  2A                 	db	42
  1091  0075F3  2A                 	db	42
  1092  0075F4  2A                 	db	42
  1093  0075F5  2A                 	db	42
  1094  0075F6  2A                 	db	42
  1095  0075F7  2A                 	db	42
  1096  0075F8  2A                 	db	42
  1097  0075F9  2A                 	db	42
  1098  0075FA  2A                 	db	42
  1099  0075FB  2A                 	db	42
  1100  0075FC  2A                 	db	42
  1101  0075FD  2A                 	db	42
  1102  0075FE  2A                 	db	42
  1103  0075FF  2A                 	db	42
  1104  007600  2A                 	db	42
  1105  007601  2A                 	db	42
  1106  007602  2A                 	db	42
  1107  007603  2A                 	db	42
  1108  007604  2A                 	db	42
  1109  007605  2A                 	db	42
  1110  007606  2A                 	db	42
  1111  007607  2A                 	db	42
  1112  007608  2A                 	db	42
  1113  007609  2A                 	db	42
  1114  00760A  00                 	db	0
  1115  00760B                     STR_64:
  1116  00760B  0A                 	db	10
  1117  00760C  0D                 	db	13
  1118  00760D  2A                 	db	42
  1119  00760E  2A                 	db	42
  1120  00760F  2A                 	db	42
  1121  007610  2A                 	db	42
  1122  007611  2A                 	db	42
  1123  007612  2A                 	db	42
  1124  007613  2A                 	db	42
  1125  007614  2A                 	db	42
  1126  007615  2A                 	db	42
  1127  007616  2A                 	db	42
  1128  007617  2A                 	db	42
  1129  007618  2A                 	db	42
  1130  007619  2A                 	db	42
  1131  00761A  2A                 	db	42
  1132  00761B  2A                 	db	42
  1133  00761C  2A                 	db	42
  1134  00761D  2A                 	db	42
  1135  00761E  2A                 	db	42
  1136  00761F  2A                 	db	42
  1137  007620  2A                 	db	42
  1138  007621  2A                 	db	42
  1139  007622  2A                 	db	42
  1140  007623  2A                 	db	42
  1141  007624  2A                 	db	42
  1142  007625  4D                 	db	77	;'M'
  1143  007626  41                 	db	65	;'A'
  1144  007627  49                 	db	73	;'I'
  1145  007628  4E                 	db	78	;'N'
  1146  007629  20                 	db	32
  1147  00762A  4D                 	db	77	;'M'
  1148  00762B  45                 	db	69	;'E'
  1149  00762C  4E                 	db	78	;'N'
  1150  00762D  55                 	db	85	;'U'
  1151  00762E  2A                 	db	42
  1152  00762F  2A                 	db	42
  1153  007630  2A                 	db	42
  1154  007631  2A                 	db	42
  1155  007632  2A                 	db	42
  1156  007633  2A                 	db	42
  1157  007634  2A                 	db	42
  1158  007635  2A                 	db	42
  1159  007636  2A                 	db	42
  1160  007637  2A                 	db	42
  1161  007638  2A                 	db	42
  1162  007639  2A                 	db	42
  1163  00763A  2A                 	db	42
  1164  00763B  2A                 	db	42
  1165  00763C  2A                 	db	42
  1166  00763D  2A                 	db	42
  1167  00763E  2A                 	db	42
  1168  00763F  2A                 	db	42
  1169  007640  2A                 	db	42
  1170  007641  2A                 	db	42
  1171  007642  2A                 	db	42
  1172  007643  2A                 	db	42
  1173  007644  2A                 	db	42
  1174  007645  2A                 	db	42
  1175  007646  2A                 	db	42
  1176  007647  2A                 	db	42
  1177  007648  2A                 	db	42
  1178  007649  00                 	db	0
  1179  00764A                     STR_19:
  1180  00764A  0A                 	db	10
  1181  00764B  0D                 	db	13
  1182  00764C  21                 	db	33
  1183  00764D  21                 	db	33
  1184  00764E  21                 	db	33
  1185  00764F  21                 	db	33
  1186  007650  21                 	db	33
  1187  007651  21                 	db	33
  1188  007652  21                 	db	33
  1189  007653  21                 	db	33
  1190  007654  21                 	db	33
  1191  007655  21                 	db	33
  1192  007656  21                 	db	33
  1193  007657  21                 	db	33
  1194  007658  21                 	db	33
  1195  007659  20                 	db	32
  1196  00765A  50                 	db	80	;'P'
  1197  00765B  49                 	db	73	;'I'
  1198  00765C  52                 	db	82	;'R'
  1199  00765D  20                 	db	32
  1200  00765E  53                 	db	83	;'S'
  1201  00765F  45                 	db	69	;'E'
  1202  007660  4E                 	db	78	;'N'
  1203  007661  53                 	db	83	;'S'
  1204  007662  4F                 	db	79	;'O'
  1205  007663  52                 	db	82	;'R'
  1206  007664  20                 	db	32
  1207  007665  48                 	db	72	;'H'
  1208  007666  41                 	db	65	;'A'
  1209  007667  53                 	db	83	;'S'
  1210  007668  20                 	db	32
  1211  007669  44                 	db	68	;'D'
  1212  00766A  45                 	db	69	;'E'
  1213  00766B  54                 	db	84	;'T'
  1214  00766C  45                 	db	69	;'E'
  1215  00766D  43                 	db	67	;'C'
  1216  00766E  54                 	db	84	;'T'
  1217  00766F  45                 	db	69	;'E'
  1218  007670  44                 	db	68	;'D'
  1219  007671  20                 	db	32
  1220  007672  4D                 	db	77	;'M'
  1221  007673  4F                 	db	79	;'O'
  1222  007674  54                 	db	84	;'T'
  1223  007675  49                 	db	73	;'I'
  1224  007676  4F                 	db	79	;'O'
  1225  007677  4E                 	db	78	;'N'
  1226  007678  20                 	db	32
  1227  007679  21                 	db	33
  1228  00767A  21                 	db	33
  1229  00767B  21                 	db	33
  1230  00767C  21                 	db	33
  1231  00767D  21                 	db	33
  1232  00767E  21                 	db	33
  1233  00767F  21                 	db	33
  1234  007680  21                 	db	33
  1235  007681  21                 	db	33
  1236  007682  21                 	db	33
  1237  007683  21                 	db	33
  1238  007684  21                 	db	33
  1239  007685  21                 	db	33
  1240  007686  21                 	db	33
  1241  007687  00                 	db	0
  1242  007688                     STR_72:
  1243  007688  0A                 	db	10
  1244  007689  0D                 	db	13
  1245  00768A  20                 	db	32
  1246  00768B  20                 	db	32
  1247  00768C  20                 	db	32
  1248  00768D  20                 	db	32
  1249  00768E  20                 	db	32
  1250  00768F  20                 	db	32
  1251  007690  20                 	db	32
  1252  007691  20                 	db	32
  1253  007692  20                 	db	32
  1254  007693  35                 	db	53	;'5'
  1255  007694  2E                 	db	46
  1256  007695  20                 	db	32
  1257  007696  55                 	db	85	;'U'
  1258  007697  73                 	db	115	;'s'
  1259  007698  65                 	db	101	;'e'
  1260  007699  20                 	db	32
  1261  00769A  4B                 	db	75	;'K'
  1262  00769B  65                 	db	101	;'e'
  1263  00769C  79                 	db	121	;'y'
  1264  00769D  70                 	db	112	;'p'
  1265  00769E  61                 	db	97	;'a'
  1266  00769F  64                 	db	100	;'d'
  1267  0076A0  20                 	db	32
  1268  0076A1  41                 	db	65	;'A'
  1269  0076A2  73                 	db	115	;'s'
  1270  0076A3  20                 	db	32
  1271  0076A4  54                 	db	84	;'T'
  1272  0076A5  68                 	db	104	;'h'
  1273  0076A6  65                 	db	101	;'e'
  1274  0076A7  20                 	db	32
  1275  0076A8  4F                 	db	79	;'O'
  1276  0076A9  6E                 	db	110	;'n'
  1277  0076AA  6C                 	db	108	;'l'
  1278  0076AB  79                 	db	121	;'y'
  1279  0076AC  20                 	db	32
  1280  0076AD  49                 	db	73	;'I'
  1281  0076AE  6E                 	db	110	;'n'
  1282  0076AF  70                 	db	112	;'p'
  1283  0076B0  75                 	db	117	;'u'
  1284  0076B1  74                 	db	116	;'t'
  1285  0076B2  20                 	db	32
  1286  0076B3  28                 	db	40
  1287  0076B4  27                 	db	39
  1288  0076B5  44                 	db	68	;'D'
  1289  0076B6  27                 	db	39
  1290  0076B7  20                 	db	32
  1291  0076B8  3D                 	db	61	;'='
  1292  0076B9  20                 	db	32
  1293  0076BA  45                 	db	69	;'E'
  1294  0076BB  6E                 	db	110	;'n'
  1295  0076BC  74                 	db	116	;'t'
  1296  0076BD  65                 	db	101	;'e'
  1297  0076BE  72                 	db	114	;'r'
  1298  0076BF  20                 	db	32
  1299  0076C0  4B                 	db	75	;'K'
  1300  0076C1  65                 	db	101	;'e'
  1301  0076C2  79                 	db	121	;'y'
  1302  0076C3  29                 	db	41
  1303  0076C4  00                 	db	0
  1304  0076C5                     STR_84:
  1305  0076C5  0A                 	db	10
  1306  0076C6  0D                 	db	13
  1307  0076C7  2A                 	db	42
  1308  0076C8  2A                 	db	42
  1309  0076C9  2A                 	db	42
  1310  0076CA  2A                 	db	42
  1311  0076CB  2A                 	db	42
  1312  0076CC  2A                 	db	42
  1313  0076CD  2A                 	db	42
  1314  0076CE  2A                 	db	42
  1315  0076CF  2A                 	db	42
  1316  0076D0  2A                 	db	42
  1317  0076D1  2A                 	db	42
  1318  0076D2  2A                 	db	42
  1319  0076D3  2A                 	db	42
  1320  0076D4  2A                 	db	42
  1321  0076D5  2A                 	db	42
  1322  0076D6  2A                 	db	42
  1323  0076D7  2A                 	db	42
  1324  0076D8  2A                 	db	42
  1325  0076D9  2A                 	db	42
  1326  0076DA  2A                 	db	42
  1327  0076DB  50                 	db	80	;'P'
  1328  0076DC  41                 	db	65	;'A'
  1329  0076DD  53                 	db	83	;'S'
  1330  0076DE  53                 	db	83	;'S'
  1331  0076DF  43                 	db	67	;'C'
  1332  0076E0  4F                 	db	79	;'O'
  1333  0076E1  44                 	db	68	;'D'
  1334  0076E2  45                 	db	69	;'E'
  1335  0076E3  20                 	db	32
  1336  0076E4  4D                 	db	77	;'M'
  1337  0076E5  45                 	db	69	;'E'
  1338  0076E6  4E                 	db	78	;'N'
  1339  0076E7  55                 	db	85	;'U'
  1340  0076E8  2A                 	db	42
  1341  0076E9  2A                 	db	42
  1342  0076EA  2A                 	db	42
  1343  0076EB  2A                 	db	42
  1344  0076EC  2A                 	db	42
  1345  0076ED  2A                 	db	42
  1346  0076EE  2A                 	db	42
  1347  0076EF  2A                 	db	42
  1348  0076F0  2A                 	db	42
  1349  0076F1  2A                 	db	42
  1350  0076F2  2A                 	db	42
  1351  0076F3  2A                 	db	42
  1352  0076F4  2A                 	db	42
  1353  0076F5  2A                 	db	42
  1354  0076F6  2A                 	db	42
  1355  0076F7  2A                 	db	42
  1356  0076F8  2A                 	db	42
  1357  0076F9  2A                 	db	42
  1358  0076FA  2A                 	db	42
  1359  0076FB  2A                 	db	42
  1360  0076FC  2A                 	db	42
  1361  0076FD  2A                 	db	42
  1362  0076FE  2A                 	db	42
  1363  0076FF  2A                 	db	42
  1364  007700  00                 	db	0
  1365  007701                     STR_92:
  1366  007701  0A                 	db	10
  1367  007702  0D                 	db	13
  1368  007703  2A                 	db	42
  1369  007704  2A                 	db	42
  1370  007705  2A                 	db	42
  1371  007706  2A                 	db	42
  1372  007707  2A                 	db	42
  1373  007708  2A                 	db	42
  1374  007709  2A                 	db	42
  1375  00770A  2A                 	db	42
  1376  00770B  2A                 	db	42
  1377  00770C  2A                 	db	42
  1378  00770D  2A                 	db	42
  1379  00770E  2A                 	db	42
  1380  00770F  2A                 	db	42
  1381  007710  2A                 	db	42
  1382  007711  2A                 	db	42
  1383  007712  2A                 	db	42
  1384  007713  2A                 	db	42
  1385  007714  2A                 	db	42
  1386  007715  2A                 	db	42
  1387  007716  43                 	db	67	;'C'
  1388  007717  68                 	db	104	;'h'
  1389  007718  61                 	db	97	;'a'
  1390  007719  6E                 	db	110	;'n'
  1391  00771A  67                 	db	103	;'g'
  1392  00771B  65                 	db	101	;'e'
  1393  00771C  20                 	db	32
  1394  00771D  50                 	db	80	;'P'
  1395  00771E  61                 	db	97	;'a'
  1396  00771F  73                 	db	115	;'s'
  1397  007720  73                 	db	115	;'s'
  1398  007721  63                 	db	99	;'c'
  1399  007722  6F                 	db	111	;'o'
  1400  007723  64                 	db	100	;'d'
  1401  007724  65                 	db	101	;'e'
  1402  007725  2A                 	db	42
  1403  007726  2A                 	db	42
  1404  007727  2A                 	db	42
  1405  007728  2A                 	db	42
  1406  007729  2A                 	db	42
  1407  00772A  2A                 	db	42
  1408  00772B  2A                 	db	42
  1409  00772C  2A                 	db	42
  1410  00772D  2A                 	db	42
  1411  00772E  2A                 	db	42
  1412  00772F  2A                 	db	42
  1413  007730  2A                 	db	42
  1414  007731  2A                 	db	42
  1415  007732  2A                 	db	42
  1416  007733  2A                 	db	42
  1417  007734  2A                 	db	42
  1418  007735  2A                 	db	42
  1419  007736  2A                 	db	42
  1420  007737  2A                 	db	42
  1421  007738  2A                 	db	42
  1422  007739  2A                 	db	42
  1423  00773A  2A                 	db	42
  1424  00773B  2A                 	db	42
  1425  00773C  00                 	db	0
  1426  00773D                     STR_73:
  1427  00773D  0A                 	db	10
  1428  00773E  0D                 	db	13
  1429  00773F  20                 	db	32
  1430  007740  20                 	db	32
  1431  007741  20                 	db	32
  1432  007742  20                 	db	32
  1433  007743  20                 	db	32
  1434  007744  20                 	db	32
  1435  007745  20                 	db	32
  1436  007746  20                 	db	32
  1437  007747  20                 	db	32
  1438  007748  36                 	db	54	;'6'
  1439  007749  2E                 	db	46
  1440  00774A  20                 	db	32
  1441  00774B  55                 	db	85	;'U'
  1442  00774C  73                 	db	115	;'s'
  1443  00774D  65                 	db	101	;'e'
  1444  00774E  20                 	db	32
  1445  00774F  42                 	db	66	;'B'
  1446  007750  4F                 	db	79	;'O'
  1447  007751  54                 	db	84	;'T'
  1448  007752  48                 	db	72	;'H'
  1449  007753  20                 	db	32
  1450  007754  54                 	db	84	;'T'
  1451  007755  68                 	db	104	;'h'
  1452  007756  65                 	db	101	;'e'
  1453  007757  20                 	db	32
  1454  007758  4B                 	db	75	;'K'
  1455  007759  65                 	db	101	;'e'
  1456  00775A  79                 	db	121	;'y'
  1457  00775B  62                 	db	98	;'b'
  1458  00775C  6F                 	db	111	;'o'
  1459  00775D  61                 	db	97	;'a'
  1460  00775E  72                 	db	114	;'r'
  1461  00775F  64                 	db	100	;'d'
  1462  007760  20                 	db	32
  1463  007761  61                 	db	97	;'a'
  1464  007762  6E                 	db	110	;'n'
  1465  007763  64                 	db	100	;'d'
  1466  007764  20                 	db	32
  1467  007765  4B                 	db	75	;'K'
  1468  007766  65                 	db	101	;'e'
  1469  007767  79                 	db	121	;'y'
  1470  007768  70                 	db	112	;'p'
  1471  007769  61                 	db	97	;'a'
  1472  00776A  64                 	db	100	;'d'
  1473  00776B  20                 	db	32
  1474  00776C  41                 	db	65	;'A'
  1475  00776D  73                 	db	115	;'s'
  1476  00776E  20                 	db	32
  1477  00776F  54                 	db	84	;'T'
  1478  007770  68                 	db	104	;'h'
  1479  007771  65                 	db	101	;'e'
  1480  007772  20                 	db	32
  1481  007773  49                 	db	73	;'I'
  1482  007774  6E                 	db	110	;'n'
  1483  007775  70                 	db	112	;'p'
  1484  007776  75                 	db	117	;'u'
  1485  007777  74                 	db	116	;'t'
  1486  007778  00                 	db	0
  1487  007779                     STR_105:
  1488  007779  0A                 	db	10
  1489  00777A  0D                 	db	13
  1490  00777B  54                 	db	84	;'T'
  1491  00777C  68                 	db	104	;'h'
  1492  00777D  69                 	db	105	;'i'
  1493  00777E  73                 	db	115	;'s'
  1494  00777F  20                 	db	32
  1495  007780  69                 	db	105	;'i'
  1496  007781  73                 	db	115	;'s'
  1497  007782  20                 	db	32
  1498  007783  79                 	db	121	;'y'
  1499  007784  6F                 	db	111	;'o'
  1500  007785  75                 	db	117	;'u'
  1501  007786  72                 	db	114	;'r'
  1502  007787  20                 	db	32
  1503  007788  66                 	db	102	;'f'
  1504  007789  69                 	db	105	;'i'
  1505  00778A  72                 	db	114	;'r'
  1506  00778B  73                 	db	115	;'s'
  1507  00778C  74                 	db	116	;'t'
  1508  00778D  20                 	db	32
  1509  00778E  74                 	db	116	;'t'
  1510  00778F  69                 	db	105	;'i'
  1511  007790  6D                 	db	109	;'m'
  1512  007791  65                 	db	101	;'e'
  1513  007792  2E                 	db	46
  1514  007793  20                 	db	32
  1515  007794  53                 	db	83	;'S'
  1516  007795  6F                 	db	111	;'o'
  1517  007796  2C                 	db	44
  1518  007797  20                 	db	32
  1519  007798  4C                 	db	76	;'L'
  1520  007799  65                 	db	101	;'e'
  1521  00779A  74                 	db	116	;'t'
  1522  00779B  27                 	db	39
  1523  00779C  73                 	db	115	;'s'
  1524  00779D  20                 	db	32
  1525  00779E  73                 	db	115	;'s'
  1526  00779F  65                 	db	101	;'e'
  1527  0077A0  74                 	db	116	;'t'
  1528  0077A1  20                 	db	32
  1529  0077A2  75                 	db	117	;'u'
  1530  0077A3  70                 	db	112	;'p'
  1531  0077A4  20                 	db	32
  1532  0077A5  79                 	db	121	;'y'
  1533  0077A6  6F                 	db	111	;'o'
  1534  0077A7  75                 	db	117	;'u'
  1535  0077A8  72                 	db	114	;'r'
  1536  0077A9  20                 	db	32
  1537  0077AA  70                 	db	112	;'p'
  1538  0077AB  61                 	db	97	;'a'
  1539  0077AC  73                 	db	115	;'s'
  1540  0077AD  73                 	db	115	;'s'
  1541  0077AE  63                 	db	99	;'c'
  1542  0077AF  6F                 	db	111	;'o'
  1543  0077B0  64                 	db	100	;'d'
  1544  0077B1  65                 	db	101	;'e'
  1545  0077B2  2E                 	db	46
  1546  0077B3  00                 	db	0
  1547  0077B4                     STR_143:
  1548  0077B4  0A                 	db	10
  1549  0077B5  0D                 	db	13
  1550  0077B6  4E                 	db	78	;'N'
  1551  0077B7  65                 	db	101	;'e'
  1552  0077B8  77                 	db	119	;'w'
  1553  0077B9  20                 	db	32
  1554  0077BA  54                 	db	84	;'T'
  1555  0077BB  65                 	db	101	;'e'
  1556  0077BC  6D                 	db	109	;'m'
  1557  0077BD  70                 	db	112	;'p'
  1558  0077BE  65                 	db	101	;'e'
  1559  0077BF  72                 	db	114	;'r'
  1560  0077C0  61                 	db	97	;'a'
  1561  0077C1  74                 	db	116	;'t'
  1562  0077C2  75                 	db	117	;'u'
  1563  0077C3  72                 	db	114	;'r'
  1564  0077C4  65                 	db	101	;'e'
  1565  0077C5  20                 	db	32
  1566  0077C6  53                 	db	83	;'S'
  1567  0077C7  65                 	db	101	;'e'
  1568  0077C8  6E                 	db	110	;'n'
  1569  0077C9  73                 	db	115	;'s'
  1570  0077CA  6F                 	db	111	;'o'
  1571  0077CB  72                 	db	114	;'r'
  1572  0077CC  20                 	db	32
  1573  0077CD  41                 	db	65	;'A'
  1574  0077CE  6C                 	db	108	;'l'
  1575  0077CF  61                 	db	97	;'a'
  1576  0077D0  72                 	db	114	;'r'
  1577  0077D1  6D                 	db	109	;'m'
  1578  0077D2  20                 	db	32
  1579  0077D3  54                 	db	84	;'T'
  1580  0077D4  68                 	db	104	;'h'
  1581  0077D5  72                 	db	114	;'r'
  1582  0077D6  65                 	db	101	;'e'
  1583  0077D7  73                 	db	115	;'s'
  1584  0077D8  68                 	db	104	;'h'
  1585  0077D9  6F                 	db	111	;'o'
  1586  0077DA  6C                 	db	108	;'l'
  1587  0077DB  64                 	db	100	;'d'
  1588  0077DC  20                 	db	32
  1589  0077DD  68                 	db	104	;'h'
  1590  0077DE  61                 	db	97	;'a'
  1591  0077DF  73                 	db	115	;'s'
  1592  0077E0  20                 	db	32
  1593  0077E1  62                 	db	98	;'b'
  1594  0077E2  65                 	db	101	;'e'
  1595  0077E3  65                 	db	101	;'e'
  1596  0077E4  6E                 	db	110	;'n'
  1597  0077E5  20                 	db	32
  1598  0077E6  73                 	db	115	;'s'
  1599  0077E7  65                 	db	101	;'e'
  1600  0077E8  74                 	db	116	;'t'
  1601  0077E9  2E                 	db	46
  1602  0077EA  2E                 	db	46
  1603  0077EB  00                 	db	0
  1604  0077EC                     STR_71:
  1605  0077EC  0A                 	db	10
  1606  0077ED  0D                 	db	13
  1607  0077EE  20                 	db	32
  1608  0077EF  20                 	db	32
  1609  0077F0  20                 	db	32
  1610  0077F1  20                 	db	32
  1611  0077F2  20                 	db	32
  1612  0077F3  20                 	db	32
  1613  0077F4  20                 	db	32
  1614  0077F5  20                 	db	32
  1615  0077F6  20                 	db	32
  1616  0077F7  34                 	db	52	;'4'
  1617  0077F8  2E                 	db	46
  1618  0077F9  20                 	db	32
  1619  0077FA  55                 	db	85	;'U'
  1620  0077FB  73                 	db	115	;'s'
  1621  0077FC  65                 	db	101	;'e'
  1622  0077FD  20                 	db	32
  1623  0077FE  4B                 	db	75	;'K'
  1624  0077FF  65                 	db	101	;'e'
  1625  007800  79                 	db	121	;'y'
  1626  007801  62                 	db	98	;'b'
  1627  007802  6F                 	db	111	;'o'
  1628  007803  61                 	db	97	;'a'
  1629  007804  72                 	db	114	;'r'
  1630  007805  64                 	db	100	;'d'
  1631  007806  20                 	db	32
  1632  007807  28                 	db	40
  1633  007808  54                 	db	84	;'T'
  1634  007809  65                 	db	101	;'e'
  1635  00780A  72                 	db	114	;'r'
  1636  00780B  6D                 	db	109	;'m'
  1637  00780C  69                 	db	105	;'i'
  1638  00780D  6E                 	db	110	;'n'
  1639  00780E  61                 	db	97	;'a'
  1640  00780F  6C                 	db	108	;'l'
  1641  007810  29                 	db	41
  1642  007811  20                 	db	32
  1643  007812  41                 	db	65	;'A'
  1644  007813  73                 	db	115	;'s'
  1645  007814  20                 	db	32
  1646  007815  54                 	db	84	;'T'
  1647  007816  68                 	db	104	;'h'
  1648  007817  65                 	db	101	;'e'
  1649  007818  20                 	db	32
  1650  007819  4F                 	db	79	;'O'
  1651  00781A  6E                 	db	110	;'n'
  1652  00781B  6C                 	db	108	;'l'
  1653  00781C  79                 	db	121	;'y'
  1654  00781D  20                 	db	32
  1655  00781E  49                 	db	73	;'I'
  1656  00781F  6E                 	db	110	;'n'
  1657  007820  70                 	db	112	;'p'
  1658  007821  75                 	db	117	;'u'
  1659  007822  74                 	db	116	;'t'
  1660  007823  00                 	db	0
  1661  007824                     STR_29:
  1662  007824  0A                 	db	10
  1663  007825  0D                 	db	13
  1664  007826  44                 	db	68	;'D'
  1665  007827  6F                 	db	111	;'o'
  1666  007828  20                 	db	32
  1667  007829  79                 	db	121	;'y'
  1668  00782A  6F                 	db	111	;'o'
  1669  00782B  75                 	db	117	;'u'
  1670  00782C  20                 	db	32
  1671  00782D  77                 	db	119	;'w'
  1672  00782E  61                 	db	97	;'a'
  1673  00782F  6E                 	db	110	;'n'
  1674  007830  74                 	db	116	;'t'
  1675  007831  20                 	db	32
  1676  007832  74                 	db	116	;'t'
  1677  007833  6F                 	db	111	;'o'
  1678  007834  20                 	db	32
  1679  007835  64                 	db	100	;'d'
  1680  007836  69                 	db	105	;'i'
  1681  007837  73                 	db	115	;'s'
  1682  007838  61                 	db	97	;'a'
  1683  007839  62                 	db	98	;'b'
  1684  00783A  6C                 	db	108	;'l'
  1685  00783B  65                 	db	101	;'e'
  1686  00783C  20                 	db	32
  1687  00783D  74                 	db	116	;'t'
  1688  00783E  68                 	db	104	;'h'
  1689  00783F  65                 	db	101	;'e'
  1690  007840  20                 	db	32
  1691  007841  61                 	db	97	;'a'
  1692  007842  6C                 	db	108	;'l'
  1693  007843  61                 	db	97	;'a'
  1694  007844  72                 	db	114	;'r'
  1695  007845  6D                 	db	109	;'m'
  1696  007846  20                 	db	32
  1697  007847  6F                 	db	111	;'o'
  1698  007848  72                 	db	114	;'r'
  1699  007849  20                 	db	32
  1700  00784A  6B                 	db	107	;'k'
  1701  00784B  65                 	db	101	;'e'
  1702  00784C  65                 	db	101	;'e'
  1703  00784D  70                 	db	112	;'p'
  1704  00784E  20                 	db	32
  1705  00784F  65                 	db	101	;'e'
  1706  007850  6E                 	db	110	;'n'
  1707  007851  61                 	db	97	;'a'
  1708  007852  62                 	db	98	;'b'
  1709  007853  6C                 	db	108	;'l'
  1710  007854  65                 	db	101	;'e'
  1711  007855  64                 	db	100	;'d'
  1712  007856  3F                 	db	63	;'?'
  1713  007857  00                 	db	0
  1714  007858                     STR_40:
  1715  007858  0A                 	db	10
  1716  007859  0D                 	db	13
  1717  00785A  44                 	db	68	;'D'
  1718  00785B  6F                 	db	111	;'o'
  1719  00785C  20                 	db	32
  1720  00785D  79                 	db	121	;'y'
  1721  00785E  6F                 	db	111	;'o'
  1722  00785F  75                 	db	117	;'u'
  1723  007860  20                 	db	32
  1724  007861  77                 	db	119	;'w'
  1725  007862  61                 	db	97	;'a'
  1726  007863  6E                 	db	110	;'n'
  1727  007864  74                 	db	116	;'t'
  1728  007865  20                 	db	32
  1729  007866  74                 	db	116	;'t'
  1730  007867  6F                 	db	111	;'o'
  1731  007868  20                 	db	32
  1732  007869  63                 	db	99	;'c'
  1733  00786A  68                 	db	104	;'h'
  1734  00786B  61                 	db	97	;'a'
  1735  00786C  6E                 	db	110	;'n'
  1736  00786D  67                 	db	103	;'g'
  1737  00786E  65                 	db	101	;'e'
  1738  00786F  20                 	db	32
  1739  007870  74                 	db	116	;'t'
  1740  007871  68                 	db	104	;'h'
  1741  007872  65                 	db	101	;'e'
  1742  007873  20                 	db	32
  1743  007874  54                 	db	84	;'T'
  1744  007875  65                 	db	101	;'e'
  1745  007876  6D                 	db	109	;'m'
  1746  007877  70                 	db	112	;'p'
  1747  007878  65                 	db	101	;'e'
  1748  007879  72                 	db	114	;'r'
  1749  00787A  61                 	db	97	;'a'
  1750  00787B  74                 	db	116	;'t'
  1751  00787C  75                 	db	117	;'u'
  1752  00787D  72                 	db	114	;'r'
  1753  00787E  65                 	db	101	;'e'
  1754  00787F  20                 	db	32
  1755  007880  54                 	db	84	;'T'
  1756  007881  68                 	db	104	;'h'
  1757  007882  72                 	db	114	;'r'
  1758  007883  65                 	db	101	;'e'
  1759  007884  73                 	db	115	;'s'
  1760  007885  68                 	db	104	;'h'
  1761  007886  6F                 	db	111	;'o'
  1762  007887  6C                 	db	108	;'l'
  1763  007888  64                 	db	100	;'d'
  1764  007889  2E                 	db	46
  1765  00788A  00                 	db	0
  1766  00788B                     STR_4:
  1767  00788B  0A                 	db	10
  1768  00788C  0D                 	db	13
  1769  00788D  44                 	db	68	;'D'
  1770  00788E  69                 	db	105	;'i'
  1771  00788F  73                 	db	115	;'s'
  1772  007890  61                 	db	97	;'a'
  1773  007891  62                 	db	98	;'b'
  1774  007892  6C                 	db	108	;'l'
  1775  007893  65                 	db	101	;'e'
  1776  007894  20                 	db	32
  1777  007895  6F                 	db	111	;'o'
  1778  007896  72                 	db	114	;'r'
  1779  007897  20                 	db	32
  1780  007898  4B                 	db	75	;'K'
  1781  007899  65                 	db	101	;'e'
  1782  00789A  65                 	db	101	;'e'
  1783  00789B  70                 	db	112	;'p'
  1784  00789C  20                 	db	32
  1785  00789D  65                 	db	101	;'e'
  1786  00789E  6E                 	db	110	;'n'
  1787  00789F  61                 	db	97	;'a'
  1788  0078A0  62                 	db	98	;'b'
  1789  0078A1  6C                 	db	108	;'l'
  1790  0078A2  65                 	db	101	;'e'
  1791  0078A3  64                 	db	100	;'d'
  1792  0078A4  20                 	db	32
  1793  0078A5  74                 	db	116	;'t'
  1794  0078A6  68                 	db	104	;'h'
  1795  0078A7  65                 	db	101	;'e'
  1796  0078A8  20                 	db	32
  1797  0078A9  50                 	db	80	;'P'
  1798  0078AA  49                 	db	73	;'I'
  1799  0078AB  52                 	db	82	;'R'
  1800  0078AC  20                 	db	32
  1801  0078AD  53                 	db	83	;'S'
  1802  0078AE  65                 	db	101	;'e'
  1803  0078AF  6E                 	db	110	;'n'
  1804  0078B0  73                 	db	115	;'s'
  1805  0078B1  6F                 	db	111	;'o'
  1806  0078B2  72                 	db	114	;'r'
  1807  0078B3  20                 	db	32
  1808  0078B4  41                 	db	65	;'A'
  1809  0078B5  6C                 	db	108	;'l'
  1810  0078B6  61                 	db	97	;'a'
  1811  0078B7  72                 	db	114	;'r'
  1812  0078B8  6D                 	db	109	;'m'
  1813  0078B9  3F                 	db	63	;'?'
  1814  0078BA  00                 	db	0
  1815  0078BB                     STR_82:
  1816  0078BB  0A                 	db	10
  1817  0078BC  0D                 	db	13
  1818  0078BD  20                 	db	32
  1819  0078BE  20                 	db	32
  1820  0078BF  20                 	db	32
  1821  0078C0  20                 	db	32
  1822  0078C1  20                 	db	32
  1823  0078C2  20                 	db	32
  1824  0078C3  20                 	db	32
  1825  0078C4  20                 	db	32
  1826  0078C5  20                 	db	32
  1827  0078C6  49                 	db	73	;'I'
  1828  0078C7  6E                 	db	110	;'n'
  1829  0078C8  63                 	db	99	;'c'
  1830  0078C9  6F                 	db	111	;'o'
  1831  0078CA  72                 	db	114	;'r'
  1832  0078CB  72                 	db	114	;'r'
  1833  0078CC  65                 	db	101	;'e'
  1834  0078CD  63                 	db	99	;'c'
  1835  0078CE  74                 	db	116	;'t'
  1836  0078CF  20                 	db	32
  1837  0078D0  49                 	db	73	;'I'
  1838  0078D1  6E                 	db	110	;'n'
  1839  0078D2  70                 	db	112	;'p'
  1840  0078D3  75                 	db	117	;'u'
  1841  0078D4  74                 	db	116	;'t'
  1842  0078D5  20                 	db	32
  1843  0078D6  6F                 	db	111	;'o'
  1844  0078D7  70                 	db	112	;'p'
  1845  0078D8  74                 	db	116	;'t'
  1846  0078D9  69                 	db	105	;'i'
  1847  0078DA  6F                 	db	111	;'o'
  1848  0078DB  6E                 	db	110	;'n'
  1849  0078DC  73                 	db	115	;'s'
  1850  0078DD  20                 	db	32
  1851  0078DE  73                 	db	115	;'s'
  1852  0078DF  65                 	db	101	;'e'
  1853  0078E0  6C                 	db	108	;'l'
  1854  0078E1  65                 	db	101	;'e'
  1855  0078E2  63                 	db	99	;'c'
  1856  0078E3  74                 	db	116	;'t'
  1857  0078E4  65                 	db	101	;'e'
  1858  0078E5  64                 	db	100	;'d'
  1859  0078E6  21                 	db	33
  1860  0078E7  21                 	db	33
  1861  0078E8  21                 	db	33
  1862  0078E9  00                 	db	0
  1863  0078EA                     STR_70:
  1864  0078EA  0A                 	db	10
  1865  0078EB  0D                 	db	13
  1866  0078EC  20                 	db	32
  1867  0078ED  20                 	db	32
  1868  0078EE  20                 	db	32
  1869  0078EF  20                 	db	32
  1870  0078F0  20                 	db	32
  1871  0078F1  20                 	db	32
  1872  0078F2  20                 	db	32
  1873  0078F3  20                 	db	32
  1874  0078F4  20                 	db	32
  1875  0078F5  33                 	db	51	;'3'
  1876  0078F6  2E                 	db	46
  1877  0078F7  20                 	db	32
  1878  0078F8  54                 	db	84	;'T'
  1879  0078F9  65                 	db	101	;'e'
  1880  0078FA  6D                 	db	109	;'m'
  1881  0078FB  70                 	db	112	;'p'
  1882  0078FC  65                 	db	101	;'e'
  1883  0078FD  72                 	db	114	;'r'
  1884  0078FE  61                 	db	97	;'a'
  1885  0078FF  74                 	db	116	;'t'
  1886  007900  75                 	db	117	;'u'
  1887  007901  72                 	db	114	;'r'
  1888  007902  65                 	db	101	;'e'
  1889  007903  20                 	db	32
  1890  007904  53                 	db	83	;'S'
  1891  007905  65                 	db	101	;'e'
  1892  007906  6E                 	db	110	;'n'
  1893  007907  73                 	db	115	;'s'
  1894  007908  6F                 	db	111	;'o'
  1895  007909  72                 	db	114	;'r'
  1896  00790A  20                 	db	32
  1897  00790B  41                 	db	65	;'A'
  1898  00790C  6C                 	db	108	;'l'
  1899  00790D  61                 	db	97	;'a'
  1900  00790E  72                 	db	114	;'r'
  1901  00790F  6D                 	db	109	;'m'
  1902  007910  20                 	db	32
  1903  007911  4F                 	db	79	;'O'
  1904  007912  70                 	db	112	;'p'
  1905  007913  74                 	db	116	;'t'
  1906  007914  69                 	db	105	;'i'
  1907  007915  6F                 	db	111	;'o'
  1908  007916  6E                 	db	110	;'n'
  1909  007917  73                 	db	115	;'s'
  1910  007918  00                 	db	0
  1911  007919                     STR_9:
  1912  007919  0A                 	db	10
  1913  00791A  0D                 	db	13
  1914  00791B  50                 	db	80	;'P'
  1915  00791C  6C                 	db	108	;'l'
  1916  00791D  65                 	db	101	;'e'
  1917  00791E  61                 	db	97	;'a'
  1918  00791F  73                 	db	115	;'s'
  1919  007920  65                 	db	101	;'e'
  1920  007921  20                 	db	32
  1921  007922  70                 	db	112	;'p'
  1922  007923  72                 	db	114	;'r'
  1923  007924  65                 	db	101	;'e'
  1924  007925  73                 	db	115	;'s'
  1925  007926  73                 	db	115	;'s'
  1926  007927  20                 	db	32
  1927  007928  27                 	db	39
  1928  007929  30                 	db	48	;'0'
  1929  00792A  27                 	db	39
  1930  00792B  20                 	db	32
  1931  00792C  61                 	db	97	;'a'
  1932  00792D  6E                 	db	110	;'n'
  1933  00792E  64                 	db	100	;'d'
  1934  00792F  20                 	db	32
  1935  007930  27                 	db	39
  1936  007931  45                 	db	69	;'E'
  1937  007932  6E                 	db	110	;'n'
  1938  007933  74                 	db	116	;'t'
  1939  007934  65                 	db	101	;'e'
  1940  007935  72                 	db	114	;'r'
  1941  007936  27                 	db	39
  1942  007937  20                 	db	32
  1943  007938  74                 	db	116	;'t'
  1944  007939  6F                 	db	111	;'o'
  1945  00793A  20                 	db	32
  1946  00793B  63                 	db	99	;'c'
  1947  00793C  6F                 	db	111	;'o'
  1948  00793D  6E                 	db	110	;'n'
  1949  00793E  74                 	db	116	;'t'
  1950  00793F  69                 	db	105	;'i'
  1951  007940  6E                 	db	110	;'n'
  1952  007941  75                 	db	117	;'u'
  1953  007942  65                 	db	101	;'e'
  1954  007943  3A                 	db	58	;':'
  1955  007944  20                 	db	32
  1956  007945  00                 	db	0
  1957  007946                     STR_130:
  1958  007946  0A                 	db	10
  1959  007947  0D                 	db	13
  1960  007948  20                 	db	32
  1961  007949  20                 	db	32
  1962  00794A  20                 	db	32
  1963  00794B  20                 	db	32
  1964  00794C  20                 	db	32
  1965  00794D  33                 	db	51	;'3'
  1966  00794E  2E                 	db	46
  1967  00794F  20                 	db	32
  1968  007950  43                 	db	67	;'C'
  1969  007951  68                 	db	104	;'h'
  1970  007952  61                 	db	97	;'a'
  1971  007953  6E                 	db	110	;'n'
  1972  007954  67                 	db	103	;'g'
  1973  007955  65                 	db	101	;'e'
  1974  007956  20                 	db	32
  1975  007957  54                 	db	84	;'T'
  1976  007958  65                 	db	101	;'e'
  1977  007959  6D                 	db	109	;'m'
  1978  00795A  70                 	db	112	;'p'
  1979  00795B  65                 	db	101	;'e'
  1980  00795C  72                 	db	114	;'r'
  1981  00795D  61                 	db	97	;'a'
  1982  00795E  74                 	db	116	;'t'
  1983  00795F  75                 	db	117	;'u'
  1984  007960  72                 	db	114	;'r'
  1985  007961  65                 	db	101	;'e'
  1986  007962  20                 	db	32
  1987  007963  61                 	db	97	;'a'
  1988  007964  6C                 	db	108	;'l'
  1989  007965  61                 	db	97	;'a'
  1990  007966  72                 	db	114	;'r'
  1991  007967  6D                 	db	109	;'m'
  1992  007968  20                 	db	32
  1993  007969  54                 	db	84	;'T'
  1994  00796A  68                 	db	104	;'h'
  1995  00796B  72                 	db	114	;'r'
  1996  00796C  65                 	db	101	;'e'
  1997  00796D  73                 	db	115	;'s'
  1998  00796E  68                 	db	104	;'h'
  1999  00796F  6F                 	db	111	;'o'
  2000  007970  6C                 	db	108	;'l'
  2001  007971  64                 	db	100	;'d'
  2002  007972  00                 	db	0
  2003  007973                     STR_48:
  2004  007973  0A                 	db	10
  2005  007974  0D                 	db	13
  2006  007975  49                 	db	73	;'I'
  2007  007976  6E                 	db	110	;'n'
  2008  007977  63                 	db	99	;'c'
  2009  007978  6F                 	db	111	;'o'
  2010  007979  72                 	db	114	;'r'
  2011  00797A  72                 	db	114	;'r'
  2012  00797B  65                 	db	101	;'e'
  2013  00797C  63                 	db	99	;'c'
  2014  00797D  74                 	db	116	;'t'
  2015  00797E  20                 	db	32
  2016  00797F  50                 	db	80	;'P'
  2017  007980  61                 	db	97	;'a'
  2018  007981  73                 	db	115	;'s'
  2019  007982  73                 	db	115	;'s'
  2020  007983  77                 	db	119	;'w'
  2021  007984  6F                 	db	111	;'o'
  2022  007985  72                 	db	114	;'r'
  2023  007986  64                 	db	100	;'d'
  2024  007987  20                 	db	32
  2025  007988  45                 	db	69	;'E'
  2026  007989  6E                 	db	110	;'n'
  2027  00798A  74                 	db	116	;'t'
  2028  00798B  65                 	db	101	;'e'
  2029  00798C  72                 	db	114	;'r'
  2030  00798D  65                 	db	101	;'e'
  2031  00798E  64                 	db	100	;'d'
  2032  00798F  21                 	db	33
  2033  007990  21                 	db	33
  2034  007991  0A                 	db	10
  2035  007992  0D                 	db	13
  2036  007993  54                 	db	84	;'T'
  2037  007994  72                 	db	114	;'r'
  2038  007995  79                 	db	121	;'y'
  2039  007996  20                 	db	32
  2040  007997  41                 	db	65	;'A'
  2041  007998  67                 	db	103	;'g'
  2042  007999  61                 	db	97	;'a'
  2043  00799A  69                 	db	105	;'i'
  2044  00799B  6E                 	db	110	;'n'
  2045  00799C  21                 	db	33
  2046  00799D  21                 	db	33
  2047  00799E  00                 	db	0
  2048  00799F                     STR_33:
  2049  00799F  0A                 	db	10
  2050  0079A0  0D                 	db	13
  2051  0079A1  54                 	db	84	;'T'
  2052  0079A2  65                 	db	101	;'e'
  2053  0079A3  6D                 	db	109	;'m'
  2054  0079A4  70                 	db	112	;'p'
  2055  0079A5  65                 	db	101	;'e'
  2056  0079A6  72                 	db	114	;'r'
  2057  0079A7  61                 	db	97	;'a'
  2058  0079A8  74                 	db	116	;'t'
  2059  0079A9  75                 	db	117	;'u'
  2060  0079AA  72                 	db	114	;'r'
  2061  0079AB  65                 	db	101	;'e'
  2062  0079AC  20                 	db	32
  2063  0079AD  53                 	db	83	;'S'
  2064  0079AE  65                 	db	101	;'e'
  2065  0079AF  6E                 	db	110	;'n'
  2066  0079B0  73                 	db	115	;'s'
  2067  0079B1  6F                 	db	111	;'o'
  2068  0079B2  72                 	db	114	;'r'
  2069  0079B3  20                 	db	32
  2070  0079B4  68                 	db	104	;'h'
  2071  0079B5  61                 	db	97	;'a'
  2072  0079B6  73                 	db	115	;'s'
  2073  0079B7  20                 	db	32
  2074  0079B8  62                 	db	98	;'b'
  2075  0079B9  65                 	db	101	;'e'
  2076  0079BA  65                 	db	101	;'e'
  2077  0079BB  6E                 	db	110	;'n'
  2078  0079BC  20                 	db	32
  2079  0079BD  6B                 	db	107	;'k'
  2080  0079BE  65                 	db	101	;'e'
  2081  0079BF  70                 	db	112	;'p'
  2082  0079C0  74                 	db	116	;'t'
  2083  0079C1  20                 	db	32
  2084  0079C2  65                 	db	101	;'e'
  2085  0079C3  6E                 	db	110	;'n'
  2086  0079C4  61                 	db	97	;'a'
  2087  0079C5  62                 	db	98	;'b'
  2088  0079C6  6C                 	db	108	;'l'
  2089  0079C7  65                 	db	101	;'e'
  2090  0079C8  64                 	db	100	;'d'
  2091  0079C9  2E                 	db	46
  2092  0079CA  00                 	db	0
  2093  0079CB                     STR_107:
  2094  0079CB  0A                 	db	10
  2095  0079CC  0D                 	db	13
  2096  0079CD  50                 	db	80	;'P'
  2097  0079CE  61                 	db	97	;'a'
  2098  0079CF  73                 	db	115	;'s'
  2099  0079D0  73                 	db	115	;'s'
  2100  0079D1  77                 	db	119	;'w'
  2101  0079D2  6F                 	db	111	;'o'
  2102  0079D3  72                 	db	114	;'r'
  2103  0079D4  64                 	db	100	;'d'
  2104  0079D5  20                 	db	32
  2105  0079D6  68                 	db	104	;'h'
  2106  0079D7  61                 	db	97	;'a'
  2107  0079D8  73                 	db	115	;'s'
  2108  0079D9  20                 	db	32
  2109  0079DA  62                 	db	98	;'b'
  2110  0079DB  65                 	db	101	;'e'
  2111  0079DC  65                 	db	101	;'e'
  2112  0079DD  6E                 	db	110	;'n'
  2113  0079DE  20                 	db	32
  2114  0079DF  72                 	db	114	;'r'
  2115  0079E0  65                 	db	101	;'e'
  2116  0079E1  67                 	db	103	;'g'
  2117  0079E2  69                 	db	105	;'i'
  2118  0079E3  73                 	db	115	;'s'
  2119  0079E4  74                 	db	116	;'t'
  2120  0079E5  65                 	db	101	;'e'
  2121  0079E6  72                 	db	114	;'r'
  2122  0079E7  65                 	db	101	;'e'
  2123  0079E8  64                 	db	100	;'d'
  2124  0079E9  20                 	db	32
  2125  0079EA  73                 	db	115	;'s'
  2126  0079EB  75                 	db	117	;'u'
  2127  0079EC  63                 	db	99	;'c'
  2128  0079ED  63                 	db	99	;'c'
  2129  0079EE  65                 	db	101	;'e'
  2130  0079EF  73                 	db	115	;'s'
  2131  0079F0  73                 	db	115	;'s'
  2132  0079F1  66                 	db	102	;'f'
  2133  0079F2  75                 	db	117	;'u'
  2134  0079F3  6C                 	db	108	;'l'
  2135  0079F4  6C                 	db	108	;'l'
  2136  0079F5  79                 	db	121	;'y'
  2137  0079F6  00                 	db	0
  2138  0079F7                     STR_128:
  2139  0079F7  0A                 	db	10
  2140  0079F8  0D                 	db	13
  2141  0079F9  20                 	db	32
  2142  0079FA  20                 	db	32
  2143  0079FB  20                 	db	32
  2144  0079FC  20                 	db	32
  2145  0079FD  20                 	db	32
  2146  0079FE  31                 	db	49	;'1'
  2147  0079FF  2E                 	db	46
  2148  007A00  20                 	db	32
  2149  007A01  45                 	db	69	;'E'
  2150  007A02  6E                 	db	110	;'n'
  2151  007A03  61                 	db	97	;'a'
  2152  007A04  62                 	db	98	;'b'
  2153  007A05  6C                 	db	108	;'l'
  2154  007A06  65                 	db	101	;'e'
  2155  007A07  20                 	db	32
  2156  007A08  54                 	db	84	;'T'
  2157  007A09  65                 	db	101	;'e'
  2158  007A0A  6D                 	db	109	;'m'
  2159  007A0B  70                 	db	112	;'p'
  2160  007A0C  65                 	db	101	;'e'
  2161  007A0D  72                 	db	114	;'r'
  2162  007A0E  61                 	db	97	;'a'
  2163  007A0F  74                 	db	116	;'t'
  2164  007A10  75                 	db	117	;'u'
  2165  007A11  72                 	db	114	;'r'
  2166  007A12  65                 	db	101	;'e'
  2167  007A13  20                 	db	32
  2168  007A14  53                 	db	83	;'S'
  2169  007A15  65                 	db	101	;'e'
  2170  007A16  6E                 	db	110	;'n'
  2171  007A17  73                 	db	115	;'s'
  2172  007A18  6F                 	db	111	;'o'
  2173  007A19  72                 	db	114	;'r'
  2174  007A1A  20                 	db	32
  2175  007A1B  41                 	db	65	;'A'
  2176  007A1C  6C                 	db	108	;'l'
  2177  007A1D  61                 	db	97	;'a'
  2178  007A1E  72                 	db	114	;'r'
  2179  007A1F  6D                 	db	109	;'m'
  2180  007A20  20                 	db	32
  2181  007A21  00                 	db	0
  2182  007A22                     STR_20:
  2183  007A22  0D                 	db	13
  2184  007A23  0A                 	db	10
  2185  007A24  45                 	db	69	;'E'
  2186  007A25  6E                 	db	110	;'n'
  2187  007A26  74                 	db	116	;'t'
  2188  007A27  65                 	db	101	;'e'
  2189  007A28  72                 	db	114	;'r'
  2190  007A29  20                 	db	32
  2191  007A2A  74                 	db	116	;'t'
  2192  007A2B  68                 	db	104	;'h'
  2193  007A2C  65                 	db	101	;'e'
  2194  007A2D  20                 	db	32
  2195  007A2E  70                 	db	112	;'p'
  2196  007A2F  61                 	db	97	;'a'
  2197  007A30  73                 	db	115	;'s'
  2198  007A31  73                 	db	115	;'s'
  2199  007A32  77                 	db	119	;'w'
  2200  007A33  6F                 	db	111	;'o'
  2201  007A34  72                 	db	114	;'r'
  2202  007A35  64                 	db	100	;'d'
  2203  007A36  20                 	db	32
  2204  007A37  74                 	db	116	;'t'
  2205  007A38  6F                 	db	111	;'o'
  2206  007A39  20                 	db	32
  2207  007A3A  72                 	db	114	;'r'
  2208  007A3B  65                 	db	101	;'e'
  2209  007A3C  73                 	db	115	;'s'
  2210  007A3D  65                 	db	101	;'e'
  2211  007A3E  74                 	db	116	;'t'
  2212  007A3F  20                 	db	32
  2213  007A40  74                 	db	116	;'t'
  2214  007A41  68                 	db	104	;'h'
  2215  007A42  65                 	db	101	;'e'
  2216  007A43  20                 	db	32
  2217  007A44  61                 	db	97	;'a'
  2218  007A45  6C                 	db	108	;'l'
  2219  007A46  61                 	db	97	;'a'
  2220  007A47  72                 	db	114	;'r'
  2221  007A48  6D                 	db	109	;'m'
  2222  007A49  3A                 	db	58	;':'
  2223  007A4A  20                 	db	32
  2224  007A4B  00                 	db	0
  2225  007A4C                     STR_102:
  2226  007A4C  0A                 	db	10
  2227  007A4D  0D                 	db	13
  2228  007A4E  20                 	db	32
  2229  007A4F  20                 	db	32
  2230  007A50  20                 	db	32
  2231  007A51  20                 	db	32
  2232  007A52  20                 	db	32
  2233  007A53  49                 	db	73	;'I'
  2234  007A54  6E                 	db	110	;'n'
  2235  007A55  63                 	db	99	;'c'
  2236  007A56  6F                 	db	111	;'o'
  2237  007A57  72                 	db	114	;'r'
  2238  007A58  72                 	db	114	;'r'
  2239  007A59  65                 	db	101	;'e'
  2240  007A5A  63                 	db	99	;'c'
  2241  007A5B  74                 	db	116	;'t'
  2242  007A5C  20                 	db	32
  2243  007A5D  49                 	db	73	;'I'
  2244  007A5E  6E                 	db	110	;'n'
  2245  007A5F  70                 	db	112	;'p'
  2246  007A60  75                 	db	117	;'u'
  2247  007A61  74                 	db	116	;'t'
  2248  007A62  20                 	db	32
  2249  007A63  6F                 	db	111	;'o'
  2250  007A64  70                 	db	112	;'p'
  2251  007A65  74                 	db	116	;'t'
  2252  007A66  69                 	db	105	;'i'
  2253  007A67  6F                 	db	111	;'o'
  2254  007A68  6E                 	db	110	;'n'
  2255  007A69  20                 	db	32
  2256  007A6A  73                 	db	115	;'s'
  2257  007A6B  65                 	db	101	;'e'
  2258  007A6C  6C                 	db	108	;'l'
  2259  007A6D  65                 	db	101	;'e'
  2260  007A6E  63                 	db	99	;'c'
  2261  007A6F  74                 	db	116	;'t'
  2262  007A70  65                 	db	101	;'e'
  2263  007A71  64                 	db	100	;'d'
  2264  007A72  21                 	db	33
  2265  007A73  21                 	db	33
  2266  007A74  21                 	db	33
  2267  007A75  00                 	db	0
  2268  007A76                     STR_100:
  2269  007A76  0A                 	db	10
  2270  007A77  0D                 	db	13
  2271  007A78  50                 	db	80	;'P'
  2272  007A79  61                 	db	97	;'a'
  2273  007A7A  73                 	db	115	;'s'
  2274  007A7B  73                 	db	115	;'s'
  2275  007A7C  63                 	db	99	;'c'
  2276  007A7D  6F                 	db	111	;'o'
  2277  007A7E  64                 	db	100	;'d'
  2278  007A7F  65                 	db	101	;'e'
  2279  007A80  20                 	db	32
  2280  007A81  68                 	db	104	;'h'
  2281  007A82  61                 	db	97	;'a'
  2282  007A83  73                 	db	115	;'s'
  2283  007A84  20                 	db	32
  2284  007A85  62                 	db	98	;'b'
  2285  007A86  65                 	db	101	;'e'
  2286  007A87  65                 	db	101	;'e'
  2287  007A88  6E                 	db	110	;'n'
  2288  007A89  20                 	db	32
  2289  007A8A  63                 	db	99	;'c'
  2290  007A8B  68                 	db	104	;'h'
  2291  007A8C  61                 	db	97	;'a'
  2292  007A8D  6E                 	db	110	;'n'
  2293  007A8E  67                 	db	103	;'g'
  2294  007A8F  65                 	db	101	;'e'
  2295  007A90  64                 	db	100	;'d'
  2296  007A91  20                 	db	32
  2297  007A92  73                 	db	115	;'s'
  2298  007A93  75                 	db	117	;'u'
  2299  007A94  63                 	db	99	;'c'
  2300  007A95  63                 	db	99	;'c'
  2301  007A96  65                 	db	101	;'e'
  2302  007A97  73                 	db	115	;'s'
  2303  007A98  73                 	db	115	;'s'
  2304  007A99  66                 	db	102	;'f'
  2305  007A9A  75                 	db	117	;'u'
  2306  007A9B  6C                 	db	108	;'l'
  2307  007A9C  6C                 	db	108	;'l'
  2308  007A9D  79                 	db	121	;'y'
  2309  007A9E  2E                 	db	46
  2310  007A9F  00                 	db	0
  2311  007AA0                     STR_35:
  2312  007AA0  0A                 	db	10
  2313  007AA1  0D                 	db	13
  2314  007AA2  54                 	db	84	;'T'
  2315  007AA3  65                 	db	101	;'e'
  2316  007AA4  6D                 	db	109	;'m'
  2317  007AA5  70                 	db	112	;'p'
  2318  007AA6  65                 	db	101	;'e'
  2319  007AA7  72                 	db	114	;'r'
  2320  007AA8  61                 	db	97	;'a'
  2321  007AA9  74                 	db	116	;'t'
  2322  007AAA  75                 	db	117	;'u'
  2323  007AAB  72                 	db	114	;'r'
  2324  007AAC  65                 	db	101	;'e'
  2325  007AAD  20                 	db	32
  2326  007AAE  53                 	db	83	;'S'
  2327  007AAF  65                 	db	101	;'e'
  2328  007AB0  6E                 	db	110	;'n'
  2329  007AB1  73                 	db	115	;'s'
  2330  007AB2  6F                 	db	111	;'o'
  2331  007AB3  72                 	db	114	;'r'
  2332  007AB4  20                 	db	32
  2333  007AB5  68                 	db	104	;'h'
  2334  007AB6  61                 	db	97	;'a'
  2335  007AB7  73                 	db	115	;'s'
  2336  007AB8  20                 	db	32
  2337  007AB9  62                 	db	98	;'b'
  2338  007ABA  65                 	db	101	;'e'
  2339  007ABB  65                 	db	101	;'e'
  2340  007ABC  6E                 	db	110	;'n'
  2341  007ABD  20                 	db	32
  2342  007ABE  64                 	db	100	;'d'
  2343  007ABF  69                 	db	105	;'i'
  2344  007AC0  73                 	db	115	;'s'
  2345  007AC1  61                 	db	97	;'a'
  2346  007AC2  62                 	db	98	;'b'
  2347  007AC3  6C                 	db	108	;'l'
  2348  007AC4  65                 	db	101	;'e'
  2349  007AC5  64                 	db	100	;'d'
  2350  007AC6  2E                 	db	46
  2351  007AC7  00                 	db	0
  2352  007AC8                     STR_17:
  2353  007AC8  0A                 	db	10
  2354  007AC9  0D                 	db	13
  2355  007ACA  49                 	db	73	;'I'
  2356  007ACB  6E                 	db	110	;'n'
  2357  007ACC  63                 	db	99	;'c'
  2358  007ACD  6F                 	db	111	;'o'
  2359  007ACE  72                 	db	114	;'r'
  2360  007ACF  72                 	db	114	;'r'
  2361  007AD0  65                 	db	101	;'e'
  2362  007AD1  63                 	db	99	;'c'
  2363  007AD2  74                 	db	116	;'t'
  2364  007AD3  20                 	db	32
  2365  007AD4  50                 	db	80	;'P'
  2366  007AD5  61                 	db	97	;'a'
  2367  007AD6  73                 	db	115	;'s'
  2368  007AD7  73                 	db	115	;'s'
  2369  007AD8  77                 	db	119	;'w'
  2370  007AD9  6F                 	db	111	;'o'
  2371  007ADA  72                 	db	114	;'r'
  2372  007ADB  64                 	db	100	;'d'
  2373  007ADC  2E                 	db	46
  2374  007ADD  2E                 	db	46
  2375  007ADE  2E                 	db	46
  2376  007ADF  2E                 	db	46
  2377  007AE0  20                 	db	32
  2378  007AE1  54                 	db	84	;'T'
  2379  007AE2  52                 	db	82	;'R'
  2380  007AE3  59                 	db	89	;'Y'
  2381  007AE4  20                 	db	32
  2382  007AE5  41                 	db	65	;'A'
  2383  007AE6  47                 	db	71	;'G'
  2384  007AE7  41                 	db	65	;'A'
  2385  007AE8  49                 	db	73	;'I'
  2386  007AE9  4E                 	db	78	;'N'
  2387  007AEA  21                 	db	33
  2388  007AEB  21                 	db	33
  2389  007AEC  0A                 	db	10
  2390  007AED  0D                 	db	13
  2391  007AEE  00                 	db	0
  2392  007AEF                     STR_136:
  2393  007AEF  0A                 	db	10
  2394  007AF0  0D                 	db	13
  2395  007AF1  54                 	db	84	;'T'
  2396  007AF2  65                 	db	101	;'e'
  2397  007AF3  6D                 	db	109	;'m'
  2398  007AF4  70                 	db	112	;'p'
  2399  007AF5  65                 	db	101	;'e'
  2400  007AF6  72                 	db	114	;'r'
  2401  007AF7  61                 	db	97	;'a'
  2402  007AF8  74                 	db	116	;'t'
  2403  007AF9  75                 	db	117	;'u'
  2404  007AFA  72                 	db	114	;'r'
  2405  007AFB  65                 	db	101	;'e'
  2406  007AFC  20                 	db	32
  2407  007AFD  53                 	db	83	;'S'
  2408  007AFE  65                 	db	101	;'e'
  2409  007AFF  6E                 	db	110	;'n'
  2410  007B00  73                 	db	115	;'s'
  2411  007B01  6F                 	db	111	;'o'
  2412  007B02  72                 	db	114	;'r'
  2413  007B03  20                 	db	32
  2414  007B04  68                 	db	104	;'h'
  2415  007B05  61                 	db	97	;'a'
  2416  007B06  73                 	db	115	;'s'
  2417  007B07  20                 	db	32
  2418  007B08  62                 	db	98	;'b'
  2419  007B09  65                 	db	101	;'e'
  2420  007B0A  65                 	db	101	;'e'
  2421  007B0B  6E                 	db	110	;'n'
  2422  007B0C  20                 	db	32
  2423  007B0D  65                 	db	101	;'e'
  2424  007B0E  6E                 	db	110	;'n'
  2425  007B0F  61                 	db	97	;'a'
  2426  007B10  62                 	db	98	;'b'
  2427  007B11  6C                 	db	108	;'l'
  2428  007B12  65                 	db	101	;'e'
  2429  007B13  64                 	db	100	;'d'
  2430  007B14  2E                 	db	46
  2431  007B15  00                 	db	0
  2432  007B16                     STR_30:
  2433  007B16  0A                 	db	10
  2434  007B17  0D                 	db	13
  2435  007B18  4B                 	db	75	;'K'
  2436  007B19  65                 	db	101	;'e'
  2437  007B1A  65                 	db	101	;'e'
  2438  007B1B  70                 	db	112	;'p'
  2439  007B1C  20                 	db	32
  2440  007B1D  45                 	db	69	;'E'
  2441  007B1E  6E                 	db	110	;'n'
  2442  007B1F  61                 	db	97	;'a'
  2443  007B20  62                 	db	98	;'b'
  2444  007B21  6C                 	db	108	;'l'
  2445  007B22  65                 	db	101	;'e'
  2446  007B23  64                 	db	100	;'d'
  2447  007B24  20                 	db	32
  2448  007B25  3D                 	db	61	;'='
  2449  007B26  20                 	db	32
  2450  007B27  31                 	db	49	;'1'
  2451  007B28  20                 	db	32
  2452  007B29  20                 	db	32
  2453  007B2A  20                 	db	32
  2454  007B2B  20                 	db	32
  2455  007B2C  7C                 	db	124
  2456  007B2D  20                 	db	32
  2457  007B2E  20                 	db	32
  2458  007B2F  20                 	db	32
  2459  007B30  20                 	db	32
  2460  007B31  44                 	db	68	;'D'
  2461  007B32  69                 	db	105	;'i'
  2462  007B33  73                 	db	115	;'s'
  2463  007B34  61                 	db	97	;'a'
  2464  007B35  62                 	db	98	;'b'
  2465  007B36  6C                 	db	108	;'l'
  2466  007B37  65                 	db	101	;'e'
  2467  007B38  20                 	db	32
  2468  007B39  3D                 	db	61	;'='
  2469  007B3A  20                 	db	32
  2470  007B3B  30                 	db	48	;'0'
  2471  007B3C  00                 	db	0
  2472  007B3D                     STR_69:
  2473  007B3D  0A                 	db	10
  2474  007B3E  0D                 	db	13
  2475  007B3F  20                 	db	32
  2476  007B40  20                 	db	32
  2477  007B41  20                 	db	32
  2478  007B42  20                 	db	32
  2479  007B43  20                 	db	32
  2480  007B44  20                 	db	32
  2481  007B45  20                 	db	32
  2482  007B46  20                 	db	32
  2483  007B47  20                 	db	32
  2484  007B48  32                 	db	50	;'2'
  2485  007B49  2E                 	db	46
  2486  007B4A  20                 	db	32
  2487  007B4B  50                 	db	80	;'P'
  2488  007B4C  49                 	db	73	;'I'
  2489  007B4D  52                 	db	82	;'R'
  2490  007B4E  20                 	db	32
  2491  007B4F  53                 	db	83	;'S'
  2492  007B50  65                 	db	101	;'e'
  2493  007B51  6E                 	db	110	;'n'
  2494  007B52  73                 	db	115	;'s'
  2495  007B53  6F                 	db	111	;'o'
  2496  007B54  72                 	db	114	;'r'
  2497  007B55  20                 	db	32
  2498  007B56  41                 	db	65	;'A'
  2499  007B57  6C                 	db	108	;'l'
  2500  007B58  61                 	db	97	;'a'
  2501  007B59  72                 	db	114	;'r'
  2502  007B5A  6D                 	db	109	;'m'
  2503  007B5B  20                 	db	32
  2504  007B5C  4F                 	db	79	;'O'
  2505  007B5D  70                 	db	112	;'p'
  2506  007B5E  74                 	db	116	;'t'
  2507  007B5F  69                 	db	105	;'i'
  2508  007B60  6F                 	db	111	;'o'
  2509  007B61  6E                 	db	110	;'n'
  2510  007B62  73                 	db	115	;'s'
  2511  007B63  00                 	db	0
  2512  007B64                     STR_156:
  2513  007B64  0A                 	db	10
  2514  007B65  0D                 	db	13
  2515  007B66  43                 	db	67	;'C'
  2516  007B67  75                 	db	117	;'u'
  2517  007B68  72                 	db	114	;'r'
  2518  007B69  72                 	db	114	;'r'
  2519  007B6A  65                 	db	101	;'e'
  2520  007B6B  6E                 	db	110	;'n'
  2521  007B6C  74                 	db	116	;'t'
  2522  007B6D  20                 	db	32
  2523  007B6E  49                 	db	73	;'I'
  2524  007B6F  6E                 	db	110	;'n'
  2525  007B70  70                 	db	112	;'p'
  2526  007B71  75                 	db	117	;'u'
  2527  007B72  74                 	db	116	;'t'
  2528  007B73  20                 	db	32
  2529  007B74  4D                 	db	77	;'M'
  2530  007B75  65                 	db	101	;'e'
  2531  007B76  74                 	db	116	;'t'
  2532  007B77  68                 	db	104	;'h'
  2533  007B78  6F                 	db	111	;'o'
  2534  007B79  64                 	db	100	;'d'
  2535  007B7A  3A                 	db	58	;':'
  2536  007B7B  20                 	db	32
  2537  007B7C  20                 	db	32
  2538  007B7D  20                 	db	32
  2539  007B7E  20                 	db	32
  2540  007B7F  20                 	db	32
  2541  007B80  20                 	db	32
  2542  007B81  20                 	db	32
  2543  007B82  20                 	db	32
  2544  007B83  20                 	db	32
  2545  007B84  20                 	db	32
  2546  007B85  20                 	db	32
  2547  007B86  20                 	db	32
  2548  007B87  00                 	db	0
  2549  007B88                     STR_151:
  2550  007B88  0A                 	db	10
  2551  007B89  0D                 	db	13
  2552  007B8A  50                 	db	80	;'P'
  2553  007B8B  49                 	db	73	;'I'
  2554  007B8C  52                 	db	82	;'R'
  2555  007B8D  20                 	db	32
  2556  007B8E  53                 	db	83	;'S'
  2557  007B8F  65                 	db	101	;'e'
  2558  007B90  6E                 	db	110	;'n'
  2559  007B91  73                 	db	115	;'s'
  2560  007B92  6F                 	db	111	;'o'
  2561  007B93  72                 	db	114	;'r'
  2562  007B94  20                 	db	32
  2563  007B95  41                 	db	65	;'A'
  2564  007B96  6C                 	db	108	;'l'
  2565  007B97  61                 	db	97	;'a'
  2566  007B98  72                 	db	114	;'r'
  2567  007B99  6D                 	db	109	;'m'
  2568  007B9A  20                 	db	32
  2569  007B9B  53                 	db	83	;'S'
  2570  007B9C  74                 	db	116	;'t'
  2571  007B9D  61                 	db	97	;'a'
  2572  007B9E  74                 	db	116	;'t'
  2573  007B9F  65                 	db	101	;'e'
  2574  007BA0  3A                 	db	58	;':'
  2575  007BA1  20                 	db	32
  2576  007BA2  20                 	db	32
  2577  007BA3  20                 	db	32
  2578  007BA4  20                 	db	32
  2579  007BA5  20                 	db	32
  2580  007BA6  20                 	db	32
  2581  007BA7  20                 	db	32
  2582  007BA8  20                 	db	32
  2583  007BA9  20                 	db	32
  2584  007BAA  20                 	db	32
  2585  007BAB  00                 	db	0
  2586  007BAC                     STR_152:
  2587  007BAC  0A                 	db	10
  2588  007BAD  0D                 	db	13
  2589  007BAE  54                 	db	84	;'T'
  2590  007BAF  65                 	db	101	;'e'
  2591  007BB0  6D                 	db	109	;'m'
  2592  007BB1  70                 	db	112	;'p'
  2593  007BB2  65                 	db	101	;'e'
  2594  007BB3  72                 	db	114	;'r'
  2595  007BB4  61                 	db	97	;'a'
  2596  007BB5  74                 	db	116	;'t'
  2597  007BB6  75                 	db	117	;'u'
  2598  007BB7  72                 	db	114	;'r'
  2599  007BB8  65                 	db	101	;'e'
  2600  007BB9  20                 	db	32
  2601  007BBA  41                 	db	65	;'A'
  2602  007BBB  6C                 	db	108	;'l'
  2603  007BBC  61                 	db	97	;'a'
  2604  007BBD  72                 	db	114	;'r'
  2605  007BBE  6D                 	db	109	;'m'
  2606  007BBF  20                 	db	32
  2607  007BC0  53                 	db	83	;'S'
  2608  007BC1  74                 	db	116	;'t'
  2609  007BC2  61                 	db	97	;'a'
  2610  007BC3  74                 	db	116	;'t'
  2611  007BC4  65                 	db	101	;'e'
  2612  007BC5  3A                 	db	58	;':'
  2613  007BC6  20                 	db	32
  2614  007BC7  20                 	db	32
  2615  007BC8  20                 	db	32
  2616  007BC9  20                 	db	32
  2617  007BCA  20                 	db	32
  2618  007BCB  20                 	db	32
  2619  007BCC  20                 	db	32
  2620  007BCD  20                 	db	32
  2621  007BCE  20                 	db	32
  2622  007BCF  00                 	db	0
  2623  007BD0                     STR_154:
  2624  007BD0  0A                 	db	10
  2625  007BD1  0D                 	db	13
  2626  007BD2  54                 	db	84	;'T'
  2627  007BD3  65                 	db	101	;'e'
  2628  007BD4  6D                 	db	109	;'m'
  2629  007BD5  70                 	db	112	;'p'
  2630  007BD6  65                 	db	101	;'e'
  2631  007BD7  72                 	db	114	;'r'
  2632  007BD8  61                 	db	97	;'a'
  2633  007BD9  74                 	db	116	;'t'
  2634  007BDA  75                 	db	117	;'u'
  2635  007BDB  72                 	db	114	;'r'
  2636  007BDC  65                 	db	101	;'e'
  2637  007BDD  20                 	db	32
  2638  007BDE  41                 	db	65	;'A'
  2639  007BDF  6C                 	db	108	;'l'
  2640  007BE0  61                 	db	97	;'a'
  2641  007BE1  72                 	db	114	;'r'
  2642  007BE2  6D                 	db	109	;'m'
  2643  007BE3  20                 	db	32
  2644  007BE4  54                 	db	84	;'T'
  2645  007BE5  68                 	db	104	;'h'
  2646  007BE6  72                 	db	114	;'r'
  2647  007BE7  65                 	db	101	;'e'
  2648  007BE8  73                 	db	115	;'s'
  2649  007BE9  68                 	db	104	;'h'
  2650  007BEA  6F                 	db	111	;'o'
  2651  007BEB  6C                 	db	108	;'l'
  2652  007BEC  64                 	db	100	;'d'
  2653  007BED  3A                 	db	58	;':'
  2654  007BEE  20                 	db	32
  2655  007BEF  20                 	db	32
  2656  007BF0  20                 	db	32
  2657  007BF1  20                 	db	32
  2658  007BF2  20                 	db	32
  2659  007BF3  00                 	db	0
  2660  007BF4                     STR_153:
  2661  007BF4  0A                 	db	10
  2662  007BF5  0D                 	db	13
  2663  007BF6  43                 	db	67	;'C'
  2664  007BF7  75                 	db	117	;'u'
  2665  007BF8  72                 	db	114	;'r'
  2666  007BF9  72                 	db	114	;'r'
  2667  007BFA  65                 	db	101	;'e'
  2668  007BFB  6E                 	db	110	;'n'
  2669  007BFC  74                 	db	116	;'t'
  2670  007BFD  20                 	db	32
  2671  007BFE  54                 	db	84	;'T'
  2672  007BFF  65                 	db	101	;'e'
  2673  007C00  6D                 	db	109	;'m'
  2674  007C01  70                 	db	112	;'p'
  2675  007C02  65                 	db	101	;'e'
  2676  007C03  72                 	db	114	;'r'
  2677  007C04  61                 	db	97	;'a'
  2678  007C05  74                 	db	116	;'t'
  2679  007C06  75                 	db	117	;'u'
  2680  007C07  72                 	db	114	;'r'
  2681  007C08  65                 	db	101	;'e'
  2682  007C09  20                 	db	32
  2683  007C0A  52                 	db	82	;'R'
  2684  007C0B  65                 	db	101	;'e'
  2685  007C0C  61                 	db	97	;'a'
  2686  007C0D  64                 	db	100	;'d'
  2687  007C0E  69                 	db	105	;'i'
  2688  007C0F  6E                 	db	110	;'n'
  2689  007C10  67                 	db	103	;'g'
  2690  007C11  3A                 	db	58	;':'
  2691  007C12  20                 	db	32
  2692  007C13  20                 	db	32
  2693  007C14  20                 	db	32
  2694  007C15  20                 	db	32
  2695  007C16  20                 	db	32
  2696  007C17  00                 	db	0
  2697  007C18                     STR_42:
  2698  007C18  0A                 	db	10
  2699  007C19  0D                 	db	13
  2700  007C1A  59                 	db	89	;'Y'
  2701  007C1B  65                 	db	101	;'e'
  2702  007C1C  73                 	db	115	;'s'
  2703  007C1D  20                 	db	32
  2704  007C1E  3D                 	db	61	;'='
  2705  007C1F  20                 	db	32
  2706  007C20  31                 	db	49	;'1'
  2707  007C21  20                 	db	32
  2708  007C22  20                 	db	32
  2709  007C23  7C                 	db	124
  2710  007C24  20                 	db	32
  2711  007C25  20                 	db	32
  2712  007C26  20                 	db	32
  2713  007C27  4E                 	db	78	;'N'
  2714  007C28  6F                 	db	111	;'o'
  2715  007C29  20                 	db	32
  2716  007C2A  3D                 	db	61	;'='
  2717  007C2B  20                 	db	32
  2718  007C2C  30                 	db	48	;'0'
  2719  007C2D  0A                 	db	10
  2720  007C2E  0D                 	db	13
  2721  007C2F  49                 	db	73	;'I'
  2722  007C30  6E                 	db	110	;'n'
  2723  007C31  70                 	db	112	;'p'
  2724  007C32  75                 	db	117	;'u'
  2725  007C33  74                 	db	116	;'t'
  2726  007C34  20                 	db	32
  2727  007C35  48                 	db	72	;'H'
  2728  007C36  65                 	db	101	;'e'
  2729  007C37  72                 	db	114	;'r'
  2730  007C38  65                 	db	101	;'e'
  2731  007C39  3A                 	db	58	;':'
  2732  007C3A  20                 	db	32
  2733  007C3B  00                 	db	0
  2734  007C3C                     STR_14:
  2735  007C3C  0A                 	db	10
  2736  007C3D  0D                 	db	13
  2737  007C3E  20                 	db	32
  2738  007C3F  50                 	db	80	;'P'
  2739  007C40  49                 	db	73	;'I'
  2740  007C41  52                 	db	82	;'R'
  2741  007C42  20                 	db	32
  2742  007C43  53                 	db	83	;'S'
  2743  007C44  45                 	db	69	;'E'
  2744  007C45  4E                 	db	78	;'N'
  2745  007C46  53                 	db	83	;'S'
  2746  007C47  4F                 	db	79	;'O'
  2747  007C48  52                 	db	82	;'R'
  2748  007C49  20                 	db	32
  2749  007C4A  41                 	db	65	;'A'
  2750  007C4B  4C                 	db	76	;'L'
  2751  007C4C  41                 	db	65	;'A'
  2752  007C4D  52                 	db	82	;'R'
  2753  007C4E  4D                 	db	77	;'M'
  2754  007C4F  20                 	db	32
  2755  007C50  49                 	db	73	;'I'
  2756  007C51  53                 	db	83	;'S'
  2757  007C52  20                 	db	32
  2758  007C53  4B                 	db	75	;'K'
  2759  007C54  45                 	db	69	;'E'
  2760  007C55  50                 	db	80	;'P'
  2761  007C56  54                 	db	84	;'T'
  2762  007C57  20                 	db	32
  2763  007C58  45                 	db	69	;'E'
  2764  007C59  4E                 	db	78	;'N'
  2765  007C5A  41                 	db	65	;'A'
  2766  007C5B  42                 	db	66	;'B'
  2767  007C5C  4C                 	db	76	;'L'
  2768  007C5D  45                 	db	69	;'E'
  2769  007C5E  44                 	db	68	;'D'
  2770  007C5F  00                 	db	0
  2771  007C60                     STR_129:
  2772  007C60  0A                 	db	10
  2773  007C61  0D                 	db	13
  2774  007C62  20                 	db	32
  2775  007C63  20                 	db	32
  2776  007C64  20                 	db	32
  2777  007C65  20                 	db	32
  2778  007C66  20                 	db	32
  2779  007C67  32                 	db	50	;'2'
  2780  007C68  2E                 	db	46
  2781  007C69  20                 	db	32
  2782  007C6A  44                 	db	68	;'D'
  2783  007C6B  69                 	db	105	;'i'
  2784  007C6C  73                 	db	115	;'s'
  2785  007C6D  61                 	db	97	;'a'
  2786  007C6E  62                 	db	98	;'b'
  2787  007C6F  6C                 	db	108	;'l'
  2788  007C70  65                 	db	101	;'e'
  2789  007C71  20                 	db	32
  2790  007C72  54                 	db	84	;'T'
  2791  007C73  65                 	db	101	;'e'
  2792  007C74  6D                 	db	109	;'m'
  2793  007C75  70                 	db	112	;'p'
  2794  007C76  65                 	db	101	;'e'
  2795  007C77  72                 	db	114	;'r'
  2796  007C78  61                 	db	97	;'a'
  2797  007C79  74                 	db	116	;'t'
  2798  007C7A  75                 	db	117	;'u'
  2799  007C7B  72                 	db	114	;'r'
  2800  007C7C  65                 	db	101	;'e'
  2801  007C7D  20                 	db	32
  2802  007C7E  41                 	db	65	;'A'
  2803  007C7F  6C                 	db	108	;'l'
  2804  007C80  61                 	db	97	;'a'
  2805  007C81  72                 	db	114	;'r'
  2806  007C82  6D                 	db	109	;'m'
  2807  007C83  00                 	db	0
  2808  007C84                     STR_112:
  2809  007C84  0A                 	db	10
  2810  007C85  0D                 	db	13
  2811  007C86  20                 	db	32
  2812  007C87  20                 	db	32
  2813  007C88  20                 	db	32
  2814  007C89  20                 	db	32
  2815  007C8A  20                 	db	32
  2816  007C8B  31                 	db	49	;'1'
  2817  007C8C  2E                 	db	46
  2818  007C8D  20                 	db	32
  2819  007C8E  45                 	db	69	;'E'
  2820  007C8F  6E                 	db	110	;'n'
  2821  007C90  61                 	db	97	;'a'
  2822  007C91  62                 	db	98	;'b'
  2823  007C92  6C                 	db	108	;'l'
  2824  007C93  65                 	db	101	;'e'
  2825  007C94  20                 	db	32
  2826  007C95  50                 	db	80	;'P'
  2827  007C96  49                 	db	73	;'I'
  2828  007C97  52                 	db	82	;'R'
  2829  007C98  20                 	db	32
  2830  007C99  53                 	db	83	;'S'
  2831  007C9A  65                 	db	101	;'e'
  2832  007C9B  6E                 	db	110	;'n'
  2833  007C9C  73                 	db	115	;'s'
  2834  007C9D  6F                 	db	111	;'o'
  2835  007C9E  72                 	db	114	;'r'
  2836  007C9F  20                 	db	32
  2837  007CA0  41                 	db	65	;'A'
  2838  007CA1  6C                 	db	108	;'l'
  2839  007CA2  61                 	db	97	;'a'
  2840  007CA3  72                 	db	114	;'r'
  2841  007CA4  6D                 	db	109	;'m'
  2842  007CA5  20                 	db	32
  2843  007CA6  00                 	db	0
  2844  007CA7                     STR_113:
  2845  007CA7  0A                 	db	10
  2846  007CA8  0D                 	db	13
  2847  007CA9  20                 	db	32
  2848  007CAA  20                 	db	32
  2849  007CAB  20                 	db	32
  2850  007CAC  20                 	db	32
  2851  007CAD  20                 	db	32
  2852  007CAE  32                 	db	50	;'2'
  2853  007CAF  2E                 	db	46
  2854  007CB0  20                 	db	32
  2855  007CB1  44                 	db	68	;'D'
  2856  007CB2  69                 	db	105	;'i'
  2857  007CB3  73                 	db	115	;'s'
  2858  007CB4  61                 	db	97	;'a'
  2859  007CB5  62                 	db	98	;'b'
  2860  007CB6  6C                 	db	108	;'l'
  2861  007CB7  65                 	db	101	;'e'
  2862  007CB8  20                 	db	32
  2863  007CB9  50                 	db	80	;'P'
  2864  007CBA  49                 	db	73	;'I'
  2865  007CBB  52                 	db	82	;'R'
  2866  007CBC  20                 	db	32
  2867  007CBD  53                 	db	83	;'S'
  2868  007CBE  65                 	db	101	;'e'
  2869  007CBF  6E                 	db	110	;'n'
  2870  007CC0  73                 	db	115	;'s'
  2871  007CC1  6F                 	db	111	;'o'
  2872  007CC2  72                 	db	114	;'r'
  2873  007CC3  20                 	db	32
  2874  007CC4  41                 	db	65	;'A'
  2875  007CC5  6C                 	db	108	;'l'
  2876  007CC6  61                 	db	97	;'a'
  2877  007CC7  72                 	db	114	;'r'
  2878  007CC8  6D                 	db	109	;'m'
  2879  007CC9  00                 	db	0
  2880  007CCA                     STR_106:
  2881  007CCA  0A                 	db	10
  2882  007CCB  0D                 	db	13
  2883  007CCC  50                 	db	80	;'P'
  2884  007CCD  6C                 	db	108	;'l'
  2885  007CCE  65                 	db	101	;'e'
  2886  007CCF  61                 	db	97	;'a'
  2887  007CD0  73                 	db	115	;'s'
  2888  007CD1  65                 	db	101	;'e'
  2889  007CD2  20                 	db	32
  2890  007CD3  65                 	db	101	;'e'
  2891  007CD4  6E                 	db	110	;'n'
  2892  007CD5  74                 	db	116	;'t'
  2893  007CD6  65                 	db	101	;'e'
  2894  007CD7  72                 	db	114	;'r'
  2895  007CD8  20                 	db	32
  2896  007CD9  34                 	db	52	;'4'
  2897  007CDA  2D                 	db	45
  2898  007CDB  64                 	db	100	;'d'
  2899  007CDC  69                 	db	105	;'i'
  2900  007CDD  67                 	db	103	;'g'
  2901  007CDE  69                 	db	105	;'i'
  2902  007CDF  74                 	db	116	;'t'
  2903  007CE0  20                 	db	32
  2904  007CE1  70                 	db	112	;'p'
  2905  007CE2  61                 	db	97	;'a'
  2906  007CE3  73                 	db	115	;'s'
  2907  007CE4  73                 	db	115	;'s'
  2908  007CE5  63                 	db	99	;'c'
  2909  007CE6  6F                 	db	111	;'o'
  2910  007CE7  64                 	db	100	;'d'
  2911  007CE8  65                 	db	101	;'e'
  2912  007CE9  3A                 	db	58	;':'
  2913  007CEA  20                 	db	32
  2914  007CEB  00                 	db	0
  2915  007CEC                     STR_27:
  2916  007CEC  0A                 	db	10
  2917  007CED  0D                 	db	13
  2918  007CEE  20                 	db	32
  2919  007CEF  49                 	db	73	;'I'
  2920  007CF0  6E                 	db	110	;'n'
  2921  007CF1  76                 	db	118	;'v'
  2922  007CF2  61                 	db	97	;'a'
  2923  007CF3  6C                 	db	108	;'l'
  2924  007CF4  69                 	db	105	;'i'
  2925  007CF5  64                 	db	100	;'d'
  2926  007CF6  20                 	db	32
  2927  007CF7  50                 	db	80	;'P'
  2928  007CF8  61                 	db	97	;'a'
  2929  007CF9  73                 	db	115	;'s'
  2930  007CFA  73                 	db	115	;'s'
  2931  007CFB  63                 	db	99	;'c'
  2932  007CFC  6F                 	db	111	;'o'
  2933  007CFD  64                 	db	100	;'d'
  2934  007CFE  65                 	db	101	;'e'
  2935  007CFF  2E                 	db	46
  2936  007D00  2E                 	db	46
  2937  007D01  20                 	db	32
  2938  007D02  54                 	db	84	;'T'
  2939  007D03  72                 	db	114	;'r'
  2940  007D04  79                 	db	121	;'y'
  2941  007D05  20                 	db	32
  2942  007D06  41                 	db	65	;'A'
  2943  007D07  67                 	db	103	;'g'
  2944  007D08  61                 	db	97	;'a'
  2945  007D09  69                 	db	105	;'i'
  2946  007D0A  6E                 	db	110	;'n'
  2947  007D0B  21                 	db	33
  2948  007D0C  21                 	db	33
  2949  007D0D  00                 	db	0
  2950  007D0E                     STR_47:
  2951  007D0E  0D                 	db	13
  2952  007D0F  0A                 	db	10
  2953  007D10  45                 	db	69	;'E'
  2954  007D11  6E                 	db	110	;'n'
  2955  007D12  74                 	db	116	;'t'
  2956  007D13  65                 	db	101	;'e'
  2957  007D14  72                 	db	114	;'r'
  2958  007D15  20                 	db	32
  2959  007D16  74                 	db	116	;'t'
  2960  007D17  68                 	db	104	;'h'
  2961  007D18  65                 	db	101	;'e'
  2962  007D19  20                 	db	32
  2963  007D1A  70                 	db	112	;'p'
  2964  007D1B  61                 	db	97	;'a'
  2965  007D1C  73                 	db	115	;'s'
  2966  007D1D  73                 	db	115	;'s'
  2967  007D1E  77                 	db	119	;'w'
  2968  007D1F  6F                 	db	111	;'o'
  2969  007D20  72                 	db	114	;'r'
  2970  007D21  64                 	db	100	;'d'
  2971  007D22  20                 	db	32
  2972  007D23  74                 	db	116	;'t'
  2973  007D24  6F                 	db	111	;'o'
  2974  007D25  20                 	db	32
  2975  007D26  6C                 	db	108	;'l'
  2976  007D27  6F                 	db	111	;'o'
  2977  007D28  67                 	db	103	;'g'
  2978  007D29  69                 	db	105	;'i'
  2979  007D2A  6E                 	db	110	;'n'
  2980  007D2B  3A                 	db	58	;':'
  2981  007D2C  20                 	db	32
  2982  007D2D  00                 	db	0
  2983  007D2E                     STR_121:
  2984  007D2E  0A                 	db	10
  2985  007D2F  0D                 	db	13
  2986  007D30  50                 	db	80	;'P'
  2987  007D31  49                 	db	73	;'I'
  2988  007D32  52                 	db	82	;'R'
  2989  007D33  20                 	db	32
  2990  007D34  53                 	db	83	;'S'
  2991  007D35  65                 	db	101	;'e'
  2992  007D36  6E                 	db	110	;'n'
  2993  007D37  73                 	db	115	;'s'
  2994  007D38  6F                 	db	111	;'o'
  2995  007D39  72                 	db	114	;'r'
  2996  007D3A  20                 	db	32
  2997  007D3B  68                 	db	104	;'h'
  2998  007D3C  61                 	db	97	;'a'
  2999  007D3D  73                 	db	115	;'s'
  3000  007D3E  20                 	db	32
  3001  007D3F  62                 	db	98	;'b'
  3002  007D40  65                 	db	101	;'e'
  3003  007D41  65                 	db	101	;'e'
  3004  007D42  6E                 	db	110	;'n'
  3005  007D43  20                 	db	32
  3006  007D44  64                 	db	100	;'d'
  3007  007D45  69                 	db	105	;'i'
  3008  007D46  73                 	db	115	;'s'
  3009  007D47  61                 	db	97	;'a'
  3010  007D48  62                 	db	98	;'b'
  3011  007D49  6C                 	db	108	;'l'
  3012  007D4A  65                 	db	101	;'e'
  3013  007D4B  64                 	db	100	;'d'
  3014  007D4C  2E                 	db	46
  3015  007D4D  00                 	db	0
  3016  007D4E                     STR_75:
  3017  007D4E  0A                 	db	10
  3018  007D4F  0D                 	db	13
  3019  007D50  20                 	db	32
  3020  007D51  20                 	db	32
  3021  007D52  20                 	db	32
  3022  007D53  20                 	db	32
  3023  007D54  20                 	db	32
  3024  007D55  20                 	db	32
  3025  007D56  20                 	db	32
  3026  007D57  20                 	db	32
  3027  007D58  20                 	db	32
  3028  007D59  30                 	db	48	;'0'
  3029  007D5A  2E                 	db	46
  3030  007D5B  20                 	db	32
  3031  007D5C  52                 	db	82	;'R'
  3032  007D5D  65                 	db	101	;'e'
  3033  007D5E  66                 	db	102	;'f'
  3034  007D5F  72                 	db	114	;'r'
  3035  007D60  65                 	db	101	;'e'
  3036  007D61  73                 	db	115	;'s'
  3037  007D62  68                 	db	104	;'h'
  3038  007D63  20                 	db	32
  3039  007D64  4D                 	db	77	;'M'
  3040  007D65  61                 	db	97	;'a'
  3041  007D66  69                 	db	105	;'i'
  3042  007D67  6E                 	db	110	;'n'
  3043  007D68  20                 	db	32
  3044  007D69  4D                 	db	77	;'M'
  3045  007D6A  65                 	db	101	;'e'
  3046  007D6B  6E                 	db	110	;'n'
  3047  007D6C  75                 	db	117	;'u'
  3048  007D6D  00                 	db	0
  3049  007D6E                     STR_96:
  3050  007D6E  0A                 	db	10
  3051  007D6F  0D                 	db	13
  3052  007D70  49                 	db	73	;'I'
  3053  007D71  6E                 	db	110	;'n'
  3054  007D72  63                 	db	99	;'c'
  3055  007D73  6F                 	db	111	;'o'
  3056  007D74  72                 	db	114	;'r'
  3057  007D75  72                 	db	114	;'r'
  3058  007D76  65                 	db	101	;'e'
  3059  007D77  63                 	db	99	;'c'
  3060  007D78  74                 	db	116	;'t'
  3061  007D79  20                 	db	32
  3062  007D7A  50                 	db	80	;'P'
  3063  007D7B  61                 	db	97	;'a'
  3064  007D7C  73                 	db	115	;'s'
  3065  007D7D  73                 	db	115	;'s'
  3066  007D7E  63                 	db	99	;'c'
  3067  007D7F  6F                 	db	111	;'o'
  3068  007D80  64                 	db	100	;'d'
  3069  007D81  65                 	db	101	;'e'
  3070  007D82  20                 	db	32
  3071  007D83  45                 	db	69	;'E'
  3072  007D84  6E                 	db	110	;'n'
  3073  007D85  74                 	db	116	;'t'
  3074  007D86  65                 	db	101	;'e'
  3075  007D87  72                 	db	114	;'r'
  3076  007D88  65                 	db	101	;'e'
  3077  007D89  64                 	db	100	;'d'
  3078  007D8A  21                 	db	33
  3079  007D8B  21                 	db	33
  3080  007D8C  00                 	db	0
  3081  007D8D                     STR_36:
  3082  007D8D  0A                 	db	10
  3083  007D8E  0D                 	db	13
  3084  007D8F  4E                 	db	78	;'N'
  3085  007D90  6F                 	db	111	;'o'
  3086  007D91  20                 	db	32
  3087  007D92  53                 	db	83	;'S'
  3088  007D93  65                 	db	101	;'e'
  3089  007D94  6C                 	db	108	;'l'
  3090  007D95  65                 	db	101	;'e'
  3091  007D96  63                 	db	99	;'c'
  3092  007D97  74                 	db	116	;'t'
  3093  007D98  69                 	db	105	;'i'
  3094  007D99  6F                 	db	111	;'o'
  3095  007D9A  6E                 	db	110	;'n'
  3096  007D9B  20                 	db	32
  3097  007D9C  68                 	db	104	;'h'
  3098  007D9D  61                 	db	97	;'a'
  3099  007D9E  73                 	db	115	;'s'
  3100  007D9F  20                 	db	32
  3101  007DA0  62                 	db	98	;'b'
  3102  007DA1  65                 	db	101	;'e'
  3103  007DA2  65                 	db	101	;'e'
  3104  007DA3  6E                 	db	110	;'n'
  3105  007DA4  20                 	db	32
  3106  007DA5  6D                 	db	109	;'m'
  3107  007DA6  61                 	db	97	;'a'
  3108  007DA7  64                 	db	100	;'d'
  3109  007DA8  65                 	db	101	;'e'
  3110  007DA9  2E                 	db	46
  3111  007DAA  2E                 	db	46
  3112  007DAB  00                 	db	0
  3113  007DAC                     STR_119:
  3114  007DAC  0A                 	db	10
  3115  007DAD  0D                 	db	13
  3116  007DAE  50                 	db	80	;'P'
  3117  007DAF  49                 	db	73	;'I'
  3118  007DB0  52                 	db	82	;'R'
  3119  007DB1  20                 	db	32
  3120  007DB2  53                 	db	83	;'S'
  3121  007DB3  65                 	db	101	;'e'
  3122  007DB4  6E                 	db	110	;'n'
  3123  007DB5  73                 	db	115	;'s'
  3124  007DB6  6F                 	db	111	;'o'
  3125  007DB7  72                 	db	114	;'r'
  3126  007DB8  20                 	db	32
  3127  007DB9  68                 	db	104	;'h'
  3128  007DBA  61                 	db	97	;'a'
  3129  007DBB  73                 	db	115	;'s'
  3130  007DBC  20                 	db	32
  3131  007DBD  62                 	db	98	;'b'
  3132  007DBE  65                 	db	101	;'e'
  3133  007DBF  65                 	db	101	;'e'
  3134  007DC0  6E                 	db	110	;'n'
  3135  007DC1  20                 	db	32
  3136  007DC2  65                 	db	101	;'e'
  3137  007DC3  6E                 	db	110	;'n'
  3138  007DC4  61                 	db	97	;'a'
  3139  007DC5  62                 	db	98	;'b'
  3140  007DC6  6C                 	db	108	;'l'
  3141  007DC7  65                 	db	101	;'e'
  3142  007DC8  64                 	db	100	;'d'
  3143  007DC9  2E                 	db	46
  3144  007DCA  00                 	db	0
  3145  007DCB                     STR_66:
  3146  007DCB  0A                 	db	10
  3147  007DCC  0D                 	db	13
  3148  007DCD  53                 	db	83	;'S'
  3149  007DCE  65                 	db	101	;'e'
  3150  007DCF  6C                 	db	108	;'l'
  3151  007DD0  65                 	db	101	;'e'
  3152  007DD1  63                 	db	99	;'c'
  3153  007DD2  74                 	db	116	;'t'
  3154  007DD3  20                 	db	32
  3155  007DD4  6F                 	db	111	;'o'
  3156  007DD5  6E                 	db	110	;'n'
  3157  007DD6  65                 	db	101	;'e'
  3158  007DD7  20                 	db	32
  3159  007DD8  6F                 	db	111	;'o'
  3160  007DD9  66                 	db	102	;'f'
  3161  007DDA  20                 	db	32
  3162  007DDB  74                 	db	116	;'t'
  3163  007DDC  68                 	db	104	;'h'
  3164  007DDD  65                 	db	101	;'e'
  3165  007DDE  20                 	db	32
  3166  007DDF  66                 	db	102	;'f'
  3167  007DE0  6F                 	db	111	;'o'
  3168  007DE1  6C                 	db	108	;'l'
  3169  007DE2  6C                 	db	108	;'l'
  3170  007DE3  6F                 	db	111	;'o'
  3171  007DE4  77                 	db	119	;'w'
  3172  007DE5  69                 	db	105	;'i'
  3173  007DE6  6E                 	db	110	;'n'
  3174  007DE7  67                 	db	103	;'g'
  3175  007DE8  3A                 	db	58	;':'
  3176  007DE9  00                 	db	0
  3177  007DEA                     STR_68:
  3178  007DEA  0A                 	db	10
  3179  007DEB  0D                 	db	13
  3180  007DEC  20                 	db	32
  3181  007DED  20                 	db	32
  3182  007DEE  20                 	db	32
  3183  007DEF  20                 	db	32
  3184  007DF0  20                 	db	32
  3185  007DF1  20                 	db	32
  3186  007DF2  20                 	db	32
  3187  007DF3  20                 	db	32
  3188  007DF4  20                 	db	32
  3189  007DF5  31                 	db	49	;'1'
  3190  007DF6  2E                 	db	46
  3191  007DF7  20                 	db	32
  3192  007DF8  50                 	db	80	;'P'
  3193  007DF9  61                 	db	97	;'a'
  3194  007DFA  73                 	db	115	;'s'
  3195  007DFB  73                 	db	115	;'s'
  3196  007DFC  63                 	db	99	;'c'
  3197  007DFD  6F                 	db	111	;'o'
  3198  007DFE  64                 	db	100	;'d'
  3199  007DFF  65                 	db	101	;'e'
  3200  007E00  20                 	db	32
  3201  007E01  4F                 	db	79	;'O'
  3202  007E02  70                 	db	112	;'p'
  3203  007E03  74                 	db	116	;'t'
  3204  007E04  69                 	db	105	;'i'
  3205  007E05  6F                 	db	111	;'o'
  3206  007E06  6E                 	db	110	;'n'
  3207  007E07  73                 	db	115	;'s'
  3208  007E08  00                 	db	0
  3209  007E09                     STR_104:
  3210  007E09  0A                 	db	10
  3211  007E0A  0D                 	db	13
  3212  007E0B  57                 	db	87	;'W'
  3213  007E0C  65                 	db	101	;'e'
  3214  007E0D  6C                 	db	108	;'l'
  3215  007E0E  63                 	db	99	;'c'
  3216  007E0F  6F                 	db	111	;'o'
  3217  007E10  6D                 	db	109	;'m'
  3218  007E11  65                 	db	101	;'e'
  3219  007E12  20                 	db	32
  3220  007E13  74                 	db	116	;'t'
  3221  007E14  6F                 	db	111	;'o'
  3222  007E15  20                 	db	32
  3223  007E16  74                 	db	116	;'t'
  3224  007E17  68                 	db	104	;'h'
  3225  007E18  65                 	db	101	;'e'
  3226  007E19  20                 	db	32
  3227  007E1A  41                 	db	65	;'A'
  3228  007E1B  6C                 	db	108	;'l'
  3229  007E1C  61                 	db	97	;'a'
  3230  007E1D  72                 	db	114	;'r'
  3231  007E1E  6D                 	db	109	;'m'
  3232  007E1F  20                 	db	32
  3233  007E20  53                 	db	83	;'S'
  3234  007E21  79                 	db	121	;'y'
  3235  007E22  73                 	db	115	;'s'
  3236  007E23  74                 	db	116	;'t'
  3237  007E24  65                 	db	101	;'e'
  3238  007E25  6D                 	db	109	;'m'
  3239  007E26  00                 	db	0
  3240  007E27                     STR_88:
  3241  007E27  0A                 	db	10
  3242  007E28  0D                 	db	13
  3243  007E29  20                 	db	32
  3244  007E2A  20                 	db	32
  3245  007E2B  20                 	db	32
  3246  007E2C  20                 	db	32
  3247  007E2D  20                 	db	32
  3248  007E2E  30                 	db	48	;'0'
  3249  007E2F  2E                 	db	46
  3250  007E30  20                 	db	32
  3251  007E31  52                 	db	82	;'R'
  3252  007E32  65                 	db	101	;'e'
  3253  007E33  74                 	db	116	;'t'
  3254  007E34  75                 	db	117	;'u'
  3255  007E35  72                 	db	114	;'r'
  3256  007E36  6E                 	db	110	;'n'
  3257  007E37  20                 	db	32
  3258  007E38  74                 	db	116	;'t'
  3259  007E39  6F                 	db	111	;'o'
  3260  007E3A  20                 	db	32
  3261  007E3B  4D                 	db	77	;'M'
  3262  007E3C  61                 	db	97	;'a'
  3263  007E3D  69                 	db	105	;'i'
  3264  007E3E  6E                 	db	110	;'n'
  3265  007E3F  20                 	db	32
  3266  007E40  4D                 	db	77	;'M'
  3267  007E41  65                 	db	101	;'e'
  3268  007E42  6E                 	db	110	;'n'
  3269  007E43  75                 	db	117	;'u'
  3270  007E44  00                 	db	0
  3271  007E45                     STR_115:
  3272  007E45  0A                 	db	10
  3273  007E46  0D                 	db	13
  3274  007E47  20                 	db	32
  3275  007E48  20                 	db	32
  3276  007E49  20                 	db	32
  3277  007E4A  20                 	db	32
  3278  007E4B  20                 	db	32
  3279  007E4C  30                 	db	48	;'0'
  3280  007E4D  2E                 	db	46
  3281  007E4E  20                 	db	32
  3282  007E4F  52                 	db	82	;'R'
  3283  007E50  65                 	db	101	;'e'
  3284  007E51  74                 	db	116	;'t'
  3285  007E52  75                 	db	117	;'u'
  3286  007E53  72                 	db	114	;'r'
  3287  007E54  6E                 	db	110	;'n'
  3288  007E55  20                 	db	32
  3289  007E56  74                 	db	116	;'t'
  3290  007E57  6F                 	db	111	;'o'
  3291  007E58  20                 	db	32
  3292  007E59  6D                 	db	109	;'m'
  3293  007E5A  61                 	db	97	;'a'
  3294  007E5B  69                 	db	105	;'i'
  3295  007E5C  6E                 	db	110	;'n'
  3296  007E5D  20                 	db	32
  3297  007E5E  6D                 	db	109	;'m'
  3298  007E5F  65                 	db	101	;'e'
  3299  007E60  6E                 	db	110	;'n'
  3300  007E61  75                 	db	117	;'u'
  3301  007E62  00                 	db	0
  3302  007E63                     STR_5:
  3303  007E63  0A                 	db	10
  3304  007E64  0D                 	db	13
  3305  007E65  45                 	db	69	;'E'
  3306  007E66  6E                 	db	110	;'n'
  3307  007E67  61                 	db	97	;'a'
  3308  007E68  62                 	db	98	;'b'
  3309  007E69  6C                 	db	108	;'l'
  3310  007E6A  65                 	db	101	;'e'
  3311  007E6B  20                 	db	32
  3312  007E6C  3D                 	db	61	;'='
  3313  007E6D  20                 	db	32
  3314  007E6E  31                 	db	49	;'1'
  3315  007E6F  20                 	db	32
  3316  007E70  61                 	db	97	;'a'
  3317  007E71  6E                 	db	110	;'n'
  3318  007E72  64                 	db	100	;'d'
  3319  007E73  20                 	db	32
  3320  007E74  44                 	db	68	;'D'
  3321  007E75  69                 	db	105	;'i'
  3322  007E76  73                 	db	115	;'s'
  3323  007E77  61                 	db	97	;'a'
  3324  007E78  62                 	db	98	;'b'
  3325  007E79  6C                 	db	108	;'l'
  3326  007E7A  65                 	db	101	;'e'
  3327  007E7B  20                 	db	32
  3328  007E7C  3D                 	db	61	;'='
  3329  007E7D  20                 	db	32
  3330  007E7E  30                 	db	48	;'0'
  3331  007E7F  00                 	db	0
  3332  007E80                     STR_110:
  3333  007E80  0A                 	db	10
  3334  007E81  0D                 	db	13
  3335  007E82  50                 	db	80	;'P'
  3336  007E83  6C                 	db	108	;'l'
  3337  007E84  65                 	db	101	;'e'
  3338  007E85  61                 	db	97	;'a'
  3339  007E86  73                 	db	115	;'s'
  3340  007E87  65                 	db	101	;'e'
  3341  007E88  20                 	db	32
  3342  007E89  73                 	db	115	;'s'
  3343  007E8A  65                 	db	101	;'e'
  3344  007E8B  6C                 	db	108	;'l'
  3345  007E8C  65                 	db	101	;'e'
  3346  007E8D  63                 	db	99	;'c'
  3347  007E8E  74                 	db	116	;'t'
  3348  007E8F  20                 	db	32
  3349  007E90  79                 	db	121	;'y'
  3350  007E91  6F                 	db	111	;'o'
  3351  007E92  75                 	db	117	;'u'
  3352  007E93  72                 	db	114	;'r'
  3353  007E94  20                 	db	32
  3354  007E95  6F                 	db	111	;'o'
  3355  007E96  70                 	db	112	;'p'
  3356  007E97  74                 	db	116	;'t'
  3357  007E98  69                 	db	105	;'i'
  3358  007E99  6F                 	db	111	;'o'
  3359  007E9A  6E                 	db	110	;'n'
  3360  007E9B  3A                 	db	58	;':'
  3361  007E9C  00                 	db	0
  3362  007E9D                     STR_11:
  3363  007E9D  0A                 	db	10
  3364  007E9E  0D                 	db	13
  3365  007E9F  20                 	db	32
  3366  007EA0  50                 	db	80	;'P'
  3367  007EA1  49                 	db	73	;'I'
  3368  007EA2  52                 	db	82	;'R'
  3369  007EA3  20                 	db	32
  3370  007EA4  53                 	db	83	;'S'
  3371  007EA5  65                 	db	101	;'e'
  3372  007EA6  6E                 	db	110	;'n'
  3373  007EA7  73                 	db	115	;'s'
  3374  007EA8  6F                 	db	111	;'o'
  3375  007EA9  72                 	db	114	;'r'
  3376  007EAA  20                 	db	32
  3377  007EAB  41                 	db	65	;'A'
  3378  007EAC  6C                 	db	108	;'l'
  3379  007EAD  61                 	db	97	;'a'
  3380  007EAE  72                 	db	114	;'r'
  3381  007EAF  6D                 	db	109	;'m'
  3382  007EB0  20                 	db	32
  3383  007EB1  44                 	db	68	;'D'
  3384  007EB2  69                 	db	105	;'i'
  3385  007EB3  73                 	db	115	;'s'
  3386  007EB4  61                 	db	97	;'a'
  3387  007EB5  62                 	db	98	;'b'
  3388  007EB6  6C                 	db	108	;'l'
  3389  007EB7  65                 	db	101	;'e'
  3390  007EB8  64                 	db	100	;'d'
  3391  007EB9  00                 	db	0
  3392  007EBA                     STR_95:
  3393  007EBA  0A                 	db	10
  3394  007EBB  0D                 	db	13
  3395  007EBC  45                 	db	69	;'E'
  3396  007EBD  6E                 	db	110	;'n'
  3397  007EBE  74                 	db	116	;'t'
  3398  007EBF  65                 	db	101	;'e'
  3399  007EC0  72                 	db	114	;'r'
  3400  007EC1  20                 	db	32
  3401  007EC2  43                 	db	67	;'C'
  3402  007EC3  75                 	db	117	;'u'
  3403  007EC4  72                 	db	114	;'r'
  3404  007EC5  72                 	db	114	;'r'
  3405  007EC6  65                 	db	101	;'e'
  3406  007EC7  6E                 	db	110	;'n'
  3407  007EC8  74                 	db	116	;'t'
  3408  007EC9  20                 	db	32
  3409  007ECA  50                 	db	80	;'P'
  3410  007ECB  61                 	db	97	;'a'
  3411  007ECC  73                 	db	115	;'s'
  3412  007ECD  73                 	db	115	;'s'
  3413  007ECE  63                 	db	99	;'c'
  3414  007ECF  6F                 	db	111	;'o'
  3415  007ED0  64                 	db	100	;'d'
  3416  007ED1  65                 	db	101	;'e'
  3417  007ED2  3A                 	db	58	;':'
  3418  007ED3  20                 	db	32
  3419  007ED4  20                 	db	32
  3420  007ED5  00                 	db	0
  3421  007ED6                     STR_123:
  3422  007ED6  0A                 	db	10
  3423  007ED7  0D                 	db	13
  3424  007ED8  49                 	db	73	;'I'
  3425  007ED9  6E                 	db	110	;'n'
  3426  007EDA  63                 	db	99	;'c'
  3427  007EDB  6F                 	db	111	;'o'
  3428  007EDC  72                 	db	114	;'r'
  3429  007EDD  72                 	db	114	;'r'
  3430  007EDE  65                 	db	101	;'e'
  3431  007EDF  63                 	db	99	;'c'
  3432  007EE0  74                 	db	116	;'t'
  3433  007EE1  20                 	db	32
  3434  007EE2  69                 	db	105	;'i'
  3435  007EE3  6E                 	db	110	;'n'
  3436  007EE4  70                 	db	112	;'p'
  3437  007EE5  75                 	db	117	;'u'
  3438  007EE6  74                 	db	116	;'t'
  3439  007EE7  20                 	db	32
  3440  007EE8  6F                 	db	111	;'o'
  3441  007EE9  70                 	db	112	;'p'
  3442  007EEA  74                 	db	116	;'t'
  3443  007EEB  69                 	db	105	;'i'
  3444  007EEC  6F                 	db	111	;'o'
  3445  007EED  6E                 	db	110	;'n'
  3446  007EEE  21                 	db	33
  3447  007EEF  21                 	db	33
  3448  007EF0  21                 	db	33
  3449  007EF1  00                 	db	0
  3450  007EF2                     STR_126:
  3451  007EF2  0A                 	db	10
  3452  007EF3  0D                 	db	13
  3453  007EF4  50                 	db	80	;'P'
  3454  007EF5  6C                 	db	108	;'l'
  3455  007EF6  65                 	db	101	;'e'
  3456  007EF7  61                 	db	97	;'a'
  3457  007EF8  73                 	db	115	;'s'
  3458  007EF9  65                 	db	101	;'e'
  3459  007EFA  20                 	db	32
  3460  007EFB  73                 	db	115	;'s'
  3461  007EFC  65                 	db	101	;'e'
  3462  007EFD  6C                 	db	108	;'l'
  3463  007EFE  65                 	db	101	;'e'
  3464  007EFF  63                 	db	99	;'c'
  3465  007F00  74                 	db	116	;'t'
  3466  007F01  20                 	db	32
  3467  007F02  79                 	db	121	;'y'
  3468  007F03  6F                 	db	111	;'o'
  3469  007F04  75                 	db	117	;'u'
  3470  007F05  20                 	db	32
  3471  007F06  6F                 	db	111	;'o'
  3472  007F07  70                 	db	112	;'p'
  3473  007F08  74                 	db	116	;'t'
  3474  007F09  69                 	db	105	;'i'
  3475  007F0A  6F                 	db	111	;'o'
  3476  007F0B  6E                 	db	110	;'n'
  3477  007F0C  3A                 	db	58	;':'
  3478  007F0D  00                 	db	0
  3479  007F0E                     STR_8:
  3480  007F0E  0A                 	db	10
  3481  007F0F  0D                 	db	13
  3482  007F10  20                 	db	32
  3483  007F11  50                 	db	80	;'P'
  3484  007F12  49                 	db	73	;'I'
  3485  007F13  52                 	db	82	;'R'
  3486  007F14  20                 	db	32
  3487  007F15  53                 	db	83	;'S'
  3488  007F16  65                 	db	101	;'e'
  3489  007F17  6E                 	db	110	;'n'
  3490  007F18  73                 	db	115	;'s'
  3491  007F19  6F                 	db	111	;'o'
  3492  007F1A  72                 	db	114	;'r'
  3493  007F1B  20                 	db	32
  3494  007F1C  41                 	db	65	;'A'
  3495  007F1D  6C                 	db	108	;'l'
  3496  007F1E  61                 	db	97	;'a'
  3497  007F1F  72                 	db	114	;'r'
  3498  007F20  6D                 	db	109	;'m'
  3499  007F21  20                 	db	32
  3500  007F22  45                 	db	69	;'E'
  3501  007F23  6E                 	db	110	;'n'
  3502  007F24  61                 	db	97	;'a'
  3503  007F25  62                 	db	98	;'b'
  3504  007F26  6C                 	db	108	;'l'
  3505  007F27  65                 	db	101	;'e'
  3506  007F28  64                 	db	100	;'d'
  3507  007F29  00                 	db	0
  3508  007F2A                     STR_86:
  3509  007F2A  0A                 	db	10
  3510  007F2B  0D                 	db	13
  3511  007F2C  20                 	db	32
  3512  007F2D  20                 	db	32
  3513  007F2E  20                 	db	32
  3514  007F2F  20                 	db	32
  3515  007F30  20                 	db	32
  3516  007F31  31                 	db	49	;'1'
  3517  007F32  2E                 	db	46
  3518  007F33  20                 	db	32
  3519  007F34  43                 	db	67	;'C'
  3520  007F35  68                 	db	104	;'h'
  3521  007F36  61                 	db	97	;'a'
  3522  007F37  6E                 	db	110	;'n'
  3523  007F38  67                 	db	103	;'g'
  3524  007F39  65                 	db	101	;'e'
  3525  007F3A  20                 	db	32
  3526  007F3B  50                 	db	80	;'P'
  3527  007F3C  61                 	db	97	;'a'
  3528  007F3D  73                 	db	115	;'s'
  3529  007F3E  73                 	db	115	;'s'
  3530  007F3F  63                 	db	99	;'c'
  3531  007F40  6F                 	db	111	;'o'
  3532  007F41  64                 	db	100	;'d'
  3533  007F42  65                 	db	101	;'e'
  3534  007F43  00                 	db	0
  3535  007F44                     STR_98:
  3536  007F44  0A                 	db	10
  3537  007F45  0D                 	db	13
  3538  007F46  45                 	db	69	;'E'
  3539  007F47  6E                 	db	110	;'n'
  3540  007F48  74                 	db	116	;'t'
  3541  007F49  65                 	db	101	;'e'
  3542  007F4A  72                 	db	114	;'r'
  3543  007F4B  20                 	db	32
  3544  007F4C  4E                 	db	78	;'N'
  3545  007F4D  65                 	db	101	;'e'
  3546  007F4E  77                 	db	119	;'w'
  3547  007F4F  20                 	db	32
  3548  007F50  50                 	db	80	;'P'
  3549  007F51  61                 	db	97	;'a'
  3550  007F52  73                 	db	115	;'s'
  3551  007F53  73                 	db	115	;'s'
  3552  007F54  63                 	db	99	;'c'
  3553  007F55  6F                 	db	111	;'o'
  3554  007F56  64                 	db	100	;'d'
  3555  007F57  65                 	db	101	;'e'
  3556  007F58  3A                 	db	58	;':'
  3557  007F59  20                 	db	32
  3558  007F5A  00                 	db	0
  3559  007F5B                     STR_45:
  3560  007F5B  0A                 	db	10
  3561  007F5C  0D                 	db	13
  3562  007F5D  4E                 	db	78	;'N'
  3563  007F5E  6F                 	db	111	;'o'
  3564  007F5F  20                 	db	32
  3565  007F60  73                 	db	115	;'s'
  3566  007F61  65                 	db	101	;'e'
  3567  007F62  6C                 	db	108	;'l'
  3568  007F63  65                 	db	101	;'e'
  3569  007F64  63                 	db	99	;'c'
  3570  007F65  74                 	db	116	;'t'
  3571  007F66  69                 	db	105	;'i'
  3572  007F67  6F                 	db	111	;'o'
  3573  007F68  6E                 	db	110	;'n'
  3574  007F69  20                 	db	32
  3575  007F6A  6D                 	db	109	;'m'
  3576  007F6B  61                 	db	97	;'a'
  3577  007F6C  64                 	db	100	;'d'
  3578  007F6D  65                 	db	101	;'e'
  3579  007F6E  2E                 	db	46
  3580  007F6F  00                 	db	0
  3581  007F70                     STR_149:
  3582  007F70  0A                 	db	10
  3583  007F71  0D                 	db	13
  3584  007F72  43                 	db	67	;'C'
  3585  007F73  6F                 	db	111	;'o'
  3586  007F74  6D                 	db	109	;'m'
  3587  007F75  70                 	db	112	;'p'
  3588  007F76  6F                 	db	111	;'o'
  3589  007F77  6E                 	db	110	;'n'
  3590  007F78  65                 	db	101	;'e'
  3591  007F79  6E                 	db	110	;'n'
  3592  007F7A  74                 	db	116	;'t'
  3593  007F7B  20                 	db	32
  3594  007F7C  53                 	db	83	;'S'
  3595  007F7D  74                 	db	116	;'t'
  3596  007F7E  61                 	db	97	;'a'
  3597  007F7F  74                 	db	116	;'t'
  3598  007F80  75                 	db	117	;'u'
  3599  007F81  73                 	db	115	;'s'
  3600  007F82  65                 	db	101	;'e'
  3601  007F83  73                 	db	115	;'s'
  3602  007F84  00                 	db	0
  3603  007F85                     STR_56:
  3604  007F85  4B                 	db	75	;'K'
  3605  007F86  65                 	db	101	;'e'
  3606  007F87  79                 	db	121	;'y'
  3607  007F88  62                 	db	98	;'b'
  3608  007F89  6F                 	db	111	;'o'
  3609  007F8A  61                 	db	97	;'a'
  3610  007F8B  72                 	db	114	;'r'
  3611  007F8C  64                 	db	100	;'d'
  3612  007F8D  20                 	db	32
  3613  007F8E  41                 	db	65	;'A'
  3614  007F8F  4E                 	db	78	;'N'
  3615  007F90  44                 	db	68	;'D'
  3616  007F91  20                 	db	32
  3617  007F92  4B                 	db	75	;'K'
  3618  007F93  65                 	db	101	;'e'
  3619  007F94  79                 	db	121	;'y'
  3620  007F95  70                 	db	112	;'p'
  3621  007F96  61                 	db	97	;'a'
  3622  007F97  64                 	db	100	;'d'
  3623  007F98  00                 	db	0
  3624  007F99                     STR_80:
  3625  007F99  4B                 	db	75	;'K'
  3626  007F9A  65                 	db	101	;'e'
  3627  007F9B  79                 	db	121	;'y'
  3628  007F9C  62                 	db	98	;'b'
  3629  007F9D  6F                 	db	111	;'o'
  3630  007F9E  61                 	db	97	;'a'
  3631  007F9F  72                 	db	114	;'r'
  3632  007FA0  64                 	db	100	;'d'
  3633  007FA1  20                 	db	32
  3634  007FA2  61                 	db	97	;'a'
  3635  007FA3  6E                 	db	110	;'n'
  3636  007FA4  64                 	db	100	;'d'
  3637  007FA5  20                 	db	32
  3638  007FA6  4B                 	db	75	;'K'
  3639  007FA7  65                 	db	101	;'e'
  3640  007FA8  79                 	db	121	;'y'
  3641  007FA9  70                 	db	112	;'p'
  3642  007FAA  61                 	db	97	;'a'
  3643  007FAB  64                 	db	100	;'d'
  3644  007FAC  00                 	db	0
  3645  007FAD                     STR_13:
  3646  007FAD  0A                 	db	10
  3647  007FAE  0D                 	db	13
  3648  007FAF  49                 	db	73	;'I'
  3649  007FB0  6E                 	db	110	;'n'
  3650  007FB1  76                 	db	118	;'v'
  3651  007FB2  61                 	db	97	;'a'
  3652  007FB3  6C                 	db	108	;'l'
  3653  007FB4  69                 	db	105	;'i'
  3654  007FB5  64                 	db	100	;'d'
  3655  007FB6  20                 	db	32
  3656  007FB7  53                 	db	83	;'S'
  3657  007FB8  65                 	db	101	;'e'
  3658  007FB9  6C                 	db	108	;'l'
  3659  007FBA  65                 	db	101	;'e'
  3660  007FBB  63                 	db	99	;'c'
  3661  007FBC  74                 	db	116	;'t'
  3662  007FBD  69                 	db	105	;'i'
  3663  007FBE  6F                 	db	111	;'o'
  3664  007FBF  6E                 	db	110	;'n'
  3665  007FC0  00                 	db	0
  3666  007FC1                     STR_28:
  3667  007FC1  0A                 	db	10
  3668  007FC2  0D                 	db	13
  3669  007FC3  45                 	db	69	;'E'
  3670  007FC4  6E                 	db	110	;'n'
  3671  007FC5  74                 	db	116	;'t'
  3672  007FC6  65                 	db	101	;'e'
  3673  007FC7  72                 	db	114	;'r'
  3674  007FC8  20                 	db	32
  3675  007FC9  70                 	db	112	;'p'
  3676  007FCA  61                 	db	97	;'a'
  3677  007FCB  73                 	db	115	;'s'
  3678  007FCC  73                 	db	115	;'s'
  3679  007FCD  63                 	db	99	;'c'
  3680  007FCE  6F                 	db	111	;'o'
  3681  007FCF  64                 	db	100	;'d'
  3682  007FD0  65                 	db	101	;'e'
  3683  007FD1  3A                 	db	58	;':'
  3684  007FD2  20                 	db	32
  3685  007FD3  00                 	db	0
  3686  007FD4                     STR_77:
  3687  007FD4  0A                 	db	10
  3688  007FD5  0D                 	db	13
  3689  007FD6  49                 	db	73	;'I'
  3690  007FD7  6E                 	db	110	;'n'
  3691  007FD8  70                 	db	112	;'p'
  3692  007FD9  75                 	db	117	;'u'
  3693  007FDA  74                 	db	116	;'t'
  3694  007FDB  3A                 	db	58	;':'
  3695  007FDC  20                 	db	32
  3696  007FDD  00                 	db	0
  3697  007FDE                     STR_1:
  3698  007FDE  49                 	db	73	;'I'
  3699  007FDF  4E                 	db	78	;'N'
  3700  007FE0  41                 	db	65	;'A'
  3701  007FE1  43                 	db	67	;'C'
  3702  007FE2  54                 	db	84	;'T'
  3703  007FE3  49                 	db	73	;'I'
  3704  007FE4  56                 	db	86	;'V'
  3705  007FE5  45                 	db	69	;'E'
  3706  007FE6  00                 	db	0
  3707  007FE7                     STR_3:
  3708  007FE7  4B                 	db	75	;'K'
  3709  007FE8  65                 	db	101	;'e'
  3710  007FE9  79                 	db	121	;'y'
  3711  007FEA  62                 	db	98	;'b'
  3712  007FEB  6F                 	db	111	;'o'
  3713  007FEC  61                 	db	97	;'a'
  3714  007FED  72                 	db	114	;'r'
  3715  007FEE  64                 	db	100	;'d'
  3716  007FEF  00                 	db	0
  3717  007FF0                     STR_160:
  3718  007FF0  25                 	db	37
  3719  007FF1  32                 	db	50	;'2'
  3720  007FF2  2E                 	db	46
  3721  007FF3  32                 	db	50	;'2'
  3722  007FF4  66                 	db	102	;'f'
  3723  007FF5  00                 	db	0
  3724  007FF6                     STR_161:
  3725  007FF6  1B                 	db	27
  3726  007FF7  5B                 	db	91	;'['
  3727  007FF8  32                 	db	50	;'2'
  3728  007FF9  4A                 	db	74	;'J'
  3729  007FFA  00                 	db	0
  3730  007FFB                     STR_155:
  3731  007FFB  25                 	db	37
  3732  007FFC  64                 	db	100	;'d'
  3733  007FFD  00                 	db	0
  3734  0000                     
  3735                           ; #config settings
  3736  007FFE  00                 	db	0	; dummy byte at the end
  3737  0000                     
  3738                           	psect	cinit
  3739  004534                     __pcinit:
  3740                           	opt stack 0
  3741  004534                     start_initialization:
  3742                           	opt stack 0
  3743  004534                     __initialization:
  3744                           	opt stack 0
  3745                           
  3746                           ; Initialize objects allocated to COMRAM (17 bytes)
  3747                           ; load TBLPTR registers with __pidataCOMRAM
  3748  004534  0EC0               	movlw	low __pidataCOMRAM
  3749  004536  6EF6               	movwf	tblptrl,c
  3750  004538  0E46               	movlw	high __pidataCOMRAM
  3751  00453A  6EF7               	movwf	tblptrh,c
  3752  00453C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3753  00453E  6EF8               	movwf	tblptru,c
  3754  004540  EE00  F041         	lfsr	0,__pdataCOMRAM
  3755  004544  EE20 F011          	lfsr	2,17
  3756  004548                     copy_data0:
  3757  004548  0009               	tblrd		*+
  3758  00454A  CFF5 FFEE          	movff	tablat,postinc0
  3759  00454E  50DD               	movf	postdec2,w,c
  3760  004550  50D9               	movf	fsr2l,w,c
  3761  004552  E1FA               	bnz	copy_data0
  3762                           
  3763                           ; Clear objects allocated to COMRAM (38 bytes)
  3764  004554  EE00  F001         	lfsr	0,__pbssCOMRAM
  3765  004558  0E26               	movlw	38
  3766  00455A                     clear_0:
  3767  00455A  6AEE               	clrf	postinc0,c
  3768  00455C  06E8               	decf	wreg,f,c
  3769  00455E  E1FD               	bnz	clear_0
  3770  004560                     end_of_initialization:
  3771                           	opt stack 0
  3772  004560                     __end_of__initialization:
  3773                           	opt stack 0
  3774  004560  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3775  004562  6EF8               	movwf	tblptru,c
  3776  004564  0100               	movlb	0
  3777  004566  EF8E  F020         	goto	_main	;jump to C main() function
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           postdec2	equ	0xFDD
  3785                           fsr2l	equ	0xFD9
  3786                           
  3787                           	psect	bssCOMRAM
  3788  000001                     __pbssCOMRAM:
  3789                           	opt stack 0
  3790  000001                     _temperature:
  3791                           	opt stack 0
  3792  000001                     	ds	3
  3793  000004                     _PIRStatusAddress:
  3794                           	opt stack 0
  3795  000004                     	ds	2
  3796  000006                     _address:
  3797                           	opt stack 0
  3798  000006                     	ds	2
  3799  000008                     _bottom:
  3800                           	opt stack 0
  3801  000008                     	ds	2
  3802  00000A                     _i:
  3803                           	opt stack 0
  3804  00000A                     	ds	2
  3805  00000C                     _password:
  3806                           	opt stack 0
  3807  00000C                     	ds	2
  3808  00000E                     _pot_vol:
  3809                           	opt stack 0
  3810  00000E                     	ds	2
  3811  000010                     _status:
  3812                           	opt stack 0
  3813  000010                     	ds	2
  3814  000012                     _temp:
  3815                           	opt stack 0
  3816  000012                     	ds	2
  3817  000014                     _temp1:
  3818                           	opt stack 0
  3819  000014                     	ds	2
  3820  000016                     _tempPass:
  3821                           	opt stack 0
  3822  000016                     	ds	2
  3823  000018                     _top:
  3824                           	opt stack 0
  3825  000018                     	ds	2
  3826  00001A                     _valid:
  3827                           	opt stack 0
  3828  00001A                     	ds	2
  3829  00001C                     _keypadValue:
  3830                           	opt stack 0
  3831  00001C                     	ds	1
  3832  00001D                     _option:
  3833                           	opt stack 0
  3834  00001D                     	ds	1
  3835  00001E                     _currentTemp:
  3836                           	opt stack 0
  3837  00001E                     	ds	6
  3838  000024                     _tempThreshold:
  3839                           	opt stack 0
  3840  000024                     	ds	3
  3841                           tblptru	equ	0xFF8
  3842                           tblptrh	equ	0xFF7
  3843                           tblptrl	equ	0xFF6
  3844                           tablat	equ	0xFF5
  3845                           postinc0	equ	0xFEE
  3846                           wreg	equ	0xFE8
  3847                           postdec2	equ	0xFDD
  3848                           fsr2l	equ	0xFD9
  3849                           
  3850                           	psect	dataCOMRAM
  3851  000041                     __pdataCOMRAM:
  3852                           	opt stack 0
  3853  000041                     _inputMethodAddress:
  3854                           	opt stack 0
  3855  000041                     	ds	2
  3856  000043                     _inputType:
  3857                           	opt stack 0
  3858  000043                     	ds	2
  3859  000045                     _pirState:
  3860                           	opt stack 0
  3861  000045                     	ds	2
  3862  000047                     _tempState:
  3863                           	opt stack 0
  3864  000047                     	ds	2
  3865  000049                     _tempStatusAddress:
  3866                           	opt stack 0
  3867  000049                     	ds	2
  3868  00004B                     _tempThresholdAddress:
  3869                           	opt stack 0
  3870  00004B                     	ds	2
  3871  00004D                     _thresholdTemp:
  3872                           	opt stack 0
  3873  00004D                     	ds	2
  3874  00004F                     _degree:
  3875                           	opt stack 0
  3876  00004F                     	ds	3
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           postinc0	equ	0xFEE
  3882                           wreg	equ	0xFE8
  3883                           postdec2	equ	0xFDD
  3884                           fsr2l	equ	0xFD9
  3885                           
  3886                           	psect	cstackBANK0
  3887  000080                     __pcstackBANK0:
  3888                           	opt stack 0
  3889  000080                     ??_My_ISR_Low:
  3890                           
  3891                           ; 1 bytes @ 0x0
  3892  000080                     	ds	24
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postdec2	equ	0xFDD
  3900                           fsr2l	equ	0xFD9
  3901                           
  3902                           	psect	cstackCOMRAM
  3903  000027                     __pcstackCOMRAM:
  3904                           	opt stack 0
  3905  000027                     ??_My_ISR_High:
  3906  000027                     
  3907                           ; 1 bytes @ 0x0
  3908  000027                     	ds	13
  3909  000034                     My_ISR_High@check:
  3910                           	opt stack 0
  3911                           
  3912                           ; 2 bytes @ 0xD
  3913  000034                     	ds	2
  3914  000036                     ?___awtoft:
  3915                           	opt stack 0
  3916  000036                     ___awtoft@c:
  3917                           	opt stack 0
  3918                           
  3919                           ; 2 bytes @ 0xF
  3920  000036                     	ds	3
  3921  000039                     ??___awtoft:
  3922                           
  3923                           ; 1 bytes @ 0x12
  3924  000039                     	ds	3
  3925  00003C                     ___awtoft@sign:
  3926                           	opt stack 0
  3927                           
  3928                           ; 1 bytes @ 0x15
  3929  00003C                     	ds	1
  3930  00003D                     ?_getInput:
  3931                           	opt stack 0
  3932  00003D                     componentStatus@arr:
  3933                           	opt stack 0
  3934                           
  3935                           ; 2 bytes @ 0x16
  3936  00003D                     	ds	2
  3937  00003F                     getInput@i:
  3938                           	opt stack 0
  3939                           
  3940                           ; 2 bytes @ 0x18
  3941  00003F                     	ds	2
  3942  000041                     tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           postdec2	equ	0xFDD
  3949                           fsr2l	equ	0xFD9
  3950                           
  3951                           ; 1 bytes @ 0x1A
  3952 ;;
  3953 ;;Main: autosize = 0, tempsize = 0, incstack = 2, save=0
  3954 ;;
  3955 ;; *************** function _main *****************
  3956 ;; Defined at:
  3957 ;;		line 144 in file "lab7.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3971 ;;      Params:         0       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels required when called:   20
  3977 ;; This function calls:
  3978 ;;		_Initial
  3979 ;;		_getTemperature
  3980 ;;		_login
  3981 ;;		_mainScreen
  3982 ;;		_read_EEPROM
  3983 ;;		_setPassword
  3984 ;;		_settingsCom
  3985 ;;		_settingsPIR
  3986 ;;		_settingsTimer
  3987 ;;		_tempSetting
  3988 ;; This function is called by:
  3989 ;;		Startup code after reset
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text0
  3994  00411C                     __ptext0:
  3995                           	opt stack 0
  3996  00411C                     _main:
  3997                           	opt stack 11
  3998                           
  3999                           ;lab7.c: 146: Initial();
  4000                           
  4001                           ;incstack = 0
  4002  00411C  EC11  F023         	call	_Initial	;wreg free
  4003                           
  4004                           ;lab7.c: 147: settingsPIR();
  4005  004120  EC56  F023         	call	_settingsPIR	;wreg free
  4006                           
  4007                           ;lab7.c: 148: settingsCom();
  4008  004124  EC20  F023         	call	_settingsCom	;wreg free
  4009                           
  4010                           ;lab7.c: 149: tempSetting();
  4011  004128  EC69  F023         	call	_tempSetting	;wreg free
  4012                           
  4013                           ;lab7.c: 150: settingsTimer();
  4014  00412C  EC4C  F023         	call	_settingsTimer	;wreg free
  4015                           
  4016                           ;lab7.c: 151: getTemperature();
  4017  004130  EC37  F015         	call	_getTemperature	;wreg free
  4018                           
  4019                           ;lab7.c: 153: for(i = 0, address = 0xE0; i < 4;address++,i++)
  4020  004134  0E00               	movlw	0
  4021  004136  6E0B               	movwf	_i+1,c
  4022  004138  0E00               	movlw	0
  4023  00413A  6E0A               	movwf	_i,c
  4024  00413C  0E00               	movlw	0
  4025  00413E  6E07               	movwf	_address+1,c
  4026  004140  0EE0               	movlw	224
  4027  004142  6E06               	movwf	_address,c
  4028  004144  D012               	goto	l4064
  4029  004146                     l4058:
  4030                           
  4031                           ;lab7.c: 154: {
  4032                           ;lab7.c: 155: password[i] = read_EEPROM(address);
  4033  004146  500A               	movf	_i,w,c
  4034  004148  240C               	addwf	_password,w,c
  4035  00414A  6ED9               	movwf	fsr2l,c
  4036  00414C  500B               	movf	_i+1,w,c
  4037  00414E  200D               	addwfc	_password+1,w,c
  4038  004150  6EDA               	movwf	fsr2h,c
  4039  004152  C006  FFE6         	movff	_address,postinc1
  4040  004156  C007  FFE6         	movff	_address+1,postinc1
  4041  00415A  EC36  F023         	call	_read_EEPROM	;wreg free
  4042  00415E  5052               	movf	btemp,w,c
  4043  004160  6EDF               	movwf	indf2,c
  4044  004162  4A06               	infsnz	_address,f,c
  4045  004164  2A07               	incf	_address+1,f,c
  4046  004166  4A0A               	infsnz	_i,f,c
  4047  004168  2A0B               	incf	_i+1,f,c
  4048  00416A                     l4064:
  4049  00416A  BE0B               	btfsc	_i+1,7,c
  4050  00416C  D7EC               	goto	l4058
  4051  00416E  500B               	movf	_i+1,w,c
  4052  004170  E104               	bnz	l4066
  4053  004172  0E04               	movlw	4
  4054  004174  5C0A               	subwf	_i,w,c
  4055  004176  A0D8               	btfss	status,0,c
  4056  004178  D7E6               	goto	l4058
  4057  00417A                     l4066:
  4058                           
  4059                           ;lab7.c: 156: }
  4060                           ;lab7.c: 157: mainScreen();
  4061  00417A  EC48  F020         	call	_mainScreen	;wreg free
  4062  00417E                     l4068:
  4063                           
  4064                           ;lab7.c: 160: {
  4065                           ;lab7.c: 162: if(read_EEPROM(0xE0) ==(char)255)
  4066  00417E  0EE0               	movlw	224
  4067  004180  6EE6               	movwf	postinc1,c
  4068  004182  0E00               	movlw	0
  4069  004184  6EE6               	movwf	postinc1,c
  4070  004186  EC36  F023         	call	_read_EEPROM	;wreg free
  4071  00418A  2852               	incf	btemp,w,c
  4072  00418C  A4D8               	btfss	status,2,c
  4073  00418E  D003               	goto	l4072
  4074                           
  4075                           ;lab7.c: 163: {
  4076                           ;lab7.c: 164: setPassword();
  4077  004190  ECCE  F020         	call	_setPassword	;wreg free
  4078                           
  4079                           ;lab7.c: 165: }
  4080  004194  D7F4               	goto	l4068
  4081  004196                     l4072:
  4082                           
  4083                           ;lab7.c: 166: else
  4084                           ;lab7.c: 167: {
  4085                           ;lab7.c: 168: login();
  4086  004196  ECEE  F021         	call	_login	;wreg free
  4087  00419A  D7F1               	goto	l4068
  4088  00419C                     __end_of_main:
  4089                           	opt stack 0
  4090                           tblptru	equ	0xFF8
  4091                           tblptrh	equ	0xFF7
  4092                           tblptrl	equ	0xFF6
  4093                           tablat	equ	0xFF5
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           postinc1	equ	0xFE6
  4097                           indf2	equ	0xFDF
  4098                           postdec2	equ	0xFDD
  4099                           fsr2h	equ	0xFDA
  4100                           fsr2l	equ	0xFD9
  4101                           status	equ	0xFD8
  4102                           
  4103 ;; *************** function _settingsTimer *****************
  4104 ;; Defined at:
  4105 ;;		line 200 in file "lab7.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4119 ;;      Params:         0       0       0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0
  4122 ;;      Totals:         0       0       0       0       0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:   10
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text1
  4134  004698                     __ptext1:
  4135                           	opt stack 0
  4136  004698                     _settingsTimer:
  4137                           	opt stack 20
  4138                           
  4139                           ;lab7.c: 202: INTCONbits.TMR0IF=0;
  4140                           
  4141                           ;incstack = 0
  4142  004698  94F2               	bcf	intcon,2,c	;volatile
  4143                           
  4144                           ;lab7.c: 203: INTCONbits.TMR0IE=1;
  4145  00469A  8AF2               	bsf	intcon,5,c	;volatile
  4146                           
  4147                           ;lab7.c: 204: INTCON2bits.TMR0IP = 0;
  4148  00469C  94F1               	bcf	intcon2,2,c	;volatile
  4149                           
  4150                           ;lab7.c: 205: T0CON = 0b00000110;
  4151  00469E  0E06               	movlw	6
  4152  0046A0  6ED5               	movwf	4053,c	;volatile
  4153                           
  4154                           ;lab7.c: 207: TMR0H = 0x67;
  4155  0046A2  0E67               	movlw	103
  4156  0046A4  6ED7               	movwf	4055,c	;volatile
  4157                           
  4158                           ;lab7.c: 208: TMR0L = 0x6A;
  4159  0046A6  0E6A               	movlw	106
  4160  0046A8  6ED6               	movwf	4054,c	;volatile
  4161  0046AA  0012               	return		;funcret
  4162  0046AC                     __end_of_settingsTimer:
  4163                           	opt stack 0
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           intcon	equ	0xFF2
  4169                           intcon2	equ	0xFF1
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           postinc1	equ	0xFE6
  4173                           indf2	equ	0xFDF
  4174                           postdec2	equ	0xFDD
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _settingsCom *****************
  4180 ;; Defined at:
  4181 ;;		line 187 in file "lab7.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4195 ;;      Params:         0       0       0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:   10
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text2
  4210  004640                     __ptext2:
  4211                           	opt stack 0
  4212  004640                     _settingsCom:
  4213                           	opt stack 20
  4214                           
  4215                           ;lab7.c: 189: TRISCbits.RC6 = 0;
  4216                           
  4217                           ;incstack = 0
  4218  004640  9C94               	bcf	3988,6,c	;volatile
  4219                           
  4220                           ;lab7.c: 190: TRISCbits.RC7 = 1;
  4221  004642  8E94               	bsf	3988,7,c	;volatile
  4222                           
  4223                           ;lab7.c: 191: SPBRG = 15;
  4224  004644  0E0F               	movlw	15
  4225  004646  6EAF               	movwf	4015,c	;volatile
  4226                           
  4227                           ;lab7.c: 192: TXSTAbits.SYNC = 0;
  4228  004648  98AC               	bcf	4012,4,c	;volatile
  4229                           
  4230                           ;lab7.c: 193: TXSTAbits.BRGH = 0;
  4231  00464A  94AC               	bcf	4012,2,c	;volatile
  4232                           
  4233                           ;lab7.c: 194: TXSTAbits.TX9 = 0;
  4234  00464C  9CAC               	bcf	4012,6,c	;volatile
  4235                           
  4236                           ;lab7.c: 195: RCSTAbits.SPEN = 1;
  4237  00464E  8EAB               	bsf	4011,7,c	;volatile
  4238                           
  4239                           ;lab7.c: 196: TXSTAbits.TXEN = 1;
  4240  004650  8AAC               	bsf	4012,5,c	;volatile
  4241                           
  4242                           ;lab7.c: 197: RCSTAbits.CREN = 1;
  4243  004652  88AB               	bsf	4011,4,c	;volatile
  4244  004654  0012               	return		;funcret
  4245  004656                     __end_of_settingsCom:
  4246                           	opt stack 0
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           intcon	equ	0xFF2
  4252                           intcon2	equ	0xFF1
  4253                           postinc0	equ	0xFEE
  4254                           wreg	equ	0xFE8
  4255                           postinc1	equ	0xFE6
  4256                           indf2	equ	0xFDF
  4257                           postdec2	equ	0xFDD
  4258                           fsr2h	equ	0xFDA
  4259                           fsr2l	equ	0xFD9
  4260                           status	equ	0xFD8
  4261                           
  4262 ;; *************** function _setPassword *****************
  4263 ;; Defined at:
  4264 ;;		line 838 in file "lab7.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4278 ;;      Params:         0       0       0       0       0       0       0
  4279 ;;      Locals:         0       0       0       0       0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0
  4281 ;;      Totals:         0       0       0       0       0       0       0
  4282 ;;Total ram usage:        0 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:   19
  4285 ;; This function calls:
  4286 ;;		_componentStatus
  4287 ;;		_delay
  4288 ;;		_getInput
  4289 ;;		_login
  4290 ;;		_mainMenu
  4291 ;;		_mainScreen
  4292 ;;		_printChar
  4293 ;;		_resetScreen
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text3
  4300  00419C                     __ptext3:
  4301                           	opt stack 0
  4302  00419C                     _setPassword:
  4303                           	opt stack 11
  4304                           
  4305                           ;lab7.c: 840: printChar("\n\r");
  4306                           
  4307                           ;incstack = 0
  4308  00419C  0EEC               	movlw	low (STR_17+36)
  4309  00419E  6EE6               	movwf	postinc1,c
  4310  0041A0  0E7A               	movlw	high (STR_17+36)
  4311  0041A2  6EE6               	movwf	postinc1,c
  4312  0041A4  EC0B  F021         	call	_printChar	;wreg free
  4313                           
  4314                           ;lab7.c: 841: printChar("\n\rWelcome to the Alarm System");
  4315  0041A8  0E09               	movlw	low STR_104
  4316  0041AA  6EE6               	movwf	postinc1,c
  4317  0041AC  0E7E               	movlw	high STR_104
  4318  0041AE  6EE6               	movwf	postinc1,c
  4319  0041B0  EC0B  F021         	call	_printChar	;wreg free
  4320                           
  4321                           ;lab7.c: 842: printChar("\n\rThis is your first time. So, Let's set up your passcode.");
  4322  0041B4  0E79               	movlw	low STR_105
  4323  0041B6  6EE6               	movwf	postinc1,c
  4324  0041B8  0E77               	movlw	high STR_105
  4325  0041BA  6EE6               	movwf	postinc1,c
  4326  0041BC  EC0B  F021         	call	_printChar	;wreg free
  4327                           
  4328                           ;lab7.c: 843: printChar("\n\rPlease enter 4-digit passcode: ");
  4329  0041C0  0ECA               	movlw	low STR_106
  4330  0041C2  6EE6               	movwf	postinc1,c
  4331  0041C4  0E7C               	movlw	high STR_106
  4332  0041C6  6EE6               	movwf	postinc1,c
  4333  0041C8  EC0B  F021         	call	_printChar	;wreg free
  4334                           
  4335                           ;lab7.c: 844: delay();
  4336  0041CC  ECE8  F022         	call	_delay	;wreg free
  4337                           
  4338                           ;lab7.c: 845: *password = getInput();
  4339  0041D0  ECB1  F019         	call	_getInput	;wreg free
  4340  0041D4  503D               	movf	?_getInput,w,c
  4341  0041D6  C00C  FFD9         	movff	_password,fsr2l
  4342  0041DA  C00D  FFDA         	movff	_password+1,fsr2h
  4343  0041DE  6EDF               	movwf	indf2,c
  4344  0041E0                     l4014:
  4345  0041E0  0E0D               	movlw	13
  4346  0041E2  18AE               	xorwf	4014,w,c	;volatile
  4347  0041E4  A4D8               	btfss	status,2,c
  4348  0041E6  D7FC               	goto	l4014
  4349                           
  4350                           ;lab7.c: 847: printChar("\n\rPassword has been registered successfully");
  4351  0041E8  0ECB               	movlw	low STR_107
  4352  0041EA  6EE6               	movwf	postinc1,c
  4353  0041EC  0E79               	movlw	high STR_107
  4354  0041EE  6EE6               	movwf	postinc1,c
  4355  0041F0  EC0B  F021         	call	_printChar	;wreg free
  4356                           
  4357                           ;lab7.c: 848: delay();
  4358  0041F4  ECE8  F022         	call	_delay	;wreg free
  4359                           
  4360                           ;lab7.c: 849: mainScreen();
  4361  0041F8  EC48  F020         	call	_mainScreen	;wreg free
  4362                           
  4363                           ;lab7.c: 850: login();
  4364  0041FC  ECEE  F021         	call	_login	;wreg free
  4365                           
  4366                           ;lab7.c: 851: resetScreen();
  4367  004200  EC41  F023         	call	_resetScreen	;wreg free
  4368                           
  4369                           ;lab7.c: 852: mainMenu();
  4370  004204  ECB1  F011         	call	_mainMenu	;wreg free
  4371                           
  4372                           ;lab7.c: 853: componentStatus();
  4373  004208  ECF2  F01A         	call	_componentStatus	;wreg free
  4374                           
  4375                           ;lab7.c: 855: status = 0;
  4376  00420C  0E00               	movlw	0
  4377  00420E  6E11               	movwf	_status+1,c
  4378  004210  0E00               	movlw	0
  4379  004212  6E10               	movwf	_status,c
  4380  004214  0012               	return		;funcret
  4381  004216                     __end_of_setPassword:
  4382                           	opt stack 0
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           intcon	equ	0xFF2
  4388                           intcon2	equ	0xFF1
  4389                           postinc0	equ	0xFEE
  4390                           wreg	equ	0xFE8
  4391                           postinc1	equ	0xFE6
  4392                           indf2	equ	0xFDF
  4393                           postdec2	equ	0xFDD
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8
  4397                           
  4398 ;; *************** function _getTemperature *****************
  4399 ;; Defined at:
  4400 ;;		line 1303 in file "lab7.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  arr             3  [STACK] unsigned char [3]
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1  [STACK] void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4414 ;;      Params:         0       0       0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0
  4417 ;;      Totals:         0       0       0       0       0       0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:   14
  4421 ;; This function calls:
  4422 ;;		___ftadd
  4423 ;;		___ftdiv
  4424 ;;		___ftmul
  4425 ;;		___lwtoft
  4426 ;;		_sprintf
  4427 ;; This function is called by:
  4428 ;;		_main
  4429 ;;		_My_ISR_Low
  4430 ;; This function uses a reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text4
  4434  002A6E                     __ptext4:
  4435                           	opt stack 0
  4436  002A6E                     _getTemperature:
  4437                           	opt stack 0
  4438                           
  4439                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4440  002A6E  52E6               	movf	postinc1,f,c
  4441  002A70  52E6               	movf	postinc1,f,c
  4442  002A72  52E6               	movf	postinc1,f,c
  4443                           
  4444                           ;lab7.c: 1305: ADCON0 = 0b00000001;
  4445                           
  4446                           ;incstack = 0
  4447  002A74  0E01               	movlw	1
  4448  002A76  6EC2               	movwf	4034,c	;volatile
  4449                           
  4450                           ;lab7.c: 1307: ADCON1 = 0b00001110;
  4451  002A78  0E0E               	movlw	14
  4452  002A7A  6EC1               	movwf	4033,c	;volatile
  4453                           
  4454                           ;lab7.c: 1308: ADCON2 = 0b10101100;
  4455  002A7C  0EAC               	movlw	172
  4456  002A7E  6EC0               	movwf	4032,c	;volatile
  4457                           
  4458                           ;lab7.c: 1311: TRISAbits.TRISA0 = 1;
  4459  002A80  8092               	bsf	3986,0,c	;volatile
  4460                           
  4461                           ;lab7.c: 1312: ADCON0bits.GO = 1;
  4462  002A82  82C2               	bsf	4034,1,c	;volatile
  4463  002A84                     l600:
  4464  002A84  B2C2               	btfsc	4034,1,c	;volatile
  4465  002A86  D7FE               	goto	l600
  4466                           
  4467                           ;lab7.c: 1314: temp1 = ADRESH;
  4468  002A88  CFC4 F014          	movff	4036,_temp1	;volatile
  4469  002A8C  6A15               	clrf	_temp1+1,c
  4470                           
  4471                           ;lab7.c: 1315: temp1 = temp1 << 8;
  4472  002A8E  5014               	movf	_temp1,w,c
  4473  002A90  6E15               	movwf	_temp1+1,c
  4474  002A92  6A14               	clrf	_temp1,c
  4475                           
  4476                           ;lab7.c: 1316: temp1 += ADRESL;
  4477  002A94  50C3               	movf	4035,w,c	;volatile
  4478  002A96  2614               	addwf	_temp1,f,c
  4479  002A98  0E00               	movlw	0
  4480  002A9A  2215               	addwfc	_temp1+1,f,c
  4481                           
  4482                           ;lab7.c: 1318: temperature = temp1;
  4483  002A9C  C014  FFE6         	movff	_temp1,postinc1
  4484  002AA0  C015  FFE6         	movff	_temp1+1,postinc1
  4485  002AA4  ECB5  F022         	call	___lwtoft	;wreg free
  4486  002AA8  C052  F001         	movff	btemp,_temperature
  4487  002AAC  C053  F002         	movff	btemp+1,_temperature+1
  4488  002AB0  C054  F003         	movff	btemp+2,_temperature+2
  4489                           
  4490                           ;lab7.c: 1319: temperature = (double)((temperature/1023)*5000);
  4491  002AB4  0E40               	movlw	64
  4492  002AB6  6EE6               	movwf	postinc1,c
  4493  002AB8  0E9C               	movlw	156
  4494  002ABA  6EE6               	movwf	postinc1,c
  4495  002ABC  0E45               	movlw	69
  4496  002ABE  6EE6               	movwf	postinc1,c
  4497  002AC0  0EC0               	movlw	192
  4498  002AC2  6EE6               	movwf	postinc1,c
  4499  002AC4  0E7F               	movlw	127
  4500  002AC6  6EE6               	movwf	postinc1,c
  4501  002AC8  0E44               	movlw	68
  4502  002ACA  6EE6               	movwf	postinc1,c
  4503  002ACC  C001  FFE6         	movff	_temperature,postinc1
  4504  002AD0  C002  FFE6         	movff	_temperature+1,postinc1
  4505  002AD4  C003  FFE6         	movff	_temperature+2,postinc1
  4506  002AD8  EC7B  F013         	call	___ftdiv	;wreg free
  4507  002ADC  C052  FFE6         	movff	btemp,postinc1
  4508  002AE0  C053  FFE6         	movff	btemp+1,postinc1
  4509  002AE4  C054  FFE6         	movff	btemp+2,postinc1
  4510  002AE8  ECB6  F00E         	call	___ftmul	;wreg free
  4511  002AEC  C052  F001         	movff	btemp,_temperature
  4512  002AF0  C053  F002         	movff	btemp+1,_temperature+1
  4513  002AF4  C054  F003         	movff	btemp+2,_temperature+2
  4514                           
  4515                           ;lab7.c: 1320: temperature = temperature - 500;
  4516  002AF8  0E00               	movlw	0
  4517  002AFA  6EE6               	movwf	postinc1,c
  4518  002AFC  0EFA               	movlw	250
  4519  002AFE  6EE6               	movwf	postinc1,c
  4520  002B00  0EC3               	movlw	195
  4521  002B02  6EE6               	movwf	postinc1,c
  4522  002B04  C001  FFE6         	movff	_temperature,postinc1
  4523  002B08  C002  FFE6         	movff	_temperature+1,postinc1
  4524  002B0C  C003  FFE6         	movff	_temperature+2,postinc1
  4525  002B10  EC00  F00C         	call	___ftadd	;wreg free
  4526  002B14  C052  F001         	movff	btemp,_temperature
  4527  002B18  C053  F002         	movff	btemp+1,_temperature+1
  4528  002B1C  C054  F003         	movff	btemp+2,_temperature+2
  4529                           
  4530                           ;lab7.c: 1321: temperature = temperature/10;
  4531  002B20  0E00               	movlw	0
  4532  002B22  6EE6               	movwf	postinc1,c
  4533  002B24  0E20               	movlw	32
  4534  002B26  6EE6               	movwf	postinc1,c
  4535  002B28  0E41               	movlw	65
  4536  002B2A  6EE6               	movwf	postinc1,c
  4537  002B2C  C001  FFE6         	movff	_temperature,postinc1
  4538  002B30  C002  FFE6         	movff	_temperature+1,postinc1
  4539  002B34  C003  FFE6         	movff	_temperature+2,postinc1
  4540  002B38  EC7B  F013         	call	___ftdiv	;wreg free
  4541  002B3C  C052  F001         	movff	btemp,_temperature
  4542  002B40  C053  F002         	movff	btemp+1,_temperature+1
  4543  002B44  C054  F003         	movff	btemp+2,_temperature+2
  4544                           
  4545                           ;lab7.c: 1322: temperature = (temperature)*1.8+32;
  4546  002B48  0E00               	movlw	0
  4547  002B4A  6EE6               	movwf	postinc1,c
  4548  002B4C  0E00               	movlw	0
  4549  002B4E  6EE6               	movwf	postinc1,c
  4550  002B50  0E42               	movlw	66
  4551  002B52  6EE6               	movwf	postinc1,c
  4552  002B54  0E66               	movlw	102
  4553  002B56  6EE6               	movwf	postinc1,c
  4554  002B58  0EE6               	movlw	230
  4555  002B5A  6EE6               	movwf	postinc1,c
  4556  002B5C  0E3F               	movlw	63
  4557  002B5E  6EE6               	movwf	postinc1,c
  4558  002B60  C001  FFE6         	movff	_temperature,postinc1
  4559  002B64  C002  FFE6         	movff	_temperature+1,postinc1
  4560  002B68  C003  FFE6         	movff	_temperature+2,postinc1
  4561  002B6C  ECB6  F00E         	call	___ftmul	;wreg free
  4562  002B70  C052  FFE6         	movff	btemp,postinc1
  4563  002B74  C053  FFE6         	movff	btemp+1,postinc1
  4564  002B78  C054  FFE6         	movff	btemp+2,postinc1
  4565  002B7C  EC00  F00C         	call	___ftadd	;wreg free
  4566  002B80  C052  F001         	movff	btemp,_temperature
  4567  002B84  C053  F002         	movff	btemp+1,_temperature+1
  4568  002B88  C054  F003         	movff	btemp+2,_temperature+2
  4569                           
  4570                           ;lab7.c: 1324: char arr[sizeof(temperature)];
  4571                           ;lab7.c: 1325: sprintf(arr, "%2.2f", temperature);
  4572  002B8C  C001  FFE6         	movff	_temperature,postinc1
  4573  002B90  C002  FFE6         	movff	_temperature+1,postinc1
  4574  002B94  C003  FFE6         	movff	_temperature+2,postinc1
  4575  002B98  0EF0               	movlw	low STR_160
  4576  002B9A  6EE6               	movwf	postinc1,c
  4577  002B9C  0E7F               	movlw	high STR_160
  4578  002B9E  6EE6               	movwf	postinc1,c
  4579                           
  4580                           ;stkvar	getTemperature@arr @ sp[(-8)+0]
  4581  002BA0  0EF8               	movlw	248
  4582  002BA2  24E1               	addwf	fsr1l,w,c
  4583  002BA4  6EE6               	movwf	postinc1,c
  4584  002BA6  0EFF               	movlw	255
  4585  002BA8  20E2               	addwfc	fsr1h,w,c
  4586  002BAA  6EE6               	movwf	postinc1,c
  4587  002BAC  0E07               	movlw	7
  4588  002BAE  6EE6               	movwf	postinc1,c
  4589  002BB0  ECC7  F001         	call	_sprintf	;wreg free
  4590                           
  4591                           ;lab7.c: 1326: for(i=0; i<5;i++){
  4592  002BB4  6A0A               	clrf	_i,c
  4593  002BB6  6A0B               	clrf	_i+1,c
  4594  002BB8                     l3112:
  4595  002BB8  BE0B               	btfsc	_i+1,7,c
  4596  002BBA  D006               	goto	l3116
  4597  002BBC  500B               	movf	_i+1,w,c
  4598  002BBE  E11F               	bnz	l604
  4599  002BC0  0E05               	movlw	5
  4600  002BC2  5C0A               	subwf	_i,w,c
  4601  002BC4  B0D8               	btfsc	status,0,c
  4602  002BC6  D01B               	goto	l604
  4603  002BC8                     l3116:
  4604                           
  4605                           ;lab7.c: 1327: currentTemp[i] = arr[i];
  4606                           ;stkvar	getTemperature@arr @ sp[(-3)+0]
  4607  002BC8  0EFD               	movlw	253
  4608  002BCA  24E1               	addwf	fsr1l,w,c
  4609  002BCC  6E53               	movwf	btemp+1,c
  4610  002BCE  0EFF               	movlw	255
  4611  002BD0  20E2               	addwfc	fsr1h,w,c
  4612  002BD2  6E54               	movwf	btemp+2,c
  4613  002BD4  500A               	movf	_i,w,c
  4614  002BD6  2453               	addwf	btemp+1,w,c
  4615  002BD8  6ED9               	movwf	fsr2l,c
  4616  002BDA  500B               	movf	_i+1,w,c
  4617  002BDC  2054               	addwfc	btemp+2,w,c
  4618  002BDE  6EDA               	movwf	fsr2h,c
  4619  002BE0  C00A  F053         	movff	_i,btemp+1
  4620  002BE4  C00B  F054         	movff	_i+1,btemp+2
  4621  002BE8  0E1E               	movlw	low _currentTemp
  4622  002BEA  2453               	addwf	btemp+1,w,c
  4623  002BEC  6EE9               	movwf	fsr0l,c
  4624  002BEE  0E00               	movlw	high _currentTemp
  4625  002BF0  2054               	addwfc	btemp+2,w,c
  4626  002BF2  6EEA               	movwf	fsr0h,c
  4627  002BF4  CFDF FFEF          	movff	indf2,indf0
  4628  002BF8  4A0A               	infsnz	_i,f,c
  4629  002BFA  2A0B               	incf	_i+1,f,c
  4630  002BFC  D7DD               	goto	l3112
  4631  002BFE                     l604:
  4632                           
  4633                           ;lab7.c: 1328: }
  4634                           ;lab7.c: 1329: currentTemp[5] = '\0';
  4635  002BFE  6A23               	clrf	_currentTemp+5,c
  4636                           
  4637                           ; _getTemperature: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4638  002C00  52E5               	movf	postdec1,f,c
  4639  002C02  52E5               	movf	postdec1,f,c
  4640  002C04  52E5               	movf	postdec1,f,c
  4641  002C06  0012               	return		;funcret
  4642  002C08                     __end_of_getTemperature:
  4643                           	opt stack 0
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           intcon	equ	0xFF2
  4649                           intcon2	equ	0xFF1
  4650                           indf0	equ	0xFEF
  4651                           postinc0	equ	0xFEE
  4652                           fsr0h	equ	0xFEA
  4653                           fsr0l	equ	0xFE9
  4654                           wreg	equ	0xFE8
  4655                           postinc1	equ	0xFE6
  4656                           postdec1	equ	0xFE5
  4657                           fsr1h	equ	0xFE2
  4658                           fsr1l	equ	0xFE1
  4659                           indf2	equ	0xFDF
  4660                           postdec2	equ	0xFDD
  4661                           fsr2h	equ	0xFDA
  4662                           fsr2l	equ	0xFD9
  4663                           status	equ	0xFD8
  4664                           
  4665 ;; *************** function ___lwtoft *****************
  4666 ;; Defined at:
  4667 ;;		line 28 in file "/Applications/microchip/xc8/v1.38/sources/common/lwtoft.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  c               2  [STACK] unsigned int 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  3  [STACK] float 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4681 ;;      Params:         0       0       0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:   11
  4688 ;; This function calls:
  4689 ;;		___ftpack
  4690 ;; This function is called by:
  4691 ;;		_getTemperature
  4692 ;; This function uses a reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text5
  4696  00456A                     __ptext5:
  4697                           	opt stack 0
  4698  00456A                     ___lwtoft:
  4699                           	opt stack 7
  4700                           
  4701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  4702                           ;incstack = 0
  4703  00456A  0E00               	movlw	0
  4704  00456C  6EE6               	movwf	postinc1,c
  4705  00456E  0E8E               	movlw	142
  4706  004570  6EE6               	movwf	postinc1,c
  4707                           
  4708                           ;stkvar	___lwtoft@c @ sp[(-2)+-2]
  4709  004572  0EFC               	movlw	-4
  4710  004574  CFE3 F05C          	movff	plusw1,btemp+10
  4711  004578  0EFD               	movlw	-3
  4712  00457A  CFE3 F05D          	movff	plusw1,btemp+11
  4713  00457E  C05C  F058         	movff	btemp+10,btemp+6
  4714  004582  C05D  F059         	movff	btemp+11,btemp+7
  4715  004586  6A5A               	clrf	btemp+8,c
  4716  004588  C058  FFE6         	movff	btemp+6,postinc1
  4717  00458C  C059  FFE6         	movff	btemp+7,postinc1
  4718  004590  C05A  FFE6         	movff	btemp+8,postinc1
  4719  004594  ECC1  F01C         	call	___ftpack	;wreg free
  4720                           
  4721                           ; ___lwtoft: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  4722  004598  52E5               	movf	postdec1,f,c
  4723  00459A  52E5               	movf	postdec1,f,c
  4724  00459C  0012               	return		;funcret
  4725  00459E                     __end_of___lwtoft:
  4726                           	opt stack 0
  4727                           tblptru	equ	0xFF8
  4728                           tblptrh	equ	0xFF7
  4729                           tblptrl	equ	0xFF6
  4730                           tablat	equ	0xFF5
  4731                           intcon	equ	0xFF2
  4732                           intcon2	equ	0xFF1
  4733                           indf0	equ	0xFEF
  4734                           postinc0	equ	0xFEE
  4735                           fsr0h	equ	0xFEA
  4736                           fsr0l	equ	0xFE9
  4737                           wreg	equ	0xFE8
  4738                           postinc1	equ	0xFE6
  4739                           postdec1	equ	0xFE5
  4740                           plusw1	equ	0xFE3
  4741                           fsr1h	equ	0xFE2
  4742                           fsr1l	equ	0xFE1
  4743                           indf2	equ	0xFDF
  4744                           postdec2	equ	0xFDD
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8
  4748                           
  4749 ;; *************** function ___ftdiv *****************
  4750 ;; Defined at:
  4751 ;;		line 54 in file "/Applications/microchip/xc8/v1.38/sources/common/ftdiv.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  f1              3  [STACK] float 
  4754 ;;  f2              3  [STACK] float 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  f3              3  [STACK] float 
  4757 ;;  sign            1  [STACK] unsigned char 
  4758 ;;  exp             1  [STACK] unsigned char 
  4759 ;;  cntr            1  [STACK] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  3  [STACK] float 
  4762 ;; Registers used:
  4763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4769 ;;      Params:         0       0       0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:   11
  4776 ;; This function calls:
  4777 ;;		___ftpack
  4778 ;; This function is called by:
  4779 ;;		_getTemperature
  4780 ;; This function uses a reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text6
  4784  0026F6                     __ptext6:
  4785                           	opt stack 0
  4786  0026F6                     ___ftdiv:
  4787                           	opt stack 0
  4788                           
  4789                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
  4790  0026F6  0E06               	movlw	6
  4791  0026F8  26E1               	addwf	fsr1l,f,c
  4792  0026FA  0E00               	movlw	0
  4793  0026FC  22E2               	addwfc	fsr1h,f,c
  4794                           
  4795                           ;incstack = 0
  4796  0026FE  0E0F               	movlw	15
  4797  002700  6E5D               	movwf	btemp+11,c
  4798                           
  4799                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4800  002702  0EF7               	movlw	-9
  4801  002704  CFE3 F058          	movff	plusw1,btemp+6
  4802  002708  0EF8               	movlw	-8
  4803  00270A  CFE3 F059          	movff	plusw1,btemp+7
  4804  00270E  0EF9               	movlw	-7
  4805  002710  CFE3 F05A          	movff	plusw1,btemp+8
  4806  002714  285D               	incf	btemp+11,w,c
  4807  002716  6E52               	movwf	btemp,c
  4808  002718  D004               	goto	u2620
  4809  00271A                     u2625:
  4810  00271A  90D8               	bcf	status,0,c
  4811  00271C  325A               	rrcf	btemp+8,f,c
  4812  00271E  3259               	rrcf	btemp+7,f,c
  4813  002720  3258               	rrcf	btemp+6,f,c
  4814  002722                     u2620:
  4815  002722  2E52               	decfsz	btemp,f,c
  4816  002724  D7FA               	goto	u2625
  4817  002726  5058               	movf	btemp+6,w,c
  4818  002728  6E5D               	movwf	btemp+11,c
  4819                           
  4820                           ;stkvar	___ftdiv@exp @ sp[(-6)+4]
  4821  00272A  0EFE               	movlw	-2
  4822  00272C  C05D  FFE3         	movff	btemp+11,plusw1
  4823  002730  0EFE               	movlw	-2
  4824  002732  50E3               	movf	plusw1,w,c
  4825  002734  B4D8               	btfsc	status,2,c
  4826  002736  D01D               	goto	l3016
  4827  002738  0E0F               	movlw	15
  4828  00273A  6E5D               	movwf	btemp+11,c
  4829                           
  4830                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4831  00273C  0EF4               	movlw	-12
  4832  00273E  CFE3 F058          	movff	plusw1,btemp+6
  4833  002742  0EF5               	movlw	-11
  4834  002744  CFE3 F059          	movff	plusw1,btemp+7
  4835  002748  0EF6               	movlw	-10
  4836  00274A  CFE3 F05A          	movff	plusw1,btemp+8
  4837  00274E  285D               	incf	btemp+11,w,c
  4838  002750  6E52               	movwf	btemp,c
  4839  002752  D004               	goto	u2640
  4840  002754                     u2645:
  4841  002754  90D8               	bcf	status,0,c
  4842  002756  325A               	rrcf	btemp+8,f,c
  4843  002758  3259               	rrcf	btemp+7,f,c
  4844  00275A  3258               	rrcf	btemp+6,f,c
  4845  00275C                     u2640:
  4846  00275C  2E52               	decfsz	btemp,f,c
  4847  00275E  D7FA               	goto	u2645
  4848  002760  5058               	movf	btemp+6,w,c
  4849  002762  6E5D               	movwf	btemp+11,c
  4850                           
  4851                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4852  002764  0EFD               	movlw	-3
  4853  002766  C05D  FFE3         	movff	btemp+11,plusw1
  4854  00276A  0EFD               	movlw	-3
  4855  00276C  50E3               	movf	plusw1,w,c
  4856  00276E  A4D8               	btfss	status,2,c
  4857  002770  D007               	goto	l3020
  4858  002772                     l3016:
  4859  002772  0E00               	movlw	0
  4860  002774  6E52               	movwf	btemp,c
  4861  002776  0E00               	movlw	0
  4862  002778  6E53               	movwf	btemp+1,c
  4863  00277A  0E00               	movlw	0
  4864  00277C  6E54               	movwf	btemp+2,c
  4865  00277E  D096               	goto	l1044
  4866  002780                     l3020:
  4867                           
  4868                           ;stkvar	___ftdiv@f3 @ sp[(-6)+0]
  4869  002780  0EFA               	movlw	-6
  4870  002782  6AE3               	clrf	plusw1,c
  4871  002784  0EFB               	movlw	-5
  4872  002786  6AE3               	clrf	plusw1,c
  4873  002788  0EFC               	movlw	-4
  4874  00278A  6AE3               	clrf	plusw1,c
  4875  00278C  0E89               	movlw	137
  4876  00278E  6E5D               	movwf	btemp+11,c
  4877                           
  4878                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4879  002790  0EFD               	movlw	-3
  4880  002792  50E3               	movf	plusw1,w,c
  4881  002794  245D               	addwf	btemp+11,w,c
  4882  002796  6E5C               	movwf	btemp+10,c
  4883                           
  4884                           ;stkvar	___ftdiv@exp @ sp[(-6)+4]
  4885  002798  50E1               	movf	fsr1l,w,c
  4886  00279A  0FFE               	addlw	-2
  4887  00279C  6ED9               	movwf	fsr2l,c
  4888  00279E  50E2               	movf	fsr1h,w,c
  4889  0027A0  6EDA               	movwf	fsr2h,c
  4890  0027A2  0EFF               	movlw	255
  4891  0027A4  22DA               	addwfc	fsr2h,f,c
  4892  0027A6  505C               	movf	btemp+10,w,c
  4893  0027A8  5EDF               	subwf	indf2,f,c
  4894                           
  4895                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4896  0027AA  0EF9               	movlw	249
  4897  0027AC  24E1               	addwf	fsr1l,w,c
  4898  0027AE  6ED9               	movwf	fsr2l,c
  4899  0027B0  0EFF               	movlw	255
  4900  0027B2  20E2               	addwfc	fsr1h,w,c
  4901  0027B4  6EDA               	movwf	fsr2h,c
  4902  0027B6  50DF               	movf	indf2,w,c
  4903  0027B8  6E5D               	movwf	btemp+11,c
  4904                           
  4905                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4906  0027BA  0EFD               	movlw	-3
  4907  0027BC  C05D  FFE3         	movff	btemp+11,plusw1
  4908                           
  4909                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4910  0027C0  0EF6               	movlw	246
  4911  0027C2  24E1               	addwf	fsr1l,w,c
  4912  0027C4  6ED9               	movwf	fsr2l,c
  4913  0027C6  0EFF               	movlw	255
  4914  0027C8  20E2               	addwfc	fsr1h,w,c
  4915  0027CA  6EDA               	movwf	fsr2h,c
  4916  0027CC  50DF               	movf	indf2,w,c
  4917  0027CE  6E5D               	movwf	btemp+11,c
  4918                           
  4919                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4920  0027D0  50E1               	movf	fsr1l,w,c
  4921  0027D2  0FFD               	addlw	-3
  4922  0027D4  6ED9               	movwf	fsr2l,c
  4923  0027D6  50E2               	movf	fsr1h,w,c
  4924  0027D8  6EDA               	movwf	fsr2h,c
  4925  0027DA  0EFF               	movlw	255
  4926  0027DC  22DA               	addwfc	fsr2h,f,c
  4927  0027DE  505D               	movf	btemp+11,w,c
  4928  0027E0  1ADF               	xorwf	indf2,f,c
  4929                           
  4930                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4931  0027E2  0EFD               	movlw	-3
  4932  0027E4  CFE3 F052          	movff	plusw1,btemp
  4933  0027E8  0E80               	movlw	128
  4934  0027EA  1652               	andwf	btemp,f,c
  4935  0027EC  0EFD               	movlw	-3
  4936  0027EE  C052  FFE3         	movff	btemp,plusw1
  4937                           
  4938                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4939  0027F2  0EF8               	movlw	-8
  4940  0027F4  8EE3               	bsf	plusw1,7,c
  4941                           
  4942                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4943  0027F6  0EF9               	movlw	-7
  4944  0027F8  6AE3               	clrf	plusw1,c
  4945                           
  4946                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4947  0027FA  0EF5               	movlw	-11
  4948  0027FC  8EE3               	bsf	plusw1,7,c
  4949                           
  4950                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4951  0027FE  0EF6               	movlw	-10
  4952  002800  6AE3               	clrf	plusw1,c
  4953                           
  4954                           ;stkvar	___ftdiv@cntr @ sp[(-6)+5]
  4955  002802  0EFF               	movlw	-1
  4956  002804  6AE3               	clrf	plusw1,c
  4957  002806  86E3               	bsf	plusw1,3,c
  4958  002808  88E3               	bsf	plusw1,4,c	;indir
  4959  00280A                     l3040:
  4960                           
  4961                           ;stkvar	___ftdiv@f3 @ sp[(-6)+0]
  4962  00280A  90D8               	bcf	status,0,c
  4963  00280C  0EFA               	movlw	-6
  4964  00280E  36E3               	rlcf	plusw1,f,c
  4965  002810  0EFB               	movlw	-5
  4966  002812  36E3               	rlcf	plusw1,f,c
  4967  002814  0EFC               	movlw	-4
  4968  002816  36E3               	rlcf	plusw1,f,c
  4969                           
  4970                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4971                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4972  002818  50E1               	movf	fsr1l,w,c
  4973  00281A  0FF7               	addlw	-9
  4974  00281C  6ED9               	movwf	fsr2l,c
  4975  00281E  50E2               	movf	fsr1h,w,c
  4976  002820  6EDA               	movwf	fsr2h,c
  4977  002822  0EFF               	movlw	255
  4978  002824  22DA               	addwfc	fsr2h,f,c
  4979  002826  0EF4               	movlw	-12
  4980  002828  50E3               	movf	plusw1,w,c
  4981  00282A  5CDE               	subwf	postinc2,w,c
  4982  00282C  0EF5               	movlw	-11
  4983  00282E  50E3               	movf	plusw1,w,c
  4984  002830  58DE               	subwfb	postinc2,w,c
  4985  002832  0EF6               	movlw	-10
  4986  002834  50E3               	movf	plusw1,w,c
  4987  002836  58DE               	subwfb	postinc2,w,c
  4988  002838  A0D8               	btfss	status,0,c
  4989  00283A  D018               	goto	l3048
  4990                           
  4991                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4992  00283C  0EF4               	movlw	-12
  4993  00283E  CFE3 F05B          	movff	plusw1,btemp+9
  4994  002842  0EF5               	movlw	-11
  4995  002844  CFE3 F05C          	movff	plusw1,btemp+10
  4996  002848  0EF6               	movlw	-10
  4997  00284A  CFE3 F05D          	movff	plusw1,btemp+11
  4998                           
  4999                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  5000  00284E  50E1               	movf	fsr1l,w,c
  5001  002850  0FF7               	addlw	-9
  5002  002852  6ED9               	movwf	fsr2l,c
  5003  002854  50E2               	movf	fsr1h,w,c
  5004  002856  6EDA               	movwf	fsr2h,c
  5005  002858  0EFF               	movlw	255
  5006  00285A  22DA               	addwfc	fsr2h,f,c
  5007  00285C  505B               	movf	btemp+9,w,c
  5008  00285E  5EDE               	subwf	postinc2,f,c
  5009  002860  505C               	movf	btemp+10,w,c
  5010  002862  5ADE               	subwfb	postinc2,f,c
  5011  002864  505D               	movf	btemp+11,w,c
  5012  002866  5ADE               	subwfb	postinc2,f,c
  5013                           
  5014                           ;stkvar	___ftdiv@f3 @ sp[(-6)+0]
  5015  002868  0EFA               	movlw	-6
  5016  00286A  80E3               	bsf	plusw1,0,c
  5017  00286C                     l3048:
  5018                           
  5019                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  5020  00286C  90D8               	bcf	status,0,c
  5021  00286E  0EF7               	movlw	-9
  5022  002870  36E3               	rlcf	plusw1,f,c
  5023  002872  0EF8               	movlw	-8
  5024  002874  36E3               	rlcf	plusw1,f,c
  5025  002876  0EF9               	movlw	-7
  5026  002878  36E3               	rlcf	plusw1,f,c
  5027                           
  5028                           ;stkvar	___ftdiv@cntr @ sp[(-6)+5]
  5029  00287A  0EFF               	movlw	-1
  5030  00287C  50E3               	movf	plusw1,w,c
  5031  00287E  6E52               	movwf	btemp,c
  5032  002880  0E01               	movlw	1
  5033  002882  5E52               	subwf	btemp,f,c
  5034  002884  0EFF               	movlw	-1
  5035  002886  C052  FFE3         	movff	btemp,plusw1
  5036  00288A  A4D8               	btfss	status,2,c
  5037  00288C  D7BE               	goto	l3040
  5038                           
  5039                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  5040  00288E  0EFD               	movlw	-3
  5041  002890  50E3               	movf	plusw1,w,c
  5042  002892  6EE6               	movwf	postinc1,c
  5043                           
  5044                           ;stkvar	___ftdiv@exp @ sp[(-7)+4]
  5045  002894  0EFD               	movlw	-3
  5046  002896  50E3               	movf	plusw1,w,c
  5047  002898  6EE6               	movwf	postinc1,c
  5048                           
  5049                           ;stkvar	___ftdiv@f3 @ sp[(-8)+0]
  5050  00289A  0EF8               	movlw	-8
  5051  00289C  CFE3 FFE6          	movff	plusw1,postinc1
  5052  0028A0  CFE3 FFE6          	movff	plusw1,postinc1
  5053  0028A4  CFE3 FFE6          	movff	plusw1,postinc1
  5054  0028A8  ECC1  F01C         	call	___ftpack	;wreg free
  5055  0028AC                     l1044:
  5056                           
  5057                           ; ___ftdiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  5058  0028AC  0EF4               	movlw	244
  5059  0028AE  26E1               	addwf	fsr1l,f,c
  5060  0028B0  0EFF               	movlw	255
  5061  0028B2  22E2               	addwfc	fsr1h,f,c
  5062  0028B4  0012               	return		;funcret
  5063  0028B6                     __end_of___ftdiv:
  5064                           	opt stack 0
  5065                           tblptru	equ	0xFF8
  5066                           tblptrh	equ	0xFF7
  5067                           tblptrl	equ	0xFF6
  5068                           tablat	equ	0xFF5
  5069                           intcon	equ	0xFF2
  5070                           intcon2	equ	0xFF1
  5071                           indf0	equ	0xFEF
  5072                           postinc0	equ	0xFEE
  5073                           fsr0h	equ	0xFEA
  5074                           fsr0l	equ	0xFE9
  5075                           wreg	equ	0xFE8
  5076                           postinc1	equ	0xFE6
  5077                           postdec1	equ	0xFE5
  5078                           plusw1	equ	0xFE3
  5079                           fsr1h	equ	0xFE2
  5080                           fsr1l	equ	0xFE1
  5081                           indf2	equ	0xFDF
  5082                           postinc2	equ	0xFDE
  5083                           postdec2	equ	0xFDD
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8
  5087                           
  5088 ;; *************** function _Initial *****************
  5089 ;; Defined at:
  5090 ;;		line 1279 in file "lab7.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5104 ;;      Params:         0       0       0       0       0       0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0
  5107 ;;      Totals:         0       0       0       0       0       0       0
  5108 ;;Total ram usage:        0 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:   10
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text7
  5119  004622                     __ptext7:
  5120                           	opt stack 0
  5121  004622                     _Initial:
  5122                           	opt stack 20
  5123                           
  5124                           ;lab7.c: 1281: ADCON1 = 0b10001110;
  5125                           
  5126                           ;incstack = 0
  5127  004622  0E8E               	movlw	142
  5128  004624  6EC1               	movwf	4033,c	;volatile
  5129                           
  5130                           ;lab7.c: 1282: TRISA = 0b11100001;
  5131  004626  0EE1               	movlw	225
  5132  004628  6E92               	movwf	3986,c	;volatile
  5133                           
  5134                           ;lab7.c: 1283: TRISB = 0b11000000;
  5135  00462A  0EC0               	movlw	192
  5136  00462C  6E93               	movwf	3987,c	;volatile
  5137                           
  5138                           ;lab7.c: 1284: TRISC = 0b11010000;
  5139  00462E  0ED0               	movlw	208
  5140  004630  6E94               	movwf	3988,c	;volatile
  5141                           
  5142                           ;lab7.c: 1285: TRISD = 0b11111111;
  5143  004632  6895               	setf	3989,c	;volatile
  5144                           
  5145                           ;lab7.c: 1286: TRISE = 0b00000100;
  5146  004634  0E04               	movlw	4
  5147  004636  6E96               	movwf	3990,c	;volatile
  5148                           
  5149                           ;lab7.c: 1287: PORTA = 0b00010000;
  5150  004638  0E10               	movlw	16
  5151  00463A  6E80               	movwf	3968,c	;volatile
  5152                           
  5153                           ;lab7.c: 1288: PORTBbits.RB4 = 0;
  5154  00463C  9881               	bcf	3969,4,c	;volatile
  5155  00463E  0012               	return		;funcret
  5156  004640                     __end_of_Initial:
  5157                           	opt stack 0
  5158                           tblptru	equ	0xFF8
  5159                           tblptrh	equ	0xFF7
  5160                           tblptrl	equ	0xFF6
  5161                           tablat	equ	0xFF5
  5162                           intcon	equ	0xFF2
  5163                           intcon2	equ	0xFF1
  5164                           indf0	equ	0xFEF
  5165                           postinc0	equ	0xFEE
  5166                           fsr0h	equ	0xFEA
  5167                           fsr0l	equ	0xFE9
  5168                           wreg	equ	0xFE8
  5169                           postinc1	equ	0xFE6
  5170                           postdec1	equ	0xFE5
  5171                           plusw1	equ	0xFE3
  5172                           fsr1h	equ	0xFE2
  5173                           fsr1l	equ	0xFE1
  5174                           indf2	equ	0xFDF
  5175                           postinc2	equ	0xFDE
  5176                           postdec2	equ	0xFDD
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181 ;; *************** function _keypadOnly *****************
  5182 ;; Defined at:
  5183 ;;		line 1053 in file "lab7.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1  [STACK] void 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5197 ;;      Params:         0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:   10
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_My_ISR_High
  5208 ;;		_My_ISR_Low
  5209 ;;		_getSingleInput
  5210 ;;		_mainMenu
  5211 ;;		_passcodeMenu
  5212 ;;		_pirMenu
  5213 ;;		_temperatureMenu
  5214 ;;		_getTempThreshold
  5215 ;;		_getTempPassword
  5216 ;;		_getInput
  5217 ;; This function uses a reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text8
  5221  003ECC                     __ptext8:
  5222                           	opt stack 0
  5223  003ECC                     _keypadOnly:
  5224                           	opt stack 1
  5225                           
  5226                           ;lab7.c: 1055: TRISD = 0b11110000;
  5227                           
  5228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5229                           ;incstack = 0
  5230  003ECC  0EF0               	movlw	240
  5231  003ECE  6E95               	movwf	3989,c	;volatile
  5232  003ED0                     l489:
  5233                           
  5234                           ;lab7.c: 1058: PORTD = 1;;
  5235  003ED0  0E01               	movlw	1
  5236  003ED2  6E83               	movwf	3971,c	;volatile
  5237                           
  5238                           ;lab7.c: 1059: if(PORTDbits.RD4==1)
  5239  003ED4  A883               	btfss	3971,4,c	;volatile
  5240  003ED6  D002               	goto	l490
  5241                           
  5242                           ;lab7.c: 1060: {
  5243                           ;lab7.c: 1061: keypadValue = '1';
  5244  003ED8  0E31               	movlw	49
  5245  003EDA  D041               	goto	L15
  5246  003EDC                     l490:
  5247                           
  5248                           ;lab7.c: 1064: else if(PORTDbits.RD5==1)
  5249  003EDC  AA83               	btfss	3971,5,c	;volatile
  5250  003EDE  D002               	goto	l493
  5251                           
  5252                           ;lab7.c: 1065: {
  5253                           ;lab7.c: 1066: keypadValue = '2';
  5254  003EE0  0E32               	movlw	50
  5255  003EE2  D03D               	goto	L15
  5256  003EE4                     l493:
  5257                           
  5258                           ;lab7.c: 1069: else if(PORTDbits.RD6==1)
  5259  003EE4  AC83               	btfss	3971,6,c	;volatile
  5260  003EE6  D002               	goto	l495
  5261                           
  5262                           ;lab7.c: 1070: {
  5263                           ;lab7.c: 1071: keypadValue = '3';
  5264  003EE8  0E33               	movlw	51
  5265  003EEA  D039               	goto	L15
  5266  003EEC                     l495:
  5267                           
  5268                           ;lab7.c: 1074: else if(PORTDbits.RD7==1)
  5269  003EEC  AE83               	btfss	3971,7,c	;volatile
  5270  003EEE  D002               	goto	l2140
  5271                           
  5272                           ;lab7.c: 1075: {
  5273                           ;lab7.c: 1076: keypadValue = 'A';
  5274  003EF0  0E41               	movlw	65
  5275  003EF2  D035               	goto	L15
  5276  003EF4                     l2140:
  5277                           
  5278                           ;lab7.c: 1078: }
  5279                           ;lab7.c: 1079: PORTD = 2;
  5280  003EF4  0E02               	movlw	2
  5281  003EF6  6E83               	movwf	3971,c	;volatile
  5282                           
  5283                           ;lab7.c: 1080: if(PORTDbits.RD4==1)
  5284  003EF8  A883               	btfss	3971,4,c	;volatile
  5285  003EFA  D002               	goto	l498
  5286                           
  5287                           ;lab7.c: 1081: {
  5288                           ;lab7.c: 1082: keypadValue = '4';
  5289  003EFC  0E34               	movlw	52
  5290  003EFE  D02F               	goto	L15
  5291  003F00                     l498:
  5292                           
  5293                           ;lab7.c: 1085: else if(PORTDbits.RD5==1)
  5294  003F00  AA83               	btfss	3971,5,c	;volatile
  5295  003F02  D002               	goto	l500
  5296                           
  5297                           ;lab7.c: 1086: {
  5298                           ;lab7.c: 1087: keypadValue = '5';
  5299  003F04  0E35               	movlw	53
  5300  003F06  D02B               	goto	L15
  5301  003F08                     l500:
  5302                           
  5303                           ;lab7.c: 1090: else if(PORTDbits.RD6==1)
  5304  003F08  AC83               	btfss	3971,6,c	;volatile
  5305  003F0A  D002               	goto	l502
  5306                           
  5307                           ;lab7.c: 1091: {
  5308                           ;lab7.c: 1092: keypadValue = '6';
  5309  003F0C  0E36               	movlw	54
  5310  003F0E  D027               	goto	L15
  5311  003F10                     l502:
  5312                           
  5313                           ;lab7.c: 1095: else if(PORTDbits.RD7==1)
  5314  003F10  AE83               	btfss	3971,7,c	;volatile
  5315  003F12  D002               	goto	l2158
  5316                           
  5317                           ;lab7.c: 1096: {
  5318                           ;lab7.c: 1097: keypadValue = 'B';
  5319  003F14  0E42               	movlw	66
  5320  003F16  D023               	goto	L15
  5321  003F18                     l2158:
  5322                           
  5323                           ;lab7.c: 1099: }
  5324                           ;lab7.c: 1100: PORTD = 4;
  5325  003F18  0E04               	movlw	4
  5326  003F1A  6E83               	movwf	3971,c	;volatile
  5327                           
  5328                           ;lab7.c: 1101: if(PORTDbits.RD4==1)
  5329  003F1C  A883               	btfss	3971,4,c	;volatile
  5330  003F1E  D002               	goto	l505
  5331                           
  5332                           ;lab7.c: 1102: {
  5333                           ;lab7.c: 1103: keypadValue = '7';
  5334  003F20  0E37               	movlw	55
  5335  003F22  D01D               	goto	L15
  5336  003F24                     l505:
  5337                           
  5338                           ;lab7.c: 1106: else if(PORTDbits.RD5==1)
  5339  003F24  AA83               	btfss	3971,5,c	;volatile
  5340  003F26  D002               	goto	l507
  5341                           
  5342                           ;lab7.c: 1107: {
  5343                           ;lab7.c: 1108: keypadValue = '8';
  5344  003F28  0E38               	movlw	56
  5345  003F2A  D019               	goto	L15
  5346  003F2C                     l507:
  5347                           
  5348                           ;lab7.c: 1111: else if(PORTDbits.RD6==1)
  5349  003F2C  AC83               	btfss	3971,6,c	;volatile
  5350  003F2E  D002               	goto	l509
  5351                           
  5352                           ;lab7.c: 1112: {
  5353                           ;lab7.c: 1113: keypadValue = '9';
  5354  003F30  0E39               	movlw	57
  5355  003F32  D015               	goto	L15
  5356  003F34                     l509:
  5357                           
  5358                           ;lab7.c: 1116: else if(PORTDbits.RD7==1)
  5359  003F34  AE83               	btfss	3971,7,c	;volatile
  5360  003F36  D002               	goto	l2176
  5361                           
  5362                           ;lab7.c: 1117: {
  5363                           ;lab7.c: 1118: keypadValue = 'C';
  5364  003F38  0E43               	movlw	67
  5365  003F3A  D011               	goto	L15
  5366  003F3C                     l2176:
  5367                           
  5368                           ;lab7.c: 1120: }
  5369                           ;lab7.c: 1121: PORTD = 8;
  5370  003F3C  0E08               	movlw	8
  5371  003F3E  6E83               	movwf	3971,c	;volatile
  5372                           
  5373                           ;lab7.c: 1122: if(PORTDbits.RD4==1)
  5374  003F40  A883               	btfss	3971,4,c	;volatile
  5375  003F42  D002               	goto	l512
  5376                           
  5377                           ;lab7.c: 1123: {
  5378                           ;lab7.c: 1124: keypadValue = '*';
  5379  003F44  0E2A               	movlw	42
  5380  003F46  D00B               	goto	L15
  5381  003F48                     l512:
  5382                           
  5383                           ;lab7.c: 1127: else if(PORTDbits.RD5==1)
  5384  003F48  AA83               	btfss	3971,5,c	;volatile
  5385  003F4A  D002               	goto	l514
  5386                           
  5387                           ;lab7.c: 1128: {
  5388                           ;lab7.c: 1129: keypadValue = '0';
  5389  003F4C  0E30               	movlw	48
  5390  003F4E  D007               	goto	L15
  5391  003F50                     l514:
  5392                           
  5393                           ;lab7.c: 1132: else if(PORTDbits.RD6==1)
  5394  003F50  AC83               	btfss	3971,6,c	;volatile
  5395  003F52  D002               	goto	l516
  5396                           
  5397                           ;lab7.c: 1133: {
  5398                           ;lab7.c: 1134: keypadValue = '#';
  5399  003F54  0E23               	movlw	35
  5400  003F56  D003               	goto	L15
  5401  003F58                     l516:
  5402                           
  5403                           ;lab7.c: 1137: else if(PORTDbits.RD7==1)
  5404  003F58  AE83               	btfss	3971,7,c	;volatile
  5405  003F5A  D7BA               	goto	l489
  5406                           
  5407                           ;lab7.c: 1138: {
  5408                           ;lab7.c: 1139: keypadValue = 'D';
  5409  003F5C  0E44               	movlw	68
  5410  003F5E                     L15:
  5411  003F5E  6E1C               	movwf	_keypadValue,c
  5412                           
  5413                           ;lab7.c: 1141: }
  5414                           ;lab7.c: 1142: }
  5415                           ;lab7.c: 1143: PORTBbits.RB4 =PORTBbits.RB4^1;
  5416                           
  5417                           ;lab7.c: 1140: break;
  5418  003F60  B881               	btfsc	3969,4,c	;volatile
  5419  003F62  D002               	goto	u1260
  5420  003F64  8881               	bsf	3969,4,c	;volatile
  5421  003F66  0012               	return	
  5422  003F68                     u1260:
  5423  003F68  9881               	bcf	3969,4,c	;volatile
  5424                           
  5425                           ; _keypadOnly: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5426  003F6A  0012               	return		;funcret
  5427  003F6C                     __end_of_keypadOnly:
  5428                           	opt stack 0
  5429                           tblptru	equ	0xFF8
  5430                           tblptrh	equ	0xFF7
  5431                           tblptrl	equ	0xFF6
  5432                           tablat	equ	0xFF5
  5433                           intcon	equ	0xFF2
  5434                           intcon2	equ	0xFF1
  5435                           indf0	equ	0xFEF
  5436                           postinc0	equ	0xFEE
  5437                           fsr0h	equ	0xFEA
  5438                           fsr0l	equ	0xFE9
  5439                           wreg	equ	0xFE8
  5440                           postinc1	equ	0xFE6
  5441                           postdec1	equ	0xFE5
  5442                           plusw1	equ	0xFE3
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           indf2	equ	0xFDF
  5446                           postinc2	equ	0xFDE
  5447                           postdec2	equ	0xFDD
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8
  5451                           
  5452 ;; *************** function _reception *****************
  5453 ;; Defined at:
  5454 ;;		line 1146 in file "lab7.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  val             1  [STACK] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1  [STACK] unsigned char 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr1l, fsr1h, btemp
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5468 ;;      Params:         0       0       0       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0
  5471 ;;      Totals:         0       0       0       0       0       0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:   10
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_My_ISR_High
  5479 ;;		_My_ISR_Low
  5480 ;;		_getSingleInput
  5481 ;;		_mainMenu
  5482 ;;		_passcodeMenu
  5483 ;;		_pirMenu
  5484 ;;		_temperatureMenu
  5485 ;;		_getTempThreshold
  5486 ;;		_getTempPassword
  5487 ;;		_getInput
  5488 ;; This function uses a reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text9
  5492  004656                     __ptext9:
  5493                           	opt stack 0
  5494  004656                     _reception:
  5495                           	opt stack 0
  5496                           
  5497                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5498  004656  52E6               	movf	postinc1,f,c
  5499  004658                     l523:
  5500  004658  AA9E               	btfss	3998,5,c	;volatile
  5501  00465A  D7FE               	goto	l523
  5502                           
  5503                           ;lab7.c: 1148: char val = RCREG;
  5504                           ;stkvar	reception@val @ sp[(-1)+0]
  5505  00465C  0EFF               	movlw	-1
  5506  00465E  CFAE FFE3          	movff	4014,plusw1	;volatile
  5507                           
  5508                           ;lab7.c: 1149: return val;
  5509                           ;stkvar	reception@val @ sp[(-1)+0]
  5510  004662  0EFF               	movlw	-1
  5511  004664  CFE3 F052          	movff	plusw1,btemp
  5512                           
  5513                           ; _reception: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5514  004668  52E5               	movf	postdec1,f,c
  5515  00466A  0012               	return		;funcret
  5516  00466C                     __end_of_reception:
  5517                           	opt stack 0
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           intcon	equ	0xFF2
  5523                           intcon2	equ	0xFF1
  5524                           indf0	equ	0xFEF
  5525                           postinc0	equ	0xFEE
  5526                           fsr0h	equ	0xFEA
  5527                           fsr0l	equ	0xFE9
  5528                           wreg	equ	0xFE8
  5529                           postinc1	equ	0xFE6
  5530                           postdec1	equ	0xFE5
  5531                           plusw1	equ	0xFE3
  5532                           fsr1h	equ	0xFE2
  5533                           fsr1l	equ	0xFE1
  5534                           indf2	equ	0xFDF
  5535                           postinc2	equ	0xFDE
  5536                           postdec2	equ	0xFDD
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _write_EEPROM *****************
  5542 ;; Defined at:
  5543 ;;		line 622 in file "lab7.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  add             2  [STACK] int 
  5546 ;;  c               1  [STACK] unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1  [STACK] void 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr1l, fsr1h, status,2
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5558 ;;      Params:         0       0       0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:   10
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_My_ISR_High
  5569 ;;		_My_ISR_Low
  5570 ;;		_mainMenu
  5571 ;;		_pirMenu
  5572 ;;		_temperatureMenu
  5573 ;;		_getTempThreshold
  5574 ;; This function uses a reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text10
  5578  0045FA                     __ptext10:
  5579                           	opt stack 0
  5580  0045FA                     _write_EEPROM:
  5581                           	opt stack 3
  5582                           
  5583                           ;lab7.c: 624: EEADR = add;
  5584                           ;stkvar	write_EEPROM@add @ sp[(0)+-2]
  5585                           
  5586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
  5587                           ;incstack = 0
  5588  0045FA  0EFE               	movlw	-2
  5589  0045FC  CFE3 FFA9          	movff	plusw1,4009	;volatile
  5590                           
  5591                           ;lab7.c: 625: EEDATA = c;
  5592                           ;stkvar	write_EEPROM@c @ sp[(0)+-3]
  5593  004600  0EFD               	movlw	-3
  5594  004602  CFE3 FFA8          	movff	plusw1,4008	;volatile
  5595                           
  5596                           ;lab7.c: 626: EEPGD = 0;
  5597  004606  9EA6               	bcf	4006,7,c	;volatile
  5598                           
  5599                           ;lab7.c: 627: CFGS = 0;
  5600  004608  9CA6               	bcf	4006,6,c	;volatile
  5601                           
  5602                           ;lab7.c: 628: WREN = 1;
  5603  00460A  84A6               	bsf	4006,2,c	;volatile
  5604                           
  5605                           ;lab7.c: 629: EECON2 = 0x55;
  5606  00460C  0E55               	movlw	85
  5607  00460E  6EA7               	movwf	4007,c	;volatile
  5608                           
  5609                           ;lab7.c: 630: EECON2 = 0xAA;
  5610  004610  0EAA               	movlw	170
  5611  004612  6EA7               	movwf	4007,c	;volatile
  5612                           
  5613                           ;lab7.c: 631: EECON1bits.WR = 1;
  5614  004614  82A6               	bsf	4006,1,c	;volatile
  5615  004616                     l347:
  5616  004616  B2A6               	btfsc	4006,1,c	;volatile
  5617  004618  D7FE               	goto	l347
  5618                           
  5619                           ; _write_EEPROM: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, 
      +                          argsize = 3, vargsize = 0
  5620  00461A  52E5               	movf	postdec1,f,c
  5621  00461C  52E5               	movf	postdec1,f,c
  5622  00461E  52E5               	movf	postdec1,f,c
  5623  004620  0012               	return		;funcret
  5624  004622                     __end_of_write_EEPROM:
  5625                           	opt stack 0
  5626                           tblptru	equ	0xFF8
  5627                           tblptrh	equ	0xFF7
  5628                           tblptrl	equ	0xFF6
  5629                           tablat	equ	0xFF5
  5630                           intcon	equ	0xFF2
  5631                           intcon2	equ	0xFF1
  5632                           indf0	equ	0xFEF
  5633                           postinc0	equ	0xFEE
  5634                           fsr0h	equ	0xFEA
  5635                           fsr0l	equ	0xFE9
  5636                           wreg	equ	0xFE8
  5637                           postinc1	equ	0xFE6
  5638                           postdec1	equ	0xFE5
  5639                           plusw1	equ	0xFE3
  5640                           fsr1h	equ	0xFE2
  5641                           fsr1l	equ	0xFE1
  5642                           indf2	equ	0xFDF
  5643                           postinc2	equ	0xFDE
  5644                           postdec2	equ	0xFDD
  5645                           fsr2h	equ	0xFDA
  5646                           fsr2l	equ	0xFD9
  5647                           status	equ	0xFD8
  5648                           
  5649 ;; *************** function _getTempPassword *****************
  5650 ;; Defined at:
  5651 ;;		line 1152 in file "lab7.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;		None
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  inputMsg        4  [STACK] unsigned char [4]
  5656 ;;  i               2  [STACK] int 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  2  [STACK] PTR unsigned char 
  5659 ;; Registers used:
  5660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5666 ;;      Params:         0       0       0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0
  5669 ;;      Totals:         0       0       0       0       0       0       0
  5670 ;;Total ram usage:        0 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:   11
  5673 ;; This function calls:
  5674 ;;		_delay
  5675 ;;		_keypadOnly
  5676 ;;		_printChar
  5677 ;;		_reception
  5678 ;; This function is called by:
  5679 ;;		_resetPIR
  5680 ;;		_My_ISR_Low
  5681 ;;		_login
  5682 ;;		_passcodeMenu
  5683 ;; This function uses a reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text11
  5687  00371C                     __ptext11:
  5688                           	opt stack 0
  5689  00371C                     _getTempPassword:
  5690                           	opt stack 0
  5691                           
  5692                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5693  00371C  0E06               	movlw	6
  5694  00371E  26E1               	addwf	fsr1l,f,c
  5695  003720  0E00               	movlw	0
  5696  003722  22E2               	addwfc	fsr1h,f,c
  5697                           
  5698                           ;lab7.c: 1154: char inputMsg[4];
  5699                           ;lab7.c: 1155: int i;
  5700                           ;lab7.c: 1158: if(status==1 && PORTBbits.RB4 == 1)
  5701                           
  5702                           ;incstack = 0
  5703  003724  0410               	decf	_status,w,c
  5704  003726  1011               	iorwf	_status+1,w,c
  5705  003728  B4D8               	btfsc	status,2,c
  5706  00372A  A881               	btfss	3969,4,c	;volatile
  5707  00372C  D046               	goto	l2642
  5708                           
  5709                           ;lab7.c: 1159: {
  5710                           ;lab7.c: 1160: for(i=0; i<4; i++)
  5711                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5712  00372E  0EFE               	movlw	-2
  5713  003730  6AE3               	clrf	plusw1,c
  5714  003732  0EFF               	movlw	-1
  5715  003734  6AE3               	clrf	plusw1,c
  5716  003736                     l2626:
  5717                           
  5718                           ;lab7.c: 1161: {
  5719                           ;lab7.c: 1162: keypadOnly();
  5720  003736  EC66  F01F         	call	_keypadOnly	;wreg free
  5721                           
  5722                           ;lab7.c: 1163: inputMsg[i] = keypadValue;
  5723                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5724  00373A  0EFE               	movlw	-2
  5725  00373C  CFE3 F053          	movff	plusw1,btemp+1
  5726  003740  0EFF               	movlw	-1
  5727  003742  CFE3 F054          	movff	plusw1,btemp+2
  5728                           
  5729                           ;stkvar	getTempPassword@inputMsg @ sp[(-6)+0]
  5730  003746  0EFA               	movlw	250
  5731  003748  24E1               	addwf	fsr1l,w,c
  5732  00374A  6E5C               	movwf	btemp+10,c
  5733  00374C  0EFF               	movlw	255
  5734  00374E  20E2               	addwfc	fsr1h,w,c
  5735  003750  6E5D               	movwf	btemp+11,c
  5736  003752  5053               	movf	btemp+1,w,c
  5737  003754  245C               	addwf	btemp+10,w,c
  5738  003756  6ED9               	movwf	fsr2l,c
  5739  003758  5054               	movf	btemp+2,w,c
  5740  00375A  205D               	addwfc	btemp+11,w,c
  5741  00375C  6EDA               	movwf	fsr2h,c
  5742  00375E  C01C  FFDF         	movff	_keypadValue,indf2
  5743                           
  5744                           ;lab7.c: 1164: delay();
  5745  003762  ECE8  F022         	call	_delay	;wreg free
  5746                           
  5747                           ;lab7.c: 1165: printChar("*");
  5748  003766  0E0D               	movlw	low (STR_61+61)
  5749  003768  6EE6               	movwf	postinc1,c
  5750  00376A  0E75               	movlw	high (STR_61+61)
  5751  00376C  6EE6               	movwf	postinc1,c
  5752  00376E  EC0B  F021         	call	_printChar	;wreg free
  5753                           
  5754                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5755  003772  0EFE               	movlw	-2
  5756  003774  50E3               	movf	plusw1,w,c
  5757  003776  0F01               	addlw	1
  5758  003778  6E52               	movwf	btemp,c
  5759  00377A  0EFE               	movlw	-2
  5760  00377C  C052  FFE3         	movff	btemp,plusw1
  5761  003780  6A52               	clrf	btemp,c
  5762  003782  0EFF               	movlw	-1
  5763  003784  50E3               	movf	plusw1,w,c
  5764  003786  2052               	addwfc	btemp,w,c
  5765  003788  6E52               	movwf	btemp,c
  5766  00378A  0EFF               	movlw	-1
  5767  00378C  C052  FFE3         	movff	btemp,plusw1
  5768                           
  5769                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5770  003790  0EFF               	movlw	-1
  5771  003792  BEE3               	btfsc	plusw1,7,c
  5772  003794  D7D0               	goto	l2626
  5773  003796  0EFF               	movlw	-1
  5774  003798  50E3               	movf	plusw1,w,c
  5775  00379A  E10A               	bnz	l2640
  5776  00379C  0EFE               	movlw	-2
  5777  00379E  CFE3 F052          	movff	plusw1,btemp
  5778  0037A2  0E04               	movlw	4
  5779  0037A4  5E52               	subwf	btemp,f,c
  5780  0037A6  B0D8               	btfsc	status,0,c
  5781  0037A8  D003               	goto	l2640
  5782  0037AA  D7C5               	goto	l2626
  5783  0037AC                     l2638:
  5784                           
  5785                           ;lab7.c: 1168: keypadOnly();
  5786  0037AC  EC66  F01F         	call	_keypadOnly	;wreg free
  5787  0037B0                     l2640:
  5788  0037B0  0E44               	movlw	68
  5789  0037B2  181C               	xorwf	_keypadValue,w,c
  5790  0037B4  B4D8               	btfsc	status,2,c
  5791  0037B6  D041               	goto	l2658
  5792  0037B8  D7F9               	goto	l2638
  5793  0037BA                     l2642:
  5794                           
  5795                           ;lab7.c: 1171: else
  5796                           ;lab7.c: 1172: {
  5797                           ;lab7.c: 1173: for(i=0; i<4; i++)
  5798                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5799  0037BA  0EFE               	movlw	-2
  5800  0037BC  6AE3               	clrf	plusw1,c
  5801  0037BE  0EFF               	movlw	-1
  5802  0037C0  6AE3               	clrf	plusw1,c
  5803  0037C2                     l2648:
  5804                           
  5805                           ;lab7.c: 1174: {
  5806                           ;lab7.c: 1175: inputMsg[i] = reception();
  5807                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5808  0037C2  0EFE               	movlw	-2
  5809  0037C4  CFE3 F053          	movff	plusw1,btemp+1
  5810  0037C8  0EFF               	movlw	-1
  5811  0037CA  CFE3 F054          	movff	plusw1,btemp+2
  5812                           
  5813                           ;stkvar	getTempPassword@inputMsg @ sp[(-6)+0]
  5814  0037CE  0EFA               	movlw	250
  5815  0037D0  24E1               	addwf	fsr1l,w,c
  5816  0037D2  6E5C               	movwf	btemp+10,c
  5817  0037D4  0EFF               	movlw	255
  5818  0037D6  20E2               	addwfc	fsr1h,w,c
  5819  0037D8  6E5D               	movwf	btemp+11,c
  5820  0037DA  5053               	movf	btemp+1,w,c
  5821  0037DC  245C               	addwf	btemp+10,w,c
  5822  0037DE  6ED9               	movwf	fsr2l,c
  5823  0037E0  5054               	movf	btemp+2,w,c
  5824  0037E2  205D               	addwfc	btemp+11,w,c
  5825  0037E4  6EDA               	movwf	fsr2h,c
  5826  0037E6  EC2B  F023         	call	_reception	;wreg free
  5827  0037EA  5052               	movf	btemp,w,c
  5828  0037EC  6EDF               	movwf	indf2,c
  5829                           
  5830                           ;lab7.c: 1176: printChar("*");
  5831  0037EE  0E0D               	movlw	low (STR_61+61)
  5832  0037F0  6EE6               	movwf	postinc1,c
  5833  0037F2  0E75               	movlw	high (STR_61+61)
  5834  0037F4  6EE6               	movwf	postinc1,c
  5835  0037F6  EC0B  F021         	call	_printChar	;wreg free
  5836                           
  5837                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5838  0037FA  0EFE               	movlw	-2
  5839  0037FC  50E3               	movf	plusw1,w,c
  5840  0037FE  0F01               	addlw	1
  5841  003800  6E52               	movwf	btemp,c
  5842  003802  0EFE               	movlw	-2
  5843  003804  C052  FFE3         	movff	btemp,plusw1
  5844  003808  6A52               	clrf	btemp,c
  5845  00380A  0EFF               	movlw	-1
  5846  00380C  50E3               	movf	plusw1,w,c
  5847  00380E  2052               	addwfc	btemp,w,c
  5848  003810  6E52               	movwf	btemp,c
  5849  003812  0EFF               	movlw	-1
  5850  003814  C052  FFE3         	movff	btemp,plusw1
  5851                           
  5852                           ;stkvar	getTempPassword@i @ sp[(-6)+4]
  5853  003818  0EFF               	movlw	-1
  5854  00381A  BEE3               	btfsc	plusw1,7,c
  5855  00381C  D7D2               	goto	l2648
  5856  00381E  0EFF               	movlw	-1
  5857  003820  50E3               	movf	plusw1,w,c
  5858  003822  E107               	bnz	u2010
  5859  003824  0EFE               	movlw	-2
  5860  003826  CFE3 F052          	movff	plusw1,btemp
  5861  00382A  0E04               	movlw	4
  5862  00382C  5E52               	subwf	btemp,f,c
  5863  00382E  A0D8               	btfss	status,0,c
  5864  003830  D7C8               	goto	l2648
  5865  003832                     u2010:
  5866  003832                     l2656:
  5867  003832  0E0D               	movlw	13
  5868  003834  18AE               	xorwf	4014,w,c	;volatile
  5869  003836  A4D8               	btfss	status,2,c
  5870  003838  D7FC               	goto	l2656
  5871  00383A                     l2658:
  5872                           
  5873                           ;lab7.c: 1179: }
  5874                           ;lab7.c: 1180: return inputMsg;
  5875                           ;stkvar	getTempPassword@inputMsg @ sp[(-6)+0]
  5876  00383A  0EFA               	movlw	250
  5877  00383C  24E1               	addwf	fsr1l,w,c
  5878  00383E  6E52               	movwf	btemp,c
  5879  003840  0EFF               	movlw	255
  5880  003842  20E2               	addwfc	fsr1h,w,c
  5881  003844  6E53               	movwf	btemp+1,c
  5882                           
  5883                           ; _getTempPassword: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  5884  003846  0EFA               	movlw	250
  5885  003848  26E1               	addwf	fsr1l,f,c
  5886  00384A  0EFF               	movlw	255
  5887  00384C  22E2               	addwfc	fsr1h,f,c
  5888  00384E  0012               	return		;funcret
  5889  003850                     __end_of_getTempPassword:
  5890                           	opt stack 0
  5891                           tblptru	equ	0xFF8
  5892                           tblptrh	equ	0xFF7
  5893                           tblptrl	equ	0xFF6
  5894                           tablat	equ	0xFF5
  5895                           intcon	equ	0xFF2
  5896                           intcon2	equ	0xFF1
  5897                           indf0	equ	0xFEF
  5898                           postinc0	equ	0xFEE
  5899                           fsr0h	equ	0xFEA
  5900                           fsr0l	equ	0xFE9
  5901                           wreg	equ	0xFE8
  5902                           postinc1	equ	0xFE6
  5903                           postdec1	equ	0xFE5
  5904                           plusw1	equ	0xFE3
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           indf2	equ	0xFDF
  5908                           postinc2	equ	0xFDE
  5909                           postdec2	equ	0xFDD
  5910                           fsr2h	equ	0xFDA
  5911                           fsr2l	equ	0xFD9
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function _checkPassword *****************
  5915 ;; Defined at:
  5916 ;;		line 532 in file "lab7.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;		None
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1  [STACK] void 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, btemp
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5930 ;;      Params:         0       0       0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0
  5933 ;;      Totals:         0       0       0       0       0       0       0
  5934 ;;Total ram usage:        0 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:   10
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_resetPIR
  5941 ;;		_My_ISR_Low
  5942 ;;		_login
  5943 ;;		_passcodeMenu
  5944 ;; This function uses a reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text12
  5948  004308                     __ptext12:
  5949                           	opt stack 0
  5950  004308                     _checkPassword:
  5951                           	opt stack 2
  5952                           
  5953                           ;lab7.c: 534: valid = 0;
  5954                           
  5955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5956                           ;incstack = 0
  5957  004308  6A1A               	clrf	_valid,c
  5958  00430A  6A1B               	clrf	_valid+1,c
  5959                           
  5960                           ;lab7.c: 536: for(i = 0, address = 0xE0; i < 4;address++,i++)
  5961  00430C  6A0A               	clrf	_i,c
  5962  00430E  6A0B               	clrf	_i+1,c
  5963  004310  0E00               	movlw	0
  5964  004312  6E07               	movwf	_address+1,c
  5965  004314  0EE0               	movlw	224
  5966  004316  6E06               	movwf	_address,c
  5967  004318  D016               	goto	l2670
  5968  00431A                     l2666:
  5969                           
  5970                           ;lab7.c: 537: {
  5971                           ;lab7.c: 539: if(password[i] == tempPass[i])
  5972  00431A  500A               	movf	_i,w,c
  5973  00431C  2416               	addwf	_tempPass,w,c
  5974  00431E  6ED9               	movwf	fsr2l,c
  5975  004320  500B               	movf	_i+1,w,c
  5976  004322  2017               	addwfc	_tempPass+1,w,c
  5977  004324  6EDA               	movwf	fsr2h,c
  5978  004326  500A               	movf	_i,w,c
  5979  004328  240C               	addwf	_password,w,c
  5980  00432A  6EE9               	movwf	fsr0l,c
  5981  00432C  500B               	movf	_i+1,w,c
  5982  00432E  200D               	addwfc	_password+1,w,c
  5983  004330  6EEA               	movwf	fsr0h,c
  5984  004332  50DE               	movf	postinc2,w,c
  5985  004334  18EE               	xorwf	postinc0,w,c
  5986  004336  A4D8               	btfss	status,2,c
  5987  004338  D002               	goto	l320
  5988                           
  5989                           ;lab7.c: 540: {
  5990                           ;lab7.c: 541: valid++;
  5991  00433A  4A1A               	infsnz	_valid,f,c
  5992  00433C  2A1B               	incf	_valid+1,f,c
  5993  00433E                     l320:
  5994  00433E  4A06               	infsnz	_address,f,c
  5995  004340  2A07               	incf	_address+1,f,c
  5996  004342  4A0A               	infsnz	_i,f,c
  5997  004344  2A0B               	incf	_i+1,f,c
  5998  004346                     l2670:
  5999  004346  BE0B               	btfsc	_i+1,7,c
  6000  004348  D7E8               	goto	l2666
  6001  00434A  500B               	movf	_i+1,w,c
  6002  00434C  E104               	bnz	u2040
  6003  00434E  0E04               	movlw	4
  6004  004350  5C0A               	subwf	_i,w,c
  6005  004352  A0D8               	btfss	status,0,c
  6006  004354  D7E2               	goto	l2666
  6007  004356                     u2040:
  6008                           
  6009                           ;lab7.c: 542: }
  6010                           ;lab7.c: 543: }
  6011                           ;lab7.c: 544: if(tempState == "ACTIVE" && valid == 0){
  6012  004356  0EE0               	movlw	low (STR_1+2)
  6013  004358  1847               	xorwf	_tempState,w,c
  6014  00435A  E10C               	bnz	l323
  6015  00435C  0E7F               	movlw	high (STR_1+2)
  6016  00435E  1848               	xorwf	_tempState+1,w,c
  6017  004360  A4D8               	btfss	status,2,c
  6018  004362  0012               	return	
  6019  004364  501A               	movf	_valid,w,c
  6020  004366  101B               	iorwf	_valid+1,w,c
  6021  004368  A4D8               	btfss	status,2,c
  6022  00436A  0012               	return	
  6023                           
  6024                           ;lab7.c: 545: valid = 4;
  6025  00436C  0E00               	movlw	0
  6026  00436E  6E1B               	movwf	_valid+1,c
  6027  004370  0E04               	movlw	4
  6028  004372  6E1A               	movwf	_valid,c
  6029  004374                     l323:
  6030                           
  6031                           ; _checkPassword: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6032  004374  0012               	return		;funcret
  6033  004376                     __end_of_checkPassword:
  6034                           	opt stack 0
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           intcon	equ	0xFF2
  6040                           intcon2	equ	0xFF1
  6041                           indf0	equ	0xFEF
  6042                           postinc0	equ	0xFEE
  6043                           fsr0h	equ	0xFEA
  6044                           fsr0l	equ	0xFE9
  6045                           wreg	equ	0xFE8
  6046                           postinc1	equ	0xFE6
  6047                           postdec1	equ	0xFE5
  6048                           plusw1	equ	0xFE3
  6049                           fsr1h	equ	0xFE2
  6050                           fsr1l	equ	0xFE1
  6051                           indf2	equ	0xFDF
  6052                           postinc2	equ	0xFDE
  6053                           postdec2	equ	0xFDD
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           
  6058 ;; *************** function _getTempThreshold *****************
  6059 ;; Defined at:
  6060 ;;		line 1014 in file "lab7.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;		None
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1  [STACK] void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6074 ;;      Params:         0       0       0       0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0
  6077 ;;      Totals:         0       0       0       0       0       0       0
  6078 ;;Total ram usage:        0 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:   12
  6081 ;; This function calls:
  6082 ;;		_atoi
  6083 ;;		_delay
  6084 ;;		_keypadOnly
  6085 ;;		_printChar
  6086 ;;		_reception
  6087 ;;		_write_EEPROM
  6088 ;; This function is called by:
  6089 ;;		_My_ISR_Low
  6090 ;;		_temperatureMenu
  6091 ;; This function uses a reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text13
  6095  003214                     __ptext13:
  6096                           	opt stack 0
  6097  003214                     _getTempThreshold:
  6098                           	opt stack 7
  6099                           
  6100                           ;lab7.c: 1016: printChar("\n\rPlease enter the new Temperature Sensor Alarm Threshold (2
      +                           digits): ");
  6101                           
  6102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  6103                           ;incstack = 0
  6104  003214  0E89               	movlw	low STR_141
  6105  003216  6EE6               	movwf	postinc1,c
  6106  003218  0E73               	movlw	high STR_141
  6107  00321A  6EE6               	movwf	postinc1,c
  6108  00321C  EC0B  F021         	call	_printChar	;wreg free
  6109                           
  6110                           ;lab7.c: 1017: delay();
  6111  003220  ECE8  F022         	call	_delay	;wreg free
  6112                           
  6113                           ;lab7.c: 1018: tempThresholdAddress = 0x10;
  6114  003224  0E00               	movlw	0
  6115  003226  6E4C               	movwf	_tempThresholdAddress+1,c
  6116  003228  0E10               	movlw	16
  6117  00322A  6E4B               	movwf	_tempThresholdAddress,c
  6118                           
  6119                           ;lab7.c: 1019: if(status==1 && PORTBbits.RB4 == 1)
  6120  00322C  0410               	decf	_status,w,c
  6121  00322E  1011               	iorwf	_status+1,w,c
  6122  003230  B4D8               	btfsc	status,2,c
  6123  003232  A881               	btfss	3969,4,c	;volatile
  6124  003234  D03C               	goto	l468
  6125                           
  6126                           ;lab7.c: 1020: {
  6127                           ;lab7.c: 1021: for(i=0; i<2; i++)
  6128  003236  6A0A               	clrf	_i,c
  6129  003238  6A0B               	clrf	_i+1,c
  6130  00323A                     l3212:
  6131  00323A  BE0B               	btfsc	_i+1,7,c
  6132  00323C  D006               	goto	l3216
  6133  00323E  500B               	movf	_i+1,w,c
  6134  003240  E131               	bnz	l3232
  6135  003242  0E02               	movlw	2
  6136  003244  5C0A               	subwf	_i,w,c
  6137  003246  B0D8               	btfsc	status,0,c
  6138  003248  D02D               	goto	l3232
  6139  00324A                     l3216:
  6140                           
  6141                           ;lab7.c: 1022: {
  6142                           ;lab7.c: 1023: keypadOnly();
  6143  00324A  EC66  F01F         	call	_keypadOnly	;wreg free
  6144                           
  6145                           ;lab7.c: 1024: tempThreshold[i] = keypadValue;
  6146  00324E  C00A  F053         	movff	_i,btemp+1
  6147  003252  C00B  F054         	movff	_i+1,btemp+2
  6148  003256  0E24               	movlw	low _tempThreshold
  6149  003258  2453               	addwf	btemp+1,w,c
  6150  00325A  6ED9               	movwf	fsr2l,c
  6151  00325C  0E00               	movlw	high _tempThreshold
  6152  00325E  2054               	addwfc	btemp+2,w,c
  6153  003260  6EDA               	movwf	fsr2h,c
  6154  003262  C01C  FFDF         	movff	_keypadValue,indf2
  6155                           
  6156                           ;lab7.c: 1025: write_EEPROM(tempThresholdAddress, tempThreshold[i]);
  6157  003266  C00A  F053         	movff	_i,btemp+1
  6158  00326A  C00B  F054         	movff	_i+1,btemp+2
  6159  00326E  0E24               	movlw	low _tempThreshold
  6160  003270  2453               	addwf	btemp+1,w,c
  6161  003272  6ED9               	movwf	fsr2l,c
  6162  003274  0E00               	movlw	high _tempThreshold
  6163  003276  2054               	addwfc	btemp+2,w,c
  6164  003278  6EDA               	movwf	fsr2h,c
  6165  00327A  50DF               	movf	indf2,w,c
  6166  00327C  6EE6               	movwf	postinc1,c
  6167  00327E  C04B  FFE6         	movff	_tempThresholdAddress,postinc1
  6168  003282  C04C  FFE6         	movff	_tempThresholdAddress+1,postinc1
  6169  003286  ECFD  F022         	call	_write_EEPROM	;wreg free
  6170  00328A                     l471:
  6171  00328A  A2AC               	btfss	4012,1,c	;volatile
  6172  00328C  D7FE               	goto	l471
  6173                           
  6174                           ;lab7.c: 1027: TXREG = keypadValue;
  6175  00328E  C01C  FFAD         	movff	_keypadValue,4013	;volatile
  6176                           
  6177                           ;lab7.c: 1028: tempThresholdAddress++;
  6178  003292  4A4B               	infsnz	_tempThresholdAddress,f,c
  6179  003294  2A4C               	incf	_tempThresholdAddress+1,f,c
  6180                           
  6181                           ;lab7.c: 1029: delay();
  6182  003296  ECE8  F022         	call	_delay	;wreg free
  6183  00329A  4A0A               	infsnz	_i,f,c
  6184  00329C  2A0B               	incf	_i+1,f,c
  6185  00329E  D7CD               	goto	l3212
  6186  0032A0                     l3230:
  6187                           
  6188                           ;lab7.c: 1032: keypadOnly();
  6189  0032A0  EC66  F01F         	call	_keypadOnly	;wreg free
  6190  0032A4                     l3232:
  6191  0032A4  0E44               	movlw	68
  6192  0032A6  181C               	xorwf	_keypadValue,w,c
  6193  0032A8  B4D8               	btfsc	status,2,c
  6194  0032AA  D042               	goto	l3252
  6195  0032AC  D7F9               	goto	l3230
  6196  0032AE                     l468:
  6197                           
  6198                           ;lab7.c: 1035: else
  6199                           ;lab7.c: 1036: {
  6200                           ;lab7.c: 1037: for(i=0; i<2; i++)
  6201  0032AE  6A0A               	clrf	_i,c
  6202  0032B0  6A0B               	clrf	_i+1,c
  6203  0032B2                     l3234:
  6204  0032B2  BE0B               	btfsc	_i+1,7,c
  6205  0032B4  D006               	goto	l3238
  6206  0032B6  500B               	movf	_i+1,w,c
  6207  0032B8  E137               	bnz	l3250
  6208  0032BA  0E02               	movlw	2
  6209  0032BC  5C0A               	subwf	_i,w,c
  6210  0032BE  B0D8               	btfsc	status,0,c
  6211  0032C0  D033               	goto	l3250
  6212  0032C2                     l3238:
  6213                           
  6214                           ;lab7.c: 1038: {
  6215                           ;lab7.c: 1039: tempThreshold[i] = reception();
  6216  0032C2  C00A  F053         	movff	_i,btemp+1
  6217  0032C6  C00B  F054         	movff	_i+1,btemp+2
  6218  0032CA  0E24               	movlw	low _tempThreshold
  6219  0032CC  2453               	addwf	btemp+1,w,c
  6220  0032CE  6ED9               	movwf	fsr2l,c
  6221  0032D0  0E00               	movlw	high _tempThreshold
  6222  0032D2  2054               	addwfc	btemp+2,w,c
  6223  0032D4  6EDA               	movwf	fsr2h,c
  6224  0032D6  EC2B  F023         	call	_reception	;wreg free
  6225  0032DA  5052               	movf	btemp,w,c
  6226  0032DC  6EDF               	movwf	indf2,c
  6227                           
  6228                           ;lab7.c: 1040: write_EEPROM(tempThresholdAddress, tempThreshold[i]);
  6229  0032DE  C00A  F053         	movff	_i,btemp+1
  6230  0032E2  C00B  F054         	movff	_i+1,btemp+2
  6231  0032E6  0E24               	movlw	low _tempThreshold
  6232  0032E8  2453               	addwf	btemp+1,w,c
  6233  0032EA  6ED9               	movwf	fsr2l,c
  6234  0032EC  0E00               	movlw	high _tempThreshold
  6235  0032EE  2054               	addwfc	btemp+2,w,c
  6236  0032F0  6EDA               	movwf	fsr2h,c
  6237  0032F2  50DF               	movf	indf2,w,c
  6238  0032F4  6EE6               	movwf	postinc1,c
  6239  0032F6  C04B  FFE6         	movff	_tempThresholdAddress,postinc1
  6240  0032FA  C04C  FFE6         	movff	_tempThresholdAddress+1,postinc1
  6241  0032FE  ECFD  F022         	call	_write_EEPROM	;wreg free
  6242  003302                     l480:
  6243  003302  A2AC               	btfss	4012,1,c	;volatile
  6244  003304  D7FE               	goto	l480
  6245                           
  6246                           ;lab7.c: 1042: TXREG = tempThreshold[i];
  6247  003306  C00A  F053         	movff	_i,btemp+1
  6248  00330A  C00B  F054         	movff	_i+1,btemp+2
  6249  00330E  0E24               	movlw	low _tempThreshold
  6250  003310  2453               	addwf	btemp+1,w,c
  6251  003312  6ED9               	movwf	fsr2l,c
  6252  003314  0E00               	movlw	high _tempThreshold
  6253  003316  2054               	addwfc	btemp+2,w,c
  6254  003318  6EDA               	movwf	fsr2h,c
  6255  00331A  50DF               	movf	indf2,w,c
  6256  00331C  6EAD               	movwf	4013,c	;volatile
  6257                           
  6258                           ;lab7.c: 1043: tempThresholdAddress++;
  6259  00331E  4A4B               	infsnz	_tempThresholdAddress,f,c
  6260  003320  2A4C               	incf	_tempThresholdAddress+1,f,c
  6261  003322  4A0A               	infsnz	_i,f,c
  6262  003324  2A0B               	incf	_i+1,f,c
  6263  003326  D7C5               	goto	l3234
  6264  003328                     l3250:
  6265  003328  0E0D               	movlw	13
  6266  00332A  18AE               	xorwf	4014,w,c	;volatile
  6267  00332C  A4D8               	btfss	status,2,c
  6268  00332E  D7FC               	goto	l3250
  6269  003330                     l3252:
  6270                           
  6271                           ;lab7.c: 1046: }
  6272                           ;lab7.c: 1047: thresholdTemp = atoi(tempThreshold);
  6273  003330  0E24               	movlw	low _tempThreshold
  6274  003332  6EE6               	movwf	postinc1,c
  6275  003334  0E00               	movlw	high _tempThreshold
  6276  003336  6EE6               	movwf	postinc1,c
  6277  003338  EC53  F01A         	call	_atoi	;wreg free
  6278  00333C  C052  F04D         	movff	btemp,_thresholdTemp
  6279  003340  C053  F04E         	movff	btemp+1,_thresholdTemp+1
  6280                           
  6281                           ;lab7.c: 1048: printChar("\n\r");
  6282  003344  0EEC               	movlw	low (STR_17+36)
  6283  003346  6EE6               	movwf	postinc1,c
  6284  003348  0E7A               	movlw	high (STR_17+36)
  6285  00334A  6EE6               	movwf	postinc1,c
  6286  00334C  EC0B  F021         	call	_printChar	;wreg free
  6287                           
  6288                           ;lab7.c: 1049: printChar("\n\rNew Temperature Sensor Alarm Threshold has been set..");
  6289  003350  0EB4               	movlw	low STR_143
  6290  003352  6EE6               	movwf	postinc1,c
  6291  003354  0E77               	movlw	high STR_143
  6292  003356  6EE6               	movwf	postinc1,c
  6293  003358  EC0B  F021         	call	_printChar	;wreg free
  6294                           
  6295                           ;lab7.c: 1050: delay();
  6296  00335C  ECE8  F022         	call	_delay	;wreg free
  6297                           
  6298                           ; _getTempThreshold: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6299  003360  0012               	return		;funcret
  6300  003362                     __end_of_getTempThreshold:
  6301                           	opt stack 0
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           intcon	equ	0xFF2
  6307                           intcon2	equ	0xFF1
  6308                           indf0	equ	0xFEF
  6309                           postinc0	equ	0xFEE
  6310                           fsr0h	equ	0xFEA
  6311                           fsr0l	equ	0xFE9
  6312                           wreg	equ	0xFE8
  6313                           postinc1	equ	0xFE6
  6314                           postdec1	equ	0xFE5
  6315                           plusw1	equ	0xFE3
  6316                           fsr1h	equ	0xFE2
  6317                           fsr1l	equ	0xFE1
  6318                           indf2	equ	0xFDF
  6319                           postinc2	equ	0xFDE
  6320                           postdec2	equ	0xFDD
  6321                           fsr2h	equ	0xFDA
  6322                           fsr2l	equ	0xFD9
  6323                           status	equ	0xFD8
  6324                           
  6325 ;; *************** function _checkStatus *****************
  6326 ;; Defined at:
  6327 ;;		line 550 in file "lab7.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6341 ;;      Params:         0       0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:   12
  6348 ;; This function calls:
  6349 ;;		_atoi
  6350 ;;		_read_EEPROM
  6351 ;;		_settingsPIR
  6352 ;;		_tempSetting
  6353 ;; This function is called by:
  6354 ;;		_login
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text14
  6359  002C08                     __ptext14:
  6360                           	opt stack 0
  6361  002C08                     _checkStatus:
  6362                           	opt stack 16
  6363                           
  6364                           ;lab7.c: 554: if(read_EEPROM(PIRStatusAddress) !=(char)255)
  6365                           
  6366                           ;incstack = 0
  6367  002C08  C004  FFE6         	movff	_PIRStatusAddress,postinc1
  6368  002C0C  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
  6369  002C10  EC36  F023         	call	_read_EEPROM	;wreg free
  6370  002C14  2852               	incf	btemp,w,c
  6371  002C16  B4D8               	btfsc	status,2,c
  6372  002C18  D021               	goto	l2218
  6373                           
  6374                           ;lab7.c: 555: {
  6375                           ;lab7.c: 557: if (read_EEPROM(PIRStatusAddress) == 'E')
  6376  002C1A  C004  FFE6         	movff	_PIRStatusAddress,postinc1
  6377  002C1E  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
  6378  002C22  EC36  F023         	call	_read_EEPROM	;wreg free
  6379  002C26  0E45               	movlw	69
  6380  002C28  1852               	xorwf	btemp,w,c
  6381  002C2A  A4D8               	btfss	status,2,c
  6382  002C2C  D008               	goto	l2212
  6383                           
  6384                           ;lab7.c: 558: {
  6385                           ;lab7.c: 559: pirState = "ACTIVE";
  6386  002C2E  0EE0               	movlw	low (STR_1+2)
  6387  002C30  6E45               	movwf	_pirState,c
  6388  002C32  0E7F               	movlw	high (STR_1+2)
  6389  002C34  6E46               	movwf	_pirState+1,c
  6390                           
  6391                           ;lab7.c: 560: settingsPIR();
  6392  002C36  EC56  F023         	call	_settingsPIR	;wreg free
  6393                           
  6394                           ;lab7.c: 561: INTCONbits.INT0IE = 1;
  6395  002C3A  88F2               	bsf	intcon,4,c	;volatile
  6396                           
  6397                           ;lab7.c: 562: }
  6398  002C3C  D00F               	goto	l2218
  6399  002C3E                     l2212:
  6400                           
  6401                           ;lab7.c: 563: else if(read_EEPROM(PIRStatusAddress) == 'D')
  6402  002C3E  C004  FFE6         	movff	_PIRStatusAddress,postinc1
  6403  002C42  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
  6404  002C46  EC36  F023         	call	_read_EEPROM	;wreg free
  6405  002C4A  0E44               	movlw	68
  6406  002C4C  1852               	xorwf	btemp,w,c
  6407  002C4E  A4D8               	btfss	status,2,c
  6408  002C50  D005               	goto	l2218
  6409                           
  6410                           ;lab7.c: 564: {
  6411                           ;lab7.c: 565: pirState = "INACTIVE";
  6412  002C52  0EDE               	movlw	low STR_1
  6413  002C54  6E45               	movwf	_pirState,c
  6414  002C56  0E7F               	movlw	high STR_1
  6415  002C58  6E46               	movwf	_pirState+1,c
  6416                           
  6417                           ;lab7.c: 566: INTCONbits.INT0IE = 0;
  6418  002C5A  98F2               	bcf	intcon,4,c	;volatile
  6419  002C5C                     l2218:
  6420                           
  6421                           ;lab7.c: 567: }
  6422                           ;lab7.c: 568: }
  6423                           ;lab7.c: 570: if(read_EEPROM(tempStatusAddress) !=(char)255)
  6424  002C5C  C049  FFE6         	movff	_tempStatusAddress,postinc1
  6425  002C60  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
  6426  002C64  EC36  F023         	call	_read_EEPROM	;wreg free
  6427  002C68  2852               	incf	btemp,w,c
  6428  002C6A  B4D8               	btfsc	status,2,c
  6429  002C6C  D023               	goto	l2238
  6430                           
  6431                           ;lab7.c: 571: {
  6432                           ;lab7.c: 572: if (read_EEPROM(tempStatusAddress) == 'E')
  6433  002C6E  C049  FFE6         	movff	_tempStatusAddress,postinc1
  6434  002C72  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
  6435  002C76  EC36  F023         	call	_read_EEPROM	;wreg free
  6436  002C7A  0E45               	movlw	69
  6437  002C7C  1852               	xorwf	btemp,w,c
  6438  002C7E  A4D8               	btfss	status,2,c
  6439  002C80  D008               	goto	l2228
  6440                           
  6441                           ;lab7.c: 573: {
  6442                           ;lab7.c: 574: tempState = "ACTIVE";
  6443  002C82  0EE0               	movlw	low (STR_1+2)
  6444  002C84  6E47               	movwf	_tempState,c
  6445  002C86  0E7F               	movlw	high (STR_1+2)
  6446  002C88  6E48               	movwf	_tempState+1,c
  6447                           
  6448                           ;lab7.c: 575: tempSetting();
  6449  002C8A  EC69  F023         	call	_tempSetting	;wreg free
  6450                           
  6451                           ;lab7.c: 576: T0CONbits.TMR0ON = 1;
  6452  002C8E  8ED5               	bsf	4053,7,c	;volatile
  6453                           
  6454                           ;lab7.c: 577: }
  6455  002C90  D011               	goto	l2238
  6456  002C92                     l2228:
  6457                           
  6458                           ;lab7.c: 578: else if(read_EEPROM(tempStatusAddress) == 'D')
  6459  002C92  C049  FFE6         	movff	_tempStatusAddress,postinc1
  6460  002C96  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
  6461  002C9A  EC36  F023         	call	_read_EEPROM	;wreg free
  6462  002C9E  0E44               	movlw	68
  6463  002CA0  1852               	xorwf	btemp,w,c
  6464  002CA2  A4D8               	btfss	status,2,c
  6465  002CA4  D007               	goto	l2238
  6466                           
  6467                           ;lab7.c: 579: {
  6468                           ;lab7.c: 580: tempState = "INACTIVE";
  6469  002CA6  0EDE               	movlw	low STR_1
  6470  002CA8  6E47               	movwf	_tempState,c
  6471  002CAA  0E7F               	movlw	high STR_1
  6472  002CAC  6E48               	movwf	_tempState+1,c
  6473                           
  6474                           ;lab7.c: 581: T0CONbits.TMR0ON = 0;
  6475  002CAE  9ED5               	bcf	4053,7,c	;volatile
  6476                           
  6477                           ;lab7.c: 582: PIE1bits.ADIE = 0;
  6478  002CB0  9C9D               	bcf	3997,6,c	;volatile
  6479                           
  6480                           ;lab7.c: 583: PORTBbits.RB5 =0;
  6481  002CB2  9A81               	bcf	3969,5,c	;volatile
  6482  002CB4                     l2238:
  6483                           
  6484                           ;lab7.c: 584: }
  6485                           ;lab7.c: 585: }
  6486                           ;lab7.c: 587: if(read_EEPROM(inputMethodAddress) !=(char)255)
  6487  002CB4  C041  FFE6         	movff	_inputMethodAddress,postinc1
  6488  002CB8  C042  FFE6         	movff	_inputMethodAddress+1,postinc1
  6489  002CBC  EC36  F023         	call	_read_EEPROM	;wreg free
  6490  002CC0  2852               	incf	btemp,w,c
  6491  002CC2  B4D8               	btfsc	status,2,c
  6492  002CC4  D035               	goto	l2262
  6493                           
  6494                           ;lab7.c: 588: {
  6495                           ;lab7.c: 589: if (read_EEPROM(inputMethodAddress) == 'P')
  6496  002CC6  C041  FFE6         	movff	_inputMethodAddress,postinc1
  6497  002CCA  C042  FFE6         	movff	_inputMethodAddress+1,postinc1
  6498  002CCE  EC36  F023         	call	_read_EEPROM	;wreg free
  6499  002CD2  0E50               	movlw	80
  6500  002CD4  1852               	xorwf	btemp,w,c
  6501  002CD6  A4D8               	btfss	status,2,c
  6502  002CD8  D009               	goto	l2248
  6503                           
  6504                           ;lab7.c: 590: {
  6505                           ;lab7.c: 592: PORTBbits.RB4=1;
  6506  002CDA  8881               	bsf	3969,4,c	;volatile
  6507                           
  6508                           ;lab7.c: 593: status =1;
  6509  002CDC  0E00               	movlw	0
  6510  002CDE  6E11               	movwf	_status+1,c
  6511  002CE0  0E01               	movlw	1
  6512  002CE2  6E10               	movwf	_status,c
  6513                           
  6514                           ;lab7.c: 594: inputType = "Keypad";
  6515  002CE4  0E92               	movlw	low (STR_56+13)
  6516  002CE6  6E43               	movwf	_inputType,c
  6517  002CE8  0E7F               	movlw	high (STR_56+13)
  6518  002CEA  D021               	goto	L17
  6519  002CEC                     l2248:
  6520                           
  6521                           ;lab7.c: 596: else if (read_EEPROM(inputMethodAddress) == 'K')
  6522  002CEC  C041  FFE6         	movff	_inputMethodAddress,postinc1
  6523  002CF0  C042  FFE6         	movff	_inputMethodAddress+1,postinc1
  6524  002CF4  EC36  F023         	call	_read_EEPROM	;wreg free
  6525  002CF8  0E4B               	movlw	75
  6526  002CFA  1852               	xorwf	btemp,w,c
  6527  002CFC  A4D8               	btfss	status,2,c
  6528  002CFE  D005               	goto	l2254
  6529                           
  6530                           ;lab7.c: 597: {
  6531                           ;lab7.c: 598: PORTBbits.RB4=0;
  6532  002D00  9881               	bcf	3969,4,c	;volatile
  6533                           
  6534                           ;lab7.c: 599: inputType = "Keyboard";
  6535  002D02  0EE7               	movlw	low STR_3
  6536  002D04  6E43               	movwf	_inputType,c
  6537  002D06  0E7F               	movlw	high STR_3
  6538  002D08  D012               	goto	L17
  6539  002D0A                     l2254:
  6540                           
  6541                           ;lab7.c: 601: else if (read_EEPROM(inputMethodAddress) == 'B')
  6542  002D0A  C041  FFE6         	movff	_inputMethodAddress,postinc1
  6543  002D0E  C042  FFE6         	movff	_inputMethodAddress+1,postinc1
  6544  002D12  EC36  F023         	call	_read_EEPROM	;wreg free
  6545  002D16  0E42               	movlw	66
  6546  002D18  1852               	xorwf	btemp,w,c
  6547  002D1A  A4D8               	btfss	status,2,c
  6548  002D1C  D009               	goto	l2262
  6549                           
  6550                           ;lab7.c: 602: {
  6551                           ;lab7.c: 603: PORTBbits.RB4=1;
  6552  002D1E  8881               	bsf	3969,4,c	;volatile
  6553                           
  6554                           ;lab7.c: 604: status = 0;
  6555  002D20  0E00               	movlw	0
  6556  002D22  6E11               	movwf	_status+1,c
  6557  002D24  0E00               	movlw	0
  6558  002D26  6E10               	movwf	_status,c
  6559                           
  6560                           ;lab7.c: 605: inputType = "Keyboard AND Keypad";
  6561  002D28  0E85               	movlw	low STR_56
  6562  002D2A  6E43               	movwf	_inputType,c
  6563  002D2C  0E7F               	movlw	high STR_56
  6564  002D2E                     L17:
  6565  002D2E  6E44               	movwf	_inputType+1,c
  6566  002D30                     l2262:
  6567                           
  6568                           ;lab7.c: 606: }
  6569                           ;lab7.c: 607: }
  6570                           ;lab7.c: 609: if (read_EEPROM(tempThresholdAddress) !=(char)255)
  6571  002D30  C04B  FFE6         	movff	_tempThresholdAddress,postinc1
  6572  002D34  C04C  FFE6         	movff	_tempThresholdAddress+1,postinc1
  6573  002D38  EC36  F023         	call	_read_EEPROM	;wreg free
  6574  002D3C  2852               	incf	btemp,w,c
  6575  002D3E  B4D8               	btfsc	status,2,c
  6576  002D40  0012               	return	
  6577                           
  6578                           ;lab7.c: 610: {
  6579                           ;lab7.c: 612: for(i = 0, address = 0x10; i < 4;address++,i++)
  6580  002D42  0E00               	movlw	0
  6581  002D44  6E0B               	movwf	_i+1,c
  6582  002D46  0E00               	movlw	0
  6583  002D48  6E0A               	movwf	_i,c
  6584  002D4A  0E00               	movlw	0
  6585  002D4C  6E07               	movwf	_address+1,c
  6586  002D4E  0E10               	movlw	16
  6587  002D50  6E06               	movwf	_address,c
  6588  002D52  D012               	goto	l2272
  6589  002D54                     l2266:
  6590                           
  6591                           ;lab7.c: 613: {
  6592                           ;lab7.c: 614: tempThreshold[i] = read_EEPROM(address);
  6593  002D54  0E24               	movlw	low _tempThreshold
  6594  002D56  240A               	addwf	_i,w,c
  6595  002D58  6ED9               	movwf	fsr2l,c
  6596  002D5A  0E00               	movlw	high _tempThreshold
  6597  002D5C  200B               	addwfc	_i+1,w,c
  6598  002D5E  6EDA               	movwf	fsr2h,c
  6599  002D60  C006  FFE6         	movff	_address,postinc1
  6600  002D64  C007  FFE6         	movff	_address+1,postinc1
  6601  002D68  EC36  F023         	call	_read_EEPROM	;wreg free
  6602  002D6C  5052               	movf	btemp,w,c
  6603  002D6E  6EDF               	movwf	indf2,c
  6604  002D70  4A06               	infsnz	_address,f,c
  6605  002D72  2A07               	incf	_address+1,f,c
  6606  002D74  4A0A               	infsnz	_i,f,c
  6607  002D76  2A0B               	incf	_i+1,f,c
  6608  002D78                     l2272:
  6609  002D78  BE0B               	btfsc	_i+1,7,c
  6610  002D7A  D7EC               	goto	l2266
  6611  002D7C  500B               	movf	_i+1,w,c
  6612  002D7E  E104               	bnz	l2274
  6613  002D80  0E04               	movlw	4
  6614  002D82  5C0A               	subwf	_i,w,c
  6615  002D84  A0D8               	btfss	status,0,c
  6616  002D86  D7E6               	goto	l2266
  6617  002D88                     l2274:
  6618                           
  6619                           ;lab7.c: 615: }
  6620                           ;lab7.c: 616: thresholdTemp = atoi(tempThreshold);
  6621  002D88  0E24               	movlw	low _tempThreshold
  6622  002D8A  6EE6               	movwf	postinc1,c
  6623  002D8C  0E00               	movlw	high _tempThreshold
  6624  002D8E  6EE6               	movwf	postinc1,c
  6625  002D90  EC53  F01A         	call	_atoi	;wreg free
  6626  002D94  C052  F04D         	movff	btemp,_thresholdTemp
  6627  002D98  C053  F04E         	movff	btemp+1,_thresholdTemp+1
  6628  002D9C  0012               	return	
  6629  002D9E                     __end_of_checkStatus:
  6630                           	opt stack 0
  6631                           tblptru	equ	0xFF8
  6632                           tblptrh	equ	0xFF7
  6633                           tblptrl	equ	0xFF6
  6634                           tablat	equ	0xFF5
  6635                           intcon	equ	0xFF2
  6636                           intcon2	equ	0xFF1
  6637                           indf0	equ	0xFEF
  6638                           postinc0	equ	0xFEE
  6639                           fsr0h	equ	0xFEA
  6640                           fsr0l	equ	0xFE9
  6641                           wreg	equ	0xFE8
  6642                           postinc1	equ	0xFE6
  6643                           postdec1	equ	0xFE5
  6644                           plusw1	equ	0xFE3
  6645                           fsr1h	equ	0xFE2
  6646                           fsr1l	equ	0xFE1
  6647                           indf2	equ	0xFDF
  6648                           postinc2	equ	0xFDE
  6649                           postdec2	equ	0xFDD
  6650                           fsr2h	equ	0xFDA
  6651                           fsr2l	equ	0xFD9
  6652                           status	equ	0xFD8
  6653                           
  6654 ;; *************** function _tempSetting *****************
  6655 ;; Defined at:
  6656 ;;		line 176 in file "lab7.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;		None
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		None
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6670 ;;      Params:         0       0       0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0
  6673 ;;      Totals:         0       0       0       0       0       0       0
  6674 ;;Total ram usage:        0 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:   10
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_main
  6681 ;;		_checkStatus
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text15
  6686  0046D2                     __ptext15:
  6687                           	opt stack 0
  6688  0046D2                     _tempSetting:
  6689                           	opt stack 20
  6690                           
  6691                           ;lab7.c: 178: RCONbits.IPEN = 1;
  6692                           
  6693                           ;incstack = 0
  6694  0046D2  8ED0               	bsf	4048,7,c	;volatile
  6695                           
  6696                           ;lab7.c: 179: PIR1bits.ADIF = 0;
  6697  0046D4  9C9E               	bcf	3998,6,c	;volatile
  6698                           
  6699                           ;lab7.c: 180: IPR1bits.ADIP = 0;
  6700  0046D6  9C9F               	bcf	3999,6,c	;volatile
  6701                           
  6702                           ;lab7.c: 181: PIE1bits.ADIE = 0;
  6703  0046D8  9C9D               	bcf	3997,6,c	;volatile
  6704                           
  6705                           ;lab7.c: 182: INTCONbits.PEIE = 1;
  6706  0046DA  8CF2               	bsf	intcon,6,c	;volatile
  6707                           
  6708                           ;lab7.c: 183: INTCONbits.GIE = 1;
  6709  0046DC  8EF2               	bsf	intcon,7,c	;volatile
  6710                           
  6711                           ;lab7.c: 184: PORTBbits.RB5 =0;
  6712  0046DE  9A81               	bcf	3969,5,c	;volatile
  6713  0046E0  0012               	return		;funcret
  6714  0046E2                     __end_of_tempSetting:
  6715                           	opt stack 0
  6716                           tblptru	equ	0xFF8
  6717                           tblptrh	equ	0xFF7
  6718                           tblptrl	equ	0xFF6
  6719                           tablat	equ	0xFF5
  6720                           intcon	equ	0xFF2
  6721                           intcon2	equ	0xFF1
  6722                           indf0	equ	0xFEF
  6723                           postinc0	equ	0xFEE
  6724                           fsr0h	equ	0xFEA
  6725                           fsr0l	equ	0xFE9
  6726                           wreg	equ	0xFE8
  6727                           postinc1	equ	0xFE6
  6728                           postdec1	equ	0xFE5
  6729                           plusw1	equ	0xFE3
  6730                           fsr1h	equ	0xFE2
  6731                           fsr1l	equ	0xFE1
  6732                           indf2	equ	0xFDF
  6733                           postinc2	equ	0xFDE
  6734                           postdec2	equ	0xFDD
  6735                           fsr2h	equ	0xFDA
  6736                           fsr2l	equ	0xFD9
  6737                           status	equ	0xFD8
  6738                           
  6739 ;; *************** function _atoi *****************
  6740 ;; Defined at:
  6741 ;;		line 5 in file "/Applications/microchip/xc8/v1.38/sources/common/atoi.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  s               2  [STACK] PTR const unsigned char 
  6744 ;;		 -> tempThreshold(3), 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  a               2  [STACK] int 
  6747 ;;  sign            1  [STACK] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2  [STACK] int 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6757 ;;      Params:         0       0       0       0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0
  6760 ;;      Totals:         0       0       0       0       0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:   11
  6764 ;; This function calls:
  6765 ;;		___wmul
  6766 ;;		_isdigit
  6767 ;; This function is called by:
  6768 ;;		_checkStatus
  6769 ;;		_getTempThreshold
  6770 ;; This function uses a reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text16
  6774  0034A6                     __ptext16:
  6775                           	opt stack 0
  6776  0034A6                     _atoi:
  6777                           	opt stack 0
  6778                           
  6779                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  6780  0034A6  52E6               	movf	postinc1,f,c
  6781  0034A8  52E6               	movf	postinc1,f,c
  6782  0034AA  52E6               	movf	postinc1,f,c
  6783                           
  6784                           ;incstack = 0
  6785  0034AC  D00F               	goto	l2682
  6786  0034AE                     l2680:
  6787                           
  6788                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6789  0034AE  0EFB               	movlw	-5
  6790  0034B0  50E3               	movf	plusw1,w,c
  6791  0034B2  0F01               	addlw	1
  6792  0034B4  6E52               	movwf	btemp,c
  6793  0034B6  0EFB               	movlw	-5
  6794  0034B8  C052  FFE3         	movff	btemp,plusw1
  6795  0034BC  6A52               	clrf	btemp,c
  6796  0034BE  0EFC               	movlw	-4
  6797  0034C0  50E3               	movf	plusw1,w,c
  6798  0034C2  2052               	addwfc	btemp,w,c
  6799  0034C4  6E52               	movwf	btemp,c
  6800  0034C6  0EFC               	movlw	-4
  6801  0034C8  C052  FFE3         	movff	btemp,plusw1
  6802  0034CC                     l2682:
  6803                           
  6804                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6805  0034CC  0EFB               	movlw	-5
  6806  0034CE  CFE3 FFD9          	movff	plusw1,fsr2l
  6807  0034D2  0EFC               	movlw	-4
  6808  0034D4  CFE3 FFDA          	movff	plusw1,fsr2h
  6809  0034D8  50DF               	movf	indf2,w,c
  6810  0034DA  0A20               	xorlw	32
  6811  0034DC  B4D8               	btfsc	status,2,c
  6812  0034DE  D7E7               	goto	l2680
  6813                           
  6814                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6815  0034E0  0EFB               	movlw	-5
  6816  0034E2  CFE3 FFD9          	movff	plusw1,fsr2l
  6817  0034E6  0EFC               	movlw	-4
  6818  0034E8  CFE3 FFDA          	movff	plusw1,fsr2h
  6819  0034EC  50DF               	movf	indf2,w,c
  6820  0034EE  0A09               	xorlw	9
  6821  0034F0  B4D8               	btfsc	status,2,c
  6822  0034F2  D7DD               	goto	l2680
  6823                           
  6824                           ;stkvar	atoi@a @ sp[(-3)+0]
  6825  0034F4  0EFD               	movlw	-3
  6826  0034F6  6AE3               	clrf	plusw1,c
  6827  0034F8  0EFE               	movlw	-2
  6828  0034FA  6AE3               	clrf	plusw1,c
  6829                           
  6830                           ;stkvar	atoi@sign @ sp[(-3)+2]
  6831  0034FC  0EFF               	movlw	-1
  6832  0034FE  6AE3               	clrf	plusw1,c
  6833                           
  6834                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6835  003500  0EFB               	movlw	-5
  6836  003502  CFE3 FFD9          	movff	plusw1,fsr2l
  6837  003506  0EFC               	movlw	-4
  6838  003508  CFE3 FFDA          	movff	plusw1,fsr2h
  6839  00350C  50DF               	movf	indf2,w,c
  6840  00350E  0A2D               	xorlw	45
  6841  003510  A4D8               	btfss	status,2,c
  6842  003512  D012               	goto	l2696
  6843                           
  6844                           ;stkvar	atoi@sign @ sp[(-3)+2]
  6845  003514  0EFF               	movlw	-1
  6846  003516  2AE3               	incf	plusw1,f,c
  6847  003518                     l2694:
  6848                           
  6849                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6850  003518  0EFB               	movlw	-5
  6851  00351A  50E3               	movf	plusw1,w,c
  6852  00351C  0F01               	addlw	1
  6853  00351E  6E52               	movwf	btemp,c
  6854  003520  0EFB               	movlw	-5
  6855  003522  C052  FFE3         	movff	btemp,plusw1
  6856  003526  6A52               	clrf	btemp,c
  6857  003528  0EFC               	movlw	-4
  6858  00352A  50E3               	movf	plusw1,w,c
  6859  00352C  2052               	addwfc	btemp,w,c
  6860  00352E  6E52               	movwf	btemp,c
  6861  003530  0EFC               	movlw	-4
  6862  003532  C052  FFE3         	movff	btemp,plusw1
  6863  003536  D02F               	goto	l2704
  6864  003538                     l2696:
  6865                           
  6866                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6867  003538  0EFB               	movlw	-5
  6868  00353A  CFE3 FFD9          	movff	plusw1,fsr2l
  6869  00353E  0EFC               	movlw	-4
  6870  003540  CFE3 FFDA          	movff	plusw1,fsr2h
  6871  003544  50DF               	movf	indf2,w,c
  6872  003546  0A2B               	xorlw	43
  6873  003548  B4D8               	btfsc	status,2,c
  6874  00354A  D7E6               	goto	l2694
  6875  00354C  D024               	goto	l2704
  6876  00354E                     l2700:
  6877  00354E  0E0A               	movlw	10
  6878  003550  6EE6               	movwf	postinc1,c
  6879  003552  0E00               	movlw	0
  6880  003554  6EE6               	movwf	postinc1,c
  6881                           
  6882                           ;stkvar	atoi@a @ sp[(-5)+0]
  6883  003556  0EFB               	movlw	-5
  6884  003558  CFE3 FFE6          	movff	plusw1,postinc1
  6885  00355C  CFE3 FFE6          	movff	plusw1,postinc1
  6886  003560  ECB6  F01F         	call	___wmul	;wreg free
  6887                           
  6888                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6889  003564  0EFB               	movlw	-5
  6890  003566  CFE3 FFD9          	movff	plusw1,fsr2l
  6891  00356A  0EFC               	movlw	-4
  6892  00356C  CFE3 FFDA          	movff	plusw1,fsr2h
  6893  003570  50DF               	movf	indf2,w,c
  6894  003572  2652               	addwf	btemp,f,c
  6895  003574  0E00               	movlw	0
  6896  003576  2253               	addwfc	btemp+1,f,c
  6897  003578  0ED0               	movlw	208
  6898  00357A  6E5C               	movwf	btemp+10,c
  6899  00357C  0EFF               	movlw	255
  6900  00357E  6E5D               	movwf	btemp+11,c
  6901  003580  505C               	movf	btemp+10,w,c
  6902  003582  2652               	addwf	btemp,f,c
  6903  003584  505D               	movf	btemp+11,w,c
  6904  003586  2253               	addwfc	btemp+1,f,c
  6905                           
  6906                           ;stkvar	atoi@a @ sp[(-3)+0]
  6907  003588  0EFD               	movlw	-3
  6908  00358A  C052  FFE3         	movff	btemp,plusw1
  6909  00358E  0EFE               	movlw	-2
  6910  003590  C053  FFE3         	movff	btemp+1,plusw1
  6911  003594  D7C1               	goto	l2694
  6912  003596                     l2704:
  6913                           
  6914                           ;stkvar	atoi@s @ sp[(-3)+-2]
  6915  003596  0EFB               	movlw	-5
  6916  003598  CFE3 FFD9          	movff	plusw1,fsr2l
  6917  00359C  0EFC               	movlw	-4
  6918  00359E  CFE3 FFDA          	movff	plusw1,fsr2h
  6919  0035A2  50DF               	movf	indf2,w,c
  6920  0035A4  6EE6               	movwf	postinc1,c
  6921  0035A6  EC7E  F022         	call	_isdigit	;wreg free
  6922  0035AA  B052               	btfsc	btemp,0,c
  6923  0035AC  D7D0               	goto	l2700
  6924                           
  6925                           ;stkvar	atoi@sign @ sp[(-3)+2]
  6926  0035AE  0EFF               	movlw	-1
  6927  0035B0  50E3               	movf	plusw1,w,c
  6928  0035B2  B4D8               	btfsc	status,2,c
  6929  0035B4  D00C               	goto	l2712
  6930                           
  6931                           ;stkvar	atoi@a @ sp[(-3)+0]
  6932  0035B6  0EFD               	movlw	-3
  6933  0035B8  CFE3 F052          	movff	plusw1,btemp
  6934  0035BC  1E52               	comf	btemp,f,c
  6935  0035BE  0EFE               	movlw	-2
  6936  0035C0  CFE3 F053          	movff	plusw1,btemp+1
  6937  0035C4  1E53               	comf	btemp+1,f,c
  6938  0035C6  2A52               	incf	btemp,f,c
  6939  0035C8  B4D8               	btfsc	status,2,c
  6940  0035CA  2A53               	incf	btemp+1,f,c
  6941  0035CC  D006               	goto	l906
  6942  0035CE                     l2712:
  6943                           
  6944                           ;stkvar	atoi@a @ sp[(-3)+0]
  6945  0035CE  0EFD               	movlw	-3
  6946  0035D0  CFE3 F052          	movff	plusw1,btemp
  6947  0035D4  0EFE               	movlw	-2
  6948  0035D6  CFE3 F053          	movff	plusw1,btemp+1
  6949  0035DA                     l906:
  6950                           
  6951                           ; _atoi: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  6952  0035DA  0EFB               	movlw	251
  6953  0035DC  26E1               	addwf	fsr1l,f,c
  6954  0035DE  0EFF               	movlw	255
  6955  0035E0  22E2               	addwfc	fsr1h,f,c
  6956  0035E2  0012               	return		;funcret
  6957  0035E4                     __end_of_atoi:
  6958                           	opt stack 0
  6959                           tblptru	equ	0xFF8
  6960                           tblptrh	equ	0xFF7
  6961                           tblptrl	equ	0xFF6
  6962                           tablat	equ	0xFF5
  6963                           intcon	equ	0xFF2
  6964                           intcon2	equ	0xFF1
  6965                           indf0	equ	0xFEF
  6966                           postinc0	equ	0xFEE
  6967                           fsr0h	equ	0xFEA
  6968                           fsr0l	equ	0xFE9
  6969                           wreg	equ	0xFE8
  6970                           postinc1	equ	0xFE6
  6971                           postdec1	equ	0xFE5
  6972                           plusw1	equ	0xFE3
  6973                           fsr1h	equ	0xFE2
  6974                           fsr1l	equ	0xFE1
  6975                           indf2	equ	0xFDF
  6976                           postinc2	equ	0xFDE
  6977                           postdec2	equ	0xFDD
  6978                           fsr2h	equ	0xFDA
  6979                           fsr2l	equ	0xFD9
  6980                           status	equ	0xFD8
  6981                           
  6982 ;; *************** function _isdigit *****************
  6983 ;; Defined at:
  6984 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/isdigit.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  c               1  [STACK] unsigned char 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;		None               void
  6991 ;; Registers used:
  6992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6998 ;;      Params:         0       0       0       0       0       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0
  7001 ;;      Totals:         0       0       0       0       0       0       0
  7002 ;;Total ram usage:        0 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:   10
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_sprintf
  7009 ;;		_atoi
  7010 ;; This function uses a reentrant model
  7011 ;;
  7012                           
  7013                           	psect	text17
  7014  0044FC                     __ptext17:
  7015                           	opt stack 0
  7016  0044FC                     _isdigit:
  7017                           	opt stack 0
  7018                           
  7019                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7020  0044FC  52E6               	movf	postinc1,f,c
  7021                           
  7022                           ;stkvar	_isdigit$1608 @ sp[(-1)+0]
  7023                           
  7024                           ;incstack = 0
  7025  0044FE  0EFF               	movlw	-1
  7026  004500  6AE3               	clrf	plusw1,c
  7027                           
  7028                           ;stkvar	isdigit@c @ sp[(-1)+-1]
  7029  004502  0EFE               	movlw	-2
  7030  004504  CFE3 F052          	movff	plusw1,btemp
  7031  004508  0E3A               	movlw	58
  7032  00450A  6052               	cpfslt	btemp,c
  7033  00450C  D009               	goto	l2342
  7034                           
  7035                           ;stkvar	isdigit@c @ sp[(-1)+-1]
  7036  00450E  0EFE               	movlw	-2
  7037  004510  CFE3 F052          	movff	plusw1,btemp
  7038  004514  0E2F               	movlw	47
  7039  004516  6452               	cpfsgt	btemp,c
  7040  004518  D003               	goto	l2342
  7041                           
  7042                           ;stkvar	_isdigit$1608 @ sp[(-1)+0]
  7043  00451A  0EFF               	movlw	-1
  7044  00451C  6AE3               	clrf	plusw1,c
  7045  00451E  2AE3               	incf	plusw1,f,c
  7046  004520                     l2342:
  7047                           
  7048                           ;stkvar	_isdigit$1608 @ sp[(-1)+0]
  7049  004520  0EFF               	movlw	-1
  7050  004522  CFE3 F05D          	movff	plusw1,btemp+11
  7051  004526  305D               	rrcf	btemp+11,w,c
  7052  004528  9052               	bcf	btemp,0,c
  7053  00452A  B0D8               	btfsc	status,0,c
  7054  00452C  8052               	bsf	btemp,0,c
  7055                           
  7056                           ; _isdigit: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsi
      +                          ze = 1, vargsize = 0
  7057  00452E  52E5               	movf	postdec1,f,c
  7058  004530  52E5               	movf	postdec1,f,c
  7059  004532  0012               	return		;funcret
  7060  004534                     __end_of_isdigit:
  7061                           	opt stack 0
  7062                           tblptru	equ	0xFF8
  7063                           tblptrh	equ	0xFF7
  7064                           tblptrl	equ	0xFF6
  7065                           tablat	equ	0xFF5
  7066                           intcon	equ	0xFF2
  7067                           intcon2	equ	0xFF1
  7068                           indf0	equ	0xFEF
  7069                           postinc0	equ	0xFEE
  7070                           fsr0h	equ	0xFEA
  7071                           fsr0l	equ	0xFE9
  7072                           wreg	equ	0xFE8
  7073                           postinc1	equ	0xFE6
  7074                           postdec1	equ	0xFE5
  7075                           plusw1	equ	0xFE3
  7076                           fsr1h	equ	0xFE2
  7077                           fsr1l	equ	0xFE1
  7078                           indf2	equ	0xFDF
  7079                           postinc2	equ	0xFDE
  7080                           postdec2	equ	0xFDD
  7081                           fsr2h	equ	0xFDA
  7082                           fsr2l	equ	0xFD9
  7083                           status	equ	0xFD8
  7084                           
  7085 ;; *************** function _passcodeMenu *****************
  7086 ;; Defined at:
  7087 ;;		line 755 in file "lab7.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7101 ;;      Params:         0       0       0       0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0
  7104 ;;      Totals:         0       0       0       0       0       0       0
  7105 ;;Total ram usage:        0 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:   16
  7108 ;; This function calls:
  7109 ;;		_checkPassword
  7110 ;;		_delay
  7111 ;;		_getInput
  7112 ;;		_getTempPassword
  7113 ;;		_keypadOnly
  7114 ;;		_mainMenu
  7115 ;;		_printChar
  7116 ;;		_reception
  7117 ;;		_resetScreen
  7118 ;; This function is called by:
  7119 ;;		_mainMenu
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text18
  7124  00252E                     __ptext18:
  7125                           	opt stack 0
  7126  00252E                     _passcodeMenu:
  7127                           	opt stack 12
  7128                           
  7129                           ;lab7.c: 757: resetScreen();
  7130                           
  7131                           ;incstack = 0
  7132  00252E  EC41  F023         	call	_resetScreen	;wreg free
  7133                           
  7134                           ;lab7.c: 758: printChar("\n\r");
  7135  002532  0EEC               	movlw	low (STR_17+36)
  7136  002534  6EE6               	movwf	postinc1,c
  7137  002536  0E7A               	movlw	high (STR_17+36)
  7138  002538  6EE6               	movwf	postinc1,c
  7139  00253A  EC0B  F021         	call	_printChar	;wreg free
  7140                           
  7141                           ;lab7.c: 759: printChar("\n\r********************PASSCODE MENU************************")
      +                          ;
  7142  00253E  0EC5               	movlw	low STR_84
  7143  002540  6EE6               	movwf	postinc1,c
  7144  002542  0E76               	movlw	high STR_84
  7145  002544  6EE6               	movwf	postinc1,c
  7146  002546  EC0B  F021         	call	_printChar	;wreg free
  7147                           
  7148                           ;lab7.c: 760: printChar("\n\r");
  7149  00254A  0EEC               	movlw	low (STR_17+36)
  7150  00254C  6EE6               	movwf	postinc1,c
  7151  00254E  0E7A               	movlw	high (STR_17+36)
  7152  002550  6EE6               	movwf	postinc1,c
  7153  002552  EC0B  F021         	call	_printChar	;wreg free
  7154                           
  7155                           ;lab7.c: 761: printChar("\n\r     1. Change Passcode");
  7156  002556  0E2A               	movlw	low STR_86
  7157  002558  6EE6               	movwf	postinc1,c
  7158  00255A  0E7F               	movlw	high STR_86
  7159  00255C  6EE6               	movwf	postinc1,c
  7160  00255E  EC0B  F021         	call	_printChar	;wreg free
  7161                           
  7162                           ;lab7.c: 762: printChar("\n\r");
  7163  002562  0EEC               	movlw	low (STR_17+36)
  7164  002564  6EE6               	movwf	postinc1,c
  7165  002566  0E7A               	movlw	high (STR_17+36)
  7166  002568  6EE6               	movwf	postinc1,c
  7167  00256A  EC0B  F021         	call	_printChar	;wreg free
  7168                           
  7169                           ;lab7.c: 763: printChar("\n\r     0. Return to Main Menu");
  7170  00256E  0E27               	movlw	low STR_88
  7171  002570  6EE6               	movwf	postinc1,c
  7172  002572  0E7E               	movlw	high STR_88
  7173  002574  6EE6               	movwf	postinc1,c
  7174  002576  EC0B  F021         	call	_printChar	;wreg free
  7175                           
  7176                           ;lab7.c: 764: printChar("\n\r");
  7177  00257A  0EEC               	movlw	low (STR_17+36)
  7178  00257C  6EE6               	movwf	postinc1,c
  7179  00257E  0E7A               	movlw	high (STR_17+36)
  7180  002580  6EE6               	movwf	postinc1,c
  7181  002582  EC0B  F021         	call	_printChar	;wreg free
  7182                           
  7183                           ;lab7.c: 765: printChar("\n\rInput: ");
  7184  002586  0ED4               	movlw	low STR_77
  7185  002588  6EE6               	movwf	postinc1,c
  7186  00258A  0E7F               	movlw	high STR_77
  7187  00258C  6EE6               	movwf	postinc1,c
  7188  00258E  EC0B  F021         	call	_printChar	;wreg free
  7189                           
  7190                           ;lab7.c: 767: delay();
  7191  002592  ECE8  F022         	call	_delay	;wreg free
  7192                           
  7193                           ;lab7.c: 769: if(status==1 && PORTBbits.RB4 == 1)
  7194  002596  0410               	decf	_status,w,c
  7195  002598  1011               	iorwf	_status+1,w,c
  7196  00259A  B4D8               	btfsc	status,2,c
  7197  00259C  A881               	btfss	3969,4,c	;volatile
  7198  00259E  D012               	goto	l3922
  7199                           
  7200                           ;lab7.c: 770: {
  7201                           ;lab7.c: 771: keypadOnly();
  7202  0025A0  EC66  F01F         	call	_keypadOnly	;wreg free
  7203  0025A4                     l390:
  7204  0025A4  A2AC               	btfss	4012,1,c	;volatile
  7205  0025A6  D7FE               	goto	l390
  7206                           
  7207                           ;lab7.c: 773: TXREG = keypadValue;
  7208  0025A8  C01C  FFAD         	movff	_keypadValue,4013	;volatile
  7209                           
  7210                           ;lab7.c: 774: option = keypadValue;
  7211  0025AC  C01C  F01D         	movff	_keypadValue,_option
  7212                           
  7213                           ;lab7.c: 775: delay();
  7214  0025B0  ECE8  F022         	call	_delay	;wreg free
  7215                           
  7216                           ;lab7.c: 776: while(keypadValue != 'D'){
  7217  0025B4  D002               	goto	l3920
  7218  0025B6                     l3918:
  7219                           
  7220                           ;lab7.c: 777: keypadOnly();
  7221  0025B6  EC66  F01F         	call	_keypadOnly	;wreg free
  7222  0025BA                     l3920:
  7223  0025BA  0E44               	movlw	68
  7224  0025BC  181C               	xorwf	_keypadValue,w,c
  7225  0025BE  B4D8               	btfsc	status,2,c
  7226  0025C0  D092               	goto	l3984
  7227  0025C2  D7F9               	goto	l3918
  7228  0025C4                     l3922:
  7229                           
  7230                           ;lab7.c: 780: else
  7231                           ;lab7.c: 781: {
  7232                           ;lab7.c: 782: option = reception();
  7233  0025C4  EC2B  F023         	call	_reception	;wreg free
  7234  0025C8  5052               	movf	btemp,w,c
  7235  0025CA  6E1D               	movwf	_option,c
  7236  0025CC                     l397:
  7237  0025CC  A2AC               	btfss	4012,1,c	;volatile
  7238  0025CE  D7FE               	goto	l397
  7239                           
  7240                           ;lab7.c: 784: TXREG = option;
  7241  0025D0  C01D  FFAD         	movff	_option,4013	;volatile
  7242  0025D4                     l3924:
  7243  0025D4  0E0D               	movlw	13
  7244  0025D6  18AE               	xorwf	4014,w,c	;volatile
  7245  0025D8  B4D8               	btfsc	status,2,c
  7246  0025DA  D085               	goto	l3984
  7247  0025DC  D7FB               	goto	l3924
  7248  0025DE                     l3926:
  7249                           
  7250                           ;lab7.c: 791: resetScreen();
  7251  0025DE  EC41  F023         	call	_resetScreen	;wreg free
  7252                           
  7253                           ;lab7.c: 792: mainMenu();
  7254  0025E2  ECB1  F011         	call	_mainMenu	;wreg free
  7255                           
  7256                           ;lab7.c: 793: break;
  7257  0025E6  0012               	return	
  7258  0025E8                     l3928:
  7259                           
  7260                           ;lab7.c: 796: resetScreen();
  7261  0025E8  EC41  F023         	call	_resetScreen	;wreg free
  7262                           
  7263                           ;lab7.c: 797: printChar("\n\r********************PASSCODE MENU************************")
      +                          ;
  7264  0025EC  0EC5               	movlw	low STR_84
  7265  0025EE  6EE6               	movwf	postinc1,c
  7266  0025F0  0E76               	movlw	high STR_84
  7267  0025F2  6EE6               	movwf	postinc1,c
  7268  0025F4  EC0B  F021         	call	_printChar	;wreg free
  7269                           
  7270                           ;lab7.c: 798: printChar("\n\r*******************Change Passcode***********************")
      +                          ;
  7271  0025F8  0E01               	movlw	low STR_92
  7272  0025FA  6EE6               	movwf	postinc1,c
  7273  0025FC  0E77               	movlw	high STR_92
  7274  0025FE  6EE6               	movwf	postinc1,c
  7275  002600  EC0B  F021         	call	_printChar	;wreg free
  7276                           
  7277                           ;lab7.c: 799: printChar("\n\r");
  7278  002604  0EEC               	movlw	low (STR_17+36)
  7279  002606  6EE6               	movwf	postinc1,c
  7280  002608  0E7A               	movlw	high (STR_17+36)
  7281  00260A  6EE6               	movwf	postinc1,c
  7282  00260C  EC0B  F021         	call	_printChar	;wreg free
  7283                           
  7284                           ;lab7.c: 800: printChar("\n\r");
  7285  002610  0EEC               	movlw	low (STR_17+36)
  7286  002612  6EE6               	movwf	postinc1,c
  7287  002614  0E7A               	movlw	high (STR_17+36)
  7288  002616  6EE6               	movwf	postinc1,c
  7289  002618  EC0B  F021         	call	_printChar	;wreg free
  7290                           
  7291                           ;lab7.c: 801: printChar("\n\rEnter Current Passcode:  ");
  7292  00261C  0EBA               	movlw	low STR_95
  7293  00261E  6EE6               	movwf	postinc1,c
  7294  002620  0E7E               	movlw	high STR_95
  7295  002622  6EE6               	movwf	postinc1,c
  7296  002624  EC0B  F021         	call	_printChar	;wreg free
  7297                           
  7298                           ;lab7.c: 802: delay();
  7299  002628  ECE8  F022         	call	_delay	;wreg free
  7300                           
  7301                           ;lab7.c: 803: tempPass = getTempPassword();
  7302  00262C  EC8E  F01B         	call	_getTempPassword	;wreg free
  7303  002630  C052  F016         	movff	btemp,_tempPass
  7304  002634  C053  F017         	movff	btemp+1,_tempPass+1
  7305                           
  7306                           ;lab7.c: 804: checkPassword();
  7307  002638  EC84  F021         	call	_checkPassword	;wreg free
  7308                           
  7309                           ;lab7.c: 806: while(valid !=4)
  7310  00263C  D018               	goto	l3956
  7311  00263E                     l3946:
  7312                           
  7313                           ;lab7.c: 807: {
  7314                           ;lab7.c: 808: printChar("\n\rIncorrect Passcode Entered!!");
  7315  00263E  0E6E               	movlw	low STR_96
  7316  002640  6EE6               	movwf	postinc1,c
  7317  002642  0E7D               	movlw	high STR_96
  7318  002644  6EE6               	movwf	postinc1,c
  7319  002646  EC0B  F021         	call	_printChar	;wreg free
  7320                           
  7321                           ;lab7.c: 809: delay();
  7322  00264A  ECE8  F022         	call	_delay	;wreg free
  7323                           
  7324                           ;lab7.c: 810: printChar("\n\rEnter Current Passcode:  ");
  7325  00264E  0EBA               	movlw	low STR_95
  7326  002650  6EE6               	movwf	postinc1,c
  7327  002652  0E7E               	movlw	high STR_95
  7328  002654  6EE6               	movwf	postinc1,c
  7329  002656  EC0B  F021         	call	_printChar	;wreg free
  7330                           
  7331                           ;lab7.c: 811: delay();
  7332  00265A  ECE8  F022         	call	_delay	;wreg free
  7333                           
  7334                           ;lab7.c: 812: tempPass = getTempPassword();
  7335  00265E  EC8E  F01B         	call	_getTempPassword	;wreg free
  7336  002662  C052  F016         	movff	btemp,_tempPass
  7337  002666  C053  F017         	movff	btemp+1,_tempPass+1
  7338                           
  7339                           ;lab7.c: 813: checkPassword();
  7340  00266A  EC84  F021         	call	_checkPassword	;wreg free
  7341  00266E                     l3956:
  7342  00266E  0E04               	movlw	4
  7343  002670  181A               	xorwf	_valid,w,c
  7344  002672  101B               	iorwf	_valid+1,w,c
  7345  002674  A4D8               	btfss	status,2,c
  7346  002676  D7E3               	goto	l3946
  7347                           
  7348                           ;lab7.c: 814: }
  7349                           ;lab7.c: 815: if(valid == 4)
  7350  002678  0E04               	movlw	4
  7351  00267A  181A               	xorwf	_valid,w,c
  7352  00267C  101B               	iorwf	_valid+1,w,c
  7353  00267E  A4D8               	btfss	status,2,c
  7354  002680  0012               	return	
  7355                           
  7356                           ;lab7.c: 816: {
  7357                           ;lab7.c: 817: printChar("\n\rEnter New Passcode: ");
  7358  002682  0E44               	movlw	low STR_98
  7359  002684  6EE6               	movwf	postinc1,c
  7360  002686  0E7F               	movlw	high STR_98
  7361  002688  6EE6               	movwf	postinc1,c
  7362  00268A  EC0B  F021         	call	_printChar	;wreg free
  7363                           
  7364                           ;lab7.c: 818: delay();
  7365  00268E  ECE8  F022         	call	_delay	;wreg free
  7366                           
  7367                           ;lab7.c: 819: password = getInput();
  7368  002692  ECB1  F019         	call	_getInput	;wreg free
  7369  002696  C03D  F00C         	movff	?_getInput,_password
  7370  00269A  C03E  F00D         	movff	?_getInput+1,_password+1
  7371                           
  7372                           ;lab7.c: 820: printChar("\n\r");
  7373  00269E  0EEC               	movlw	low (STR_17+36)
  7374  0026A0  6EE6               	movwf	postinc1,c
  7375  0026A2  0E7A               	movlw	high (STR_17+36)
  7376  0026A4  6EE6               	movwf	postinc1,c
  7377  0026A6  EC0B  F021         	call	_printChar	;wreg free
  7378                           
  7379                           ;lab7.c: 821: printChar("\n\rPasscode has been changed successfully.");
  7380  0026AA  0E76               	movlw	low STR_100
  7381  0026AC  6EE6               	movwf	postinc1,c
  7382  0026AE  0E7A               	movlw	high STR_100
  7383  0026B0  6EE6               	movwf	postinc1,c
  7384  0026B2  EC0B  F021         	call	_printChar	;wreg free
  7385                           
  7386                           ;lab7.c: 822: resetScreen();
  7387  0026B6  EC41  F023         	call	_resetScreen	;wreg free
  7388                           
  7389                           ;lab7.c: 823: mainMenu();
  7390  0026BA  ECB1  F011         	call	_mainMenu	;wreg free
  7391                           
  7392                           ;lab7.c: 824: }
  7393                           ;lab7.c: 825: break;
  7394  0026BE  0012               	return	
  7395  0026C0                     l3974:
  7396                           
  7397                           ;lab7.c: 828: printChar("\n\r");
  7398  0026C0  0EEC               	movlw	low (STR_17+36)
  7399  0026C2  6EE6               	movwf	postinc1,c
  7400  0026C4  0E7A               	movlw	high (STR_17+36)
  7401  0026C6  6EE6               	movwf	postinc1,c
  7402  0026C8  EC0B  F021         	call	_printChar	;wreg free
  7403                           
  7404                           ;lab7.c: 829: printChar("\n\r     Incorrect Input option selected!!!");
  7405  0026CC  0E4C               	movlw	low STR_102
  7406  0026CE  6EE6               	movwf	postinc1,c
  7407  0026D0  0E7A               	movlw	high STR_102
  7408  0026D2  6EE6               	movwf	postinc1,c
  7409  0026D4  EC0B  F021         	call	_printChar	;wreg free
  7410                           
  7411                           ;lab7.c: 830: delay();
  7412  0026D8  ECE8  F022         	call	_delay	;wreg free
  7413                           
  7414                           ;lab7.c: 831: resetScreen();
  7415  0026DC  EC41  F023         	call	_resetScreen	;wreg free
  7416                           
  7417                           ;lab7.c: 832: mainMenu();
  7418  0026E0  ECB1  F011         	call	_mainMenu	;wreg free
  7419                           
  7420                           ;lab7.c: 834: }
  7421                           
  7422                           ;lab7.c: 833: break;
  7423  0026E4  0012               	return	
  7424  0026E6                     l3984:
  7425  0026E6  501D               	movf	_option,w,c
  7426                           
  7427                           ; Switch size 1, requested type "space"
  7428                           ; Number of cases is 2, Range of values is 48 to 49
  7429                           ; switch strategies available:
  7430                           ; Name         Instructions Cycles
  7431                           ; simple_byte            7     4 (average)
  7432                           ;	Chosen strategy is simple_byte
  7433  0026E8  0A30               	xorlw	48	; case 48
  7434  0026EA  B4D8               	btfsc	status,2,c
  7435  0026EC  D778               	goto	l3926
  7436  0026EE  0A01               	xorlw	1	; case 49
  7437  0026F0  B4D8               	btfsc	status,2,c
  7438  0026F2  D77A               	goto	l3928
  7439  0026F4  D7E5               	goto	l3974
  7440  0026F6                     __end_of_passcodeMenu:
  7441                           	opt stack 0
  7442                           tblptru	equ	0xFF8
  7443                           tblptrh	equ	0xFF7
  7444                           tblptrl	equ	0xFF6
  7445                           tablat	equ	0xFF5
  7446                           intcon	equ	0xFF2
  7447                           intcon2	equ	0xFF1
  7448                           indf0	equ	0xFEF
  7449                           postinc0	equ	0xFEE
  7450                           fsr0h	equ	0xFEA
  7451                           fsr0l	equ	0xFE9
  7452                           wreg	equ	0xFE8
  7453                           postinc1	equ	0xFE6
  7454                           postdec1	equ	0xFE5
  7455                           plusw1	equ	0xFE3
  7456                           fsr1h	equ	0xFE2
  7457                           fsr1l	equ	0xFE1
  7458                           indf2	equ	0xFDF
  7459                           postinc2	equ	0xFDE
  7460                           postdec2	equ	0xFDD
  7461                           fsr2h	equ	0xFDA
  7462                           fsr2l	equ	0xFD9
  7463                           status	equ	0xFD8
  7464                           
  7465 ;; *************** function _getInput *****************
  7466 ;; Defined at:
  7467 ;;		line 1183 in file "lab7.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  i               2   24[COMRAM] int 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  2   22[COMRAM] PTR unsigned char 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7481 ;;      Params:         2       0       0       0       0       0       0
  7482 ;;      Locals:         2       0       0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0
  7484 ;;      Totals:         4       0       0       0       0       0       0
  7485 ;;Total ram usage:        4 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:   11
  7488 ;; This function calls:
  7489 ;;		_delay
  7490 ;;		_keypadOnly
  7491 ;;		_printChar
  7492 ;;		_reception
  7493 ;; This function is called by:
  7494 ;;		_passcodeMenu
  7495 ;;		_setPassword
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text19
  7500  003362                     __ptext19:
  7501                           	opt stack 0
  7502  003362                     _getInput:
  7503                           	opt stack 16
  7504                           
  7505                           ;lab7.c: 1186: int i;
  7506                           ;lab7.c: 1187: address = 0xE0;
  7507                           
  7508                           ;incstack = 0
  7509  003362  0E00               	movlw	0
  7510  003364  6E07               	movwf	_address+1,c
  7511  003366  0EE0               	movlw	224
  7512  003368  6E06               	movwf	_address,c
  7513                           
  7514                           ;lab7.c: 1189: if(status==1 && PORTBbits.RB4 == 1)
  7515  00336A  0410               	decf	_status,w,c
  7516  00336C  1011               	iorwf	_status+1,w,c
  7517  00336E  B4D8               	btfsc	status,2,c
  7518  003370  A881               	btfss	3969,4,c	;volatile
  7519  003372  D043               	goto	l3832
  7520                           
  7521                           ;lab7.c: 1190: {
  7522                           ;lab7.c: 1191: for(i=0; i<4; i++)
  7523  003374  0E00               	movlw	0
  7524  003376  6E40               	movwf	getInput@i+1,c
  7525  003378  0E00               	movlw	0
  7526  00337A  6E3F               	movwf	getInput@i,c
  7527  00337C                     l3792:
  7528  00337C  BE40               	btfsc	getInput@i+1,7,c
  7529  00337E  D006               	goto	l3796
  7530  003380  5040               	movf	getInput@i+1,w,c
  7531  003382  E136               	bnz	l3830
  7532  003384  0E04               	movlw	4
  7533  003386  5C3F               	subwf	getInput@i,w,c
  7534  003388  B0D8               	btfsc	status,0,c
  7535  00338A  D032               	goto	l3830
  7536  00338C                     l3796:
  7537                           
  7538                           ;lab7.c: 1192: {
  7539                           ;lab7.c: 1193: keypadOnly();
  7540  00338C  EC66  F01F         	call	_keypadOnly	;wreg free
  7541                           
  7542                           ;lab7.c: 1194: password[i] = keypadValue;
  7543  003390  503F               	movf	getInput@i,w,c
  7544  003392  240C               	addwf	_password,w,c
  7545  003394  6ED9               	movwf	fsr2l,c
  7546  003396  5040               	movf	getInput@i+1,w,c
  7547  003398  200D               	addwfc	_password+1,w,c
  7548  00339A  6EDA               	movwf	fsr2h,c
  7549  00339C  C01C  FFDF         	movff	_keypadValue,indf2
  7550  0033A0                     l548:
  7551  0033A0  B2A6               	btfsc	4006,1,c	;volatile
  7552  0033A2  D7FE               	goto	l548
  7553  0033A4  C006  FFA9         	movff	_address,4009	;volatile
  7554  0033A8  503F               	movf	getInput@i,w,c
  7555  0033AA  240C               	addwf	_password,w,c
  7556  0033AC  6ED9               	movwf	fsr2l,c
  7557  0033AE  5040               	movf	getInput@i+1,w,c
  7558  0033B0  200D               	addwfc	_password+1,w,c
  7559  0033B2  6EDA               	movwf	fsr2h,c
  7560  0033B4  50DF               	movf	indf2,w,c
  7561  0033B6  6EA8               	movwf	4008,c	;volatile
  7562  0033B8  90D8               	bcf	status,0,c	;volatile
  7563  0033BA  BEF2               	btfsc	intcon,7,c	;volatile
  7564  0033BC  80D8               	bsf	status,0,c	;volatile
  7565  0033BE  9EF2               	bcf	intcon,7,c	;volatile
  7566  0033C0  84A6               	bsf	4006,2,c	;volatile
  7567  0033C2  0E55               	movlw	85
  7568  0033C4  6EA7               	movwf	4007,c	;volatile
  7569  0033C6  0EAA               	movlw	170
  7570  0033C8  6EA7               	movwf	4007,c	;volatile
  7571  0033CA  82A6               	bsf	4006,1,c	;volatile
  7572  0033CC  94A6               	bcf	4006,2,c	;volatile
  7573  0033CE  B0D8               	btfsc	status,0,c	;volatile
  7574  0033D0  8EF2               	bsf	intcon,7,c	;volatile
  7575                           
  7576                           ;lab7.c: 1196: delay();
  7577  0033D2  ECE8  F022         	call	_delay	;wreg free
  7578                           
  7579                           ;lab7.c: 1197: printChar("*");
  7580  0033D6  0E0D               	movlw	low (STR_61+61)
  7581  0033D8  6EE6               	movwf	postinc1,c
  7582  0033DA  0E75               	movlw	high (STR_61+61)
  7583  0033DC  6EE6               	movwf	postinc1,c
  7584  0033DE  EC0B  F021         	call	_printChar	;wreg free
  7585                           
  7586                           ;lab7.c: 1198: address++;
  7587  0033E2  4A06               	infsnz	_address,f,c
  7588  0033E4  2A07               	incf	_address+1,f,c
  7589  0033E6  4A3F               	infsnz	getInput@i,f,c
  7590  0033E8  2A40               	incf	getInput@i+1,f,c
  7591  0033EA  D7C8               	goto	l3792
  7592  0033EC                     l3828:
  7593                           
  7594                           ;lab7.c: 1201: keypadOnly();
  7595  0033EC  EC66  F01F         	call	_keypadOnly	;wreg free
  7596  0033F0                     l3830:
  7597  0033F0  0E44               	movlw	68
  7598  0033F2  181C               	xorwf	_keypadValue,w,c
  7599  0033F4  B4D8               	btfsc	status,2,c
  7600  0033F6  D03F               	goto	l571
  7601  0033F8  D7F9               	goto	l3828
  7602  0033FA                     l3832:
  7603                           
  7604                           ;lab7.c: 1204: else
  7605                           ;lab7.c: 1205: {
  7606                           ;lab7.c: 1206: for(i=0; i<4; i++)
  7607  0033FA  0E00               	movlw	0
  7608  0033FC  6E40               	movwf	getInput@i+1,c
  7609  0033FE  0E00               	movlw	0
  7610  003400  6E3F               	movwf	getInput@i,c
  7611  003402                     l3834:
  7612  003402  BE40               	btfsc	getInput@i+1,7,c
  7613  003404  D006               	goto	l3838
  7614  003406  5040               	movf	getInput@i+1,w,c
  7615  003408  E132               	bnz	l3866
  7616  00340A  0E04               	movlw	4
  7617  00340C  5C3F               	subwf	getInput@i,w,c
  7618  00340E  B0D8               	btfsc	status,0,c
  7619  003410  D02E               	goto	l3866
  7620  003412                     l3838:
  7621                           
  7622                           ;lab7.c: 1207: {
  7623                           ;lab7.c: 1208: password[i] = reception();
  7624  003412  503F               	movf	getInput@i,w,c
  7625  003414  240C               	addwf	_password,w,c
  7626  003416  6ED9               	movwf	fsr2l,c
  7627  003418  5040               	movf	getInput@i+1,w,c
  7628  00341A  200D               	addwfc	_password+1,w,c
  7629  00341C  6EDA               	movwf	fsr2h,c
  7630  00341E  EC2B  F023         	call	_reception	;wreg free
  7631  003422  5052               	movf	btemp,w,c
  7632  003424  6EDF               	movwf	indf2,c
  7633  003426                     l561:
  7634  003426  B2A6               	btfsc	4006,1,c	;volatile
  7635  003428  D7FE               	goto	l561
  7636  00342A  C006  FFA9         	movff	_address,4009	;volatile
  7637  00342E  503F               	movf	getInput@i,w,c
  7638  003430  240C               	addwf	_password,w,c
  7639  003432  6ED9               	movwf	fsr2l,c
  7640  003434  5040               	movf	getInput@i+1,w,c
  7641  003436  200D               	addwfc	_password+1,w,c
  7642  003438  6EDA               	movwf	fsr2h,c
  7643  00343A  50DF               	movf	indf2,w,c
  7644  00343C  6EA8               	movwf	4008,c	;volatile
  7645  00343E  90D8               	bcf	status,0,c	;volatile
  7646  003440  BEF2               	btfsc	intcon,7,c	;volatile
  7647  003442  80D8               	bsf	status,0,c	;volatile
  7648  003444  9EF2               	bcf	intcon,7,c	;volatile
  7649  003446  84A6               	bsf	4006,2,c	;volatile
  7650  003448  0E55               	movlw	85
  7651  00344A  6EA7               	movwf	4007,c	;volatile
  7652  00344C  0EAA               	movlw	170
  7653  00344E  6EA7               	movwf	4007,c	;volatile
  7654  003450  82A6               	bsf	4006,1,c	;volatile
  7655  003452  94A6               	bcf	4006,2,c	;volatile
  7656  003454  B0D8               	btfsc	status,0,c	;volatile
  7657  003456  8EF2               	bsf	intcon,7,c	;volatile
  7658                           
  7659                           ;lab7.c: 1210: printChar("*");
  7660  003458  0E0D               	movlw	low (STR_61+61)
  7661  00345A  6EE6               	movwf	postinc1,c
  7662  00345C  0E75               	movlw	high (STR_61+61)
  7663  00345E  6EE6               	movwf	postinc1,c
  7664  003460  EC0B  F021         	call	_printChar	;wreg free
  7665                           
  7666                           ;lab7.c: 1211: address++;
  7667  003464  4A06               	infsnz	_address,f,c
  7668  003466  2A07               	incf	_address+1,f,c
  7669  003468  4A3F               	infsnz	getInput@i,f,c
  7670  00346A  2A40               	incf	getInput@i+1,f,c
  7671  00346C  D7CA               	goto	l3834
  7672  00346E                     l3866:
  7673  00346E  0E0D               	movlw	13
  7674  003470  18AE               	xorwf	4014,w,c	;volatile
  7675  003472  A4D8               	btfss	status,2,c
  7676  003474  D7FC               	goto	l3866
  7677  003476                     l571:
  7678  003476  B2A6               	btfsc	4006,1,c	;volatile
  7679  003478  D7FE               	goto	l571
  7680  00347A  0E05               	movlw	5
  7681  00347C  6EA9               	movwf	4009,c	;volatile
  7682  00347E  0E68               	movlw	104
  7683  003480  6EA8               	movwf	4008,c	;volatile
  7684  003482  90D8               	bcf	status,0,c	;volatile
  7685  003484  BEF2               	btfsc	intcon,7,c	;volatile
  7686  003486  80D8               	bsf	status,0,c	;volatile
  7687  003488  9EF2               	bcf	intcon,7,c	;volatile
  7688  00348A  84A6               	bsf	4006,2,c	;volatile
  7689  00348C  0E55               	movlw	85
  7690  00348E  6EA7               	movwf	4007,c	;volatile
  7691  003490  0EAA               	movlw	170
  7692  003492  6EA7               	movwf	4007,c	;volatile
  7693  003494  82A6               	bsf	4006,1,c	;volatile
  7694  003496  94A6               	bcf	4006,2,c	;volatile
  7695  003498  B0D8               	btfsc	status,0,c	;volatile
  7696  00349A  8EF2               	bsf	intcon,7,c	;volatile
  7697                           
  7698                           ;lab7.c: 1216: return password;
  7699  00349C  C00C  F03D         	movff	_password,?_getInput
  7700  0034A0  C00D  F03E         	movff	_password+1,?_getInput+1
  7701  0034A4  0012               	return	
  7702  0034A6                     __end_of_getInput:
  7703                           	opt stack 0
  7704                           tblptru	equ	0xFF8
  7705                           tblptrh	equ	0xFF7
  7706                           tblptrl	equ	0xFF6
  7707                           tablat	equ	0xFF5
  7708                           intcon	equ	0xFF2
  7709                           intcon2	equ	0xFF1
  7710                           indf0	equ	0xFEF
  7711                           postinc0	equ	0xFEE
  7712                           fsr0h	equ	0xFEA
  7713                           fsr0l	equ	0xFE9
  7714                           wreg	equ	0xFE8
  7715                           postinc1	equ	0xFE6
  7716                           postdec1	equ	0xFE5
  7717                           plusw1	equ	0xFE3
  7718                           fsr1h	equ	0xFE2
  7719                           fsr1l	equ	0xFE1
  7720                           indf2	equ	0xFDF
  7721                           postinc2	equ	0xFDE
  7722                           postdec2	equ	0xFDD
  7723                           fsr2h	equ	0xFDA
  7724                           fsr2l	equ	0xFD9
  7725                           status	equ	0xFD8
  7726                           
  7727 ;; *************** function _pirMenu *****************
  7728 ;; Defined at:
  7729 ;;		line 858 in file "lab7.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7743 ;;      Params:         0       0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   16
  7750 ;; This function calls:
  7751 ;;		_delay
  7752 ;;		_keypadOnly
  7753 ;;		_mainMenu
  7754 ;;		_printChar
  7755 ;;		_reception
  7756 ;;		_resetScreen
  7757 ;;		_settingsPIR
  7758 ;;		_write_EEPROM
  7759 ;; This function is called by:
  7760 ;;		_mainMenu
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text20
  7765  002F22                     __ptext20:
  7766                           	opt stack 0
  7767  002F22                     _pirMenu:
  7768                           	opt stack 12
  7769                           
  7770                           ;lab7.c: 860: resetScreen();
  7771                           
  7772                           ;incstack = 0
  7773  002F22  EC41  F023         	call	_resetScreen	;wreg free
  7774                           
  7775                           ;lab7.c: 861: printChar("\n\r*********************PIR Sensor Alarm *********************
      +                          **");
  7776  002F26  0E51               	movlw	low STR_108
  7777  002F28  6EE6               	movwf	postinc1,c
  7778  002F2A  0E74               	movlw	high STR_108
  7779  002F2C  6EE6               	movwf	postinc1,c
  7780  002F2E  EC0B  F021         	call	_printChar	;wreg free
  7781                           
  7782                           ;lab7.c: 862: printChar("\n\r");
  7783  002F32  0EEC               	movlw	low (STR_17+36)
  7784  002F34  6EE6               	movwf	postinc1,c
  7785  002F36  0E7A               	movlw	high (STR_17+36)
  7786  002F38  6EE6               	movwf	postinc1,c
  7787  002F3A  EC0B  F021         	call	_printChar	;wreg free
  7788                           
  7789                           ;lab7.c: 863: printChar("\n\rPlease select your option:");
  7790  002F3E  0E80               	movlw	low STR_110
  7791  002F40  6EE6               	movwf	postinc1,c
  7792  002F42  0E7E               	movlw	high STR_110
  7793  002F44  6EE6               	movwf	postinc1,c
  7794  002F46  EC0B  F021         	call	_printChar	;wreg free
  7795                           
  7796                           ;lab7.c: 864: printChar("\n\r");
  7797  002F4A  0EEC               	movlw	low (STR_17+36)
  7798  002F4C  6EE6               	movwf	postinc1,c
  7799  002F4E  0E7A               	movlw	high (STR_17+36)
  7800  002F50  6EE6               	movwf	postinc1,c
  7801  002F52  EC0B  F021         	call	_printChar	;wreg free
  7802                           
  7803                           ;lab7.c: 865: printChar("\n\r     1. Enable PIR Sensor Alarm ");
  7804  002F56  0E84               	movlw	low STR_112
  7805  002F58  6EE6               	movwf	postinc1,c
  7806  002F5A  0E7C               	movlw	high STR_112
  7807  002F5C  6EE6               	movwf	postinc1,c
  7808  002F5E  EC0B  F021         	call	_printChar	;wreg free
  7809                           
  7810                           ;lab7.c: 866: printChar("\n\r     2. Disable PIR Sensor Alarm");
  7811  002F62  0EA7               	movlw	low STR_113
  7812  002F64  6EE6               	movwf	postinc1,c
  7813  002F66  0E7C               	movlw	high STR_113
  7814  002F68  6EE6               	movwf	postinc1,c
  7815  002F6A  EC0B  F021         	call	_printChar	;wreg free
  7816                           
  7817                           ;lab7.c: 867: printChar("\n\r");
  7818  002F6E  0EEC               	movlw	low (STR_17+36)
  7819  002F70  6EE6               	movwf	postinc1,c
  7820  002F72  0E7A               	movlw	high (STR_17+36)
  7821  002F74  6EE6               	movwf	postinc1,c
  7822  002F76  EC0B  F021         	call	_printChar	;wreg free
  7823                           
  7824                           ;lab7.c: 868: printChar("\n\r     0. Return to main menu");
  7825  002F7A  0E45               	movlw	low STR_115
  7826  002F7C  6EE6               	movwf	postinc1,c
  7827  002F7E  0E7E               	movlw	high STR_115
  7828  002F80  6EE6               	movwf	postinc1,c
  7829  002F82  EC0B  F021         	call	_printChar	;wreg free
  7830                           
  7831                           ;lab7.c: 869: printChar("\n\r");
  7832  002F86  0EEC               	movlw	low (STR_17+36)
  7833  002F88  6EE6               	movwf	postinc1,c
  7834  002F8A  0E7A               	movlw	high (STR_17+36)
  7835  002F8C  6EE6               	movwf	postinc1,c
  7836  002F8E  EC0B  F021         	call	_printChar	;wreg free
  7837                           
  7838                           ;lab7.c: 870: printChar("\n\rInput Here: ");
  7839  002F92  0E2D               	movlw	low (STR_42+21)
  7840  002F94  6EE6               	movwf	postinc1,c
  7841  002F96  0E7C               	movlw	high (STR_42+21)
  7842  002F98  6EE6               	movwf	postinc1,c
  7843  002F9A  EC0B  F021         	call	_printChar	;wreg free
  7844                           
  7845                           ;lab7.c: 872: delay();
  7846  002F9E  ECE8  F022         	call	_delay	;wreg free
  7847                           
  7848                           ;lab7.c: 874: if(status==1 && PORTBbits.RB4 == 1)
  7849  002FA2  0410               	decf	_status,w,c
  7850  002FA4  1011               	iorwf	_status+1,w,c
  7851  002FA6  B4D8               	btfsc	status,2,c
  7852  002FA8  A881               	btfss	3969,4,c	;volatile
  7853  002FAA  D012               	goto	l3736
  7854                           
  7855                           ;lab7.c: 875: {
  7856                           ;lab7.c: 876: keypadOnly();
  7857  002FAC  EC66  F01F         	call	_keypadOnly	;wreg free
  7858  002FB0                     l422:
  7859  002FB0  A2AC               	btfss	4012,1,c	;volatile
  7860  002FB2  D7FE               	goto	l422
  7861                           
  7862                           ;lab7.c: 878: TXREG = keypadValue;
  7863  002FB4  C01C  FFAD         	movff	_keypadValue,4013	;volatile
  7864                           
  7865                           ;lab7.c: 879: option = keypadValue;
  7866  002FB8  C01C  F01D         	movff	_keypadValue,_option
  7867                           
  7868                           ;lab7.c: 880: delay();
  7869  002FBC  ECE8  F022         	call	_delay	;wreg free
  7870                           
  7871                           ;lab7.c: 881: while(keypadValue != 'D'){
  7872  002FC0  D002               	goto	l3734
  7873  002FC2                     l3732:
  7874                           
  7875                           ;lab7.c: 882: keypadOnly();
  7876  002FC2  EC66  F01F         	call	_keypadOnly	;wreg free
  7877  002FC6                     l3734:
  7878  002FC6  0E44               	movlw	68
  7879  002FC8  181C               	xorwf	_keypadValue,w,c
  7880  002FCA  B4D8               	btfsc	status,2,c
  7881  002FCC  D05D               	goto	l3782
  7882  002FCE  D7F9               	goto	l3732
  7883  002FD0                     l3736:
  7884                           
  7885                           ;lab7.c: 885: else
  7886                           ;lab7.c: 886: {
  7887                           ;lab7.c: 887: option = reception();
  7888  002FD0  EC2B  F023         	call	_reception	;wreg free
  7889  002FD4  5052               	movf	btemp,w,c
  7890  002FD6  6E1D               	movwf	_option,c
  7891  002FD8                     l429:
  7892  002FD8  A2AC               	btfss	4012,1,c	;volatile
  7893  002FDA  D7FE               	goto	l429
  7894                           
  7895                           ;lab7.c: 889: TXREG = option;
  7896  002FDC  C01D  FFAD         	movff	_option,4013	;volatile
  7897  002FE0                     l3738:
  7898  002FE0  0E0D               	movlw	13
  7899  002FE2  18AE               	xorwf	4014,w,c	;volatile
  7900  002FE4  B4D8               	btfsc	status,2,c
  7901  002FE6  D050               	goto	l3782
  7902  002FE8  D7FB               	goto	l3738
  7903  002FEA                     l3740:
  7904                           
  7905                           ;lab7.c: 896: write_EEPROM(PIRStatusAddress,'E');
  7906  002FEA  0E45               	movlw	69
  7907  002FEC  6EE6               	movwf	postinc1,c
  7908  002FEE  C004  FFE6         	movff	_PIRStatusAddress,postinc1
  7909  002FF2  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
  7910  002FF6  ECFD  F022         	call	_write_EEPROM	;wreg free
  7911                           
  7912                           ;lab7.c: 897: pirState = "ACTIVE";
  7913  002FFA  0EE0               	movlw	low (STR_1+2)
  7914  002FFC  6E45               	movwf	_pirState,c
  7915  002FFE  0E7F               	movlw	high (STR_1+2)
  7916  003000  6E46               	movwf	_pirState+1,c
  7917                           
  7918                           ;lab7.c: 898: settingsPIR();
  7919  003002  EC56  F023         	call	_settingsPIR	;wreg free
  7920                           
  7921                           ;lab7.c: 899: INTCONbits.INT0IE = 1;
  7922  003006  88F2               	bsf	intcon,4,c	;volatile
  7923                           
  7924                           ;lab7.c: 900: printChar("\n\rPIR Sensor has been enabled.");
  7925  003008  0EAC               	movlw	low STR_119
  7926  00300A  6EE6               	movwf	postinc1,c
  7927  00300C  0E7D               	movlw	high STR_119
  7928  00300E  6EE6               	movwf	postinc1,c
  7929  003010  EC0B  F021         	call	_printChar	;wreg free
  7930                           
  7931                           ;lab7.c: 901: delay();
  7932  003014  ECE8  F022         	call	_delay	;wreg free
  7933                           
  7934                           ;lab7.c: 902: resetScreen();
  7935  003018  EC41  F023         	call	_resetScreen	;wreg free
  7936                           
  7937                           ;lab7.c: 903: mainMenu();
  7938  00301C  ECB1  F011         	call	_mainMenu	;wreg free
  7939                           
  7940                           ;lab7.c: 904: break;
  7941  003020  0012               	return	
  7942  003022                     l3756:
  7943                           
  7944                           ;lab7.c: 907: write_EEPROM(PIRStatusAddress,'D');
  7945  003022  0E44               	movlw	68
  7946  003024  6EE6               	movwf	postinc1,c
  7947  003026  C004  FFE6         	movff	_PIRStatusAddress,postinc1
  7948  00302A  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
  7949  00302E  ECFD  F022         	call	_write_EEPROM	;wreg free
  7950                           
  7951                           ;lab7.c: 908: pirState = "INACTIVE";
  7952  003032  0EDE               	movlw	low STR_1
  7953  003034  6E45               	movwf	_pirState,c
  7954  003036  0E7F               	movlw	high STR_1
  7955  003038  6E46               	movwf	_pirState+1,c
  7956                           
  7957                           ;lab7.c: 909: INTCONbits.INT0IE = 0;
  7958  00303A  98F2               	bcf	intcon,4,c	;volatile
  7959                           
  7960                           ;lab7.c: 910: PORTBbits.RB3 =0;
  7961  00303C  9681               	bcf	3969,3,c	;volatile
  7962                           
  7963                           ;lab7.c: 911: printChar("\n\rPIR Sensor has been disabled.");
  7964  00303E  0E2E               	movlw	low STR_121
  7965  003040  6EE6               	movwf	postinc1,c
  7966  003042  0E7D               	movlw	high STR_121
  7967  003044  6EE6               	movwf	postinc1,c
  7968  003046  EC0B  F021         	call	_printChar	;wreg free
  7969                           
  7970                           ;lab7.c: 912: delay();
  7971  00304A  ECE8  F022         	call	_delay	;wreg free
  7972                           
  7973                           ;lab7.c: 913: resetScreen();
  7974  00304E  EC41  F023         	call	_resetScreen	;wreg free
  7975                           
  7976                           ;lab7.c: 914: mainMenu();
  7977  003052  ECB1  F011         	call	_mainMenu	;wreg free
  7978                           
  7979                           ;lab7.c: 915: break;
  7980  003056  0012               	return	
  7981  003058                     l3772:
  7982                           
  7983                           ;lab7.c: 918: resetScreen();
  7984  003058  EC41  F023         	call	_resetScreen	;wreg free
  7985                           
  7986                           ;lab7.c: 919: mainMenu();
  7987  00305C  ECB1  F011         	call	_mainMenu	;wreg free
  7988                           
  7989                           ;lab7.c: 920: break;
  7990  003060  0012               	return	
  7991  003062                     l3774:
  7992                           
  7993                           ;lab7.c: 923: printChar("\n\r");
  7994  003062  0EEC               	movlw	low (STR_17+36)
  7995  003064  6EE6               	movwf	postinc1,c
  7996  003066  0E7A               	movlw	high (STR_17+36)
  7997  003068  6EE6               	movwf	postinc1,c
  7998  00306A  EC0B  F021         	call	_printChar	;wreg free
  7999                           
  8000                           ;lab7.c: 924: printChar("\n\rIncorrect input option!!!");
  8001  00306E  0ED6               	movlw	low STR_123
  8002  003070  6EE6               	movwf	postinc1,c
  8003  003072  0E7E               	movlw	high STR_123
  8004  003074  6EE6               	movwf	postinc1,c
  8005  003076  EC0B  F021         	call	_printChar	;wreg free
  8006                           
  8007                           ;lab7.c: 925: delay();
  8008  00307A  ECE8  F022         	call	_delay	;wreg free
  8009                           
  8010                           ;lab7.c: 926: resetScreen();
  8011  00307E  EC41  F023         	call	_resetScreen	;wreg free
  8012                           
  8013                           ;lab7.c: 927: mainMenu();
  8014  003082  ECB1  F011         	call	_mainMenu	;wreg free
  8015                           
  8016                           ;lab7.c: 928: }
  8017  003086  0012               	return	
  8018  003088                     l3782:
  8019  003088  501D               	movf	_option,w,c
  8020                           
  8021                           ; Switch size 1, requested type "space"
  8022                           ; Number of cases is 3, Range of values is 48 to 50
  8023                           ; switch strategies available:
  8024                           ; Name         Instructions Cycles
  8025                           ; simple_byte           10     6 (average)
  8026                           ;	Chosen strategy is simple_byte
  8027  00308A  0A30               	xorlw	48	; case 48
  8028  00308C  B4D8               	btfsc	status,2,c
  8029  00308E  D7E4               	goto	l3772
  8030  003090  0A01               	xorlw	1	; case 49
  8031  003092  B4D8               	btfsc	status,2,c
  8032  003094  D7AA               	goto	l3740
  8033  003096  0A03               	xorlw	3	; case 50
  8034  003098  B4D8               	btfsc	status,2,c
  8035  00309A  D7C3               	goto	l3756
  8036  00309C  D7E2               	goto	l3774
  8037  00309E                     __end_of_pirMenu:
  8038                           	opt stack 0
  8039                           tblptru	equ	0xFF8
  8040                           tblptrh	equ	0xFF7
  8041                           tblptrl	equ	0xFF6
  8042                           tablat	equ	0xFF5
  8043                           intcon	equ	0xFF2
  8044                           intcon2	equ	0xFF1
  8045                           indf0	equ	0xFEF
  8046                           postinc0	equ	0xFEE
  8047                           fsr0h	equ	0xFEA
  8048                           fsr0l	equ	0xFE9
  8049                           wreg	equ	0xFE8
  8050                           postinc1	equ	0xFE6
  8051                           postdec1	equ	0xFE5
  8052                           plusw1	equ	0xFE3
  8053                           fsr1h	equ	0xFE2
  8054                           fsr1l	equ	0xFE1
  8055                           indf2	equ	0xFDF
  8056                           postinc2	equ	0xFDE
  8057                           postdec2	equ	0xFDD
  8058                           fsr2h	equ	0xFDA
  8059                           fsr2l	equ	0xFD9
  8060                           status	equ	0xFD8
  8061                           
  8062 ;; *************** function _settingsPIR *****************
  8063 ;; Defined at:
  8064 ;;		line 211 in file "lab7.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;		None
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1  [STACK] void 
  8071 ;; Registers used:
  8072 ;;		None
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8078 ;;      Params:         0       0       0       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0
  8081 ;;      Totals:         0       0       0       0       0       0       0
  8082 ;;Total ram usage:        0 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:   10
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_main
  8089 ;;		_My_ISR_High
  8090 ;;		_checkStatus
  8091 ;;		_pirMenu
  8092 ;; This function uses a reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text21
  8096  0046AC                     __ptext21:
  8097                           	opt stack 0
  8098  0046AC                     _settingsPIR:
  8099                           	opt stack 3
  8100                           
  8101                           ;lab7.c: 216: RCONbits.IPEN = 1;
  8102                           
  8103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  8104                           ;incstack = 0
  8105  0046AC  8ED0               	bsf	4048,7,c	;volatile
  8106                           
  8107                           ;lab7.c: 218: INTCONbits.GIE = 1;
  8108  0046AE  8EF2               	bsf	intcon,7,c	;volatile
  8109                           
  8110                           ;lab7.c: 219: INTCONbits.INT0IE = 0;
  8111  0046B0  98F2               	bcf	intcon,4,c	;volatile
  8112                           
  8113                           ;lab7.c: 220: INTCON2bits.INTEDG0 = 0;
  8114  0046B2  9CF1               	bcf	intcon2,6,c	;volatile
  8115                           
  8116                           ;lab7.c: 221: INTCONbits.INT0IF = 0;
  8117  0046B4  92F2               	bcf	intcon,1,c	;volatile
  8118                           
  8119                           ;lab7.c: 222: TRISBbits.RB2 = 0;
  8120  0046B6  9493               	bcf	3987,2,c	;volatile
  8121                           
  8122                           ;lab7.c: 223: TRISBbits.RB0 = 1;
  8123  0046B8  8093               	bsf	3987,0,c	;volatile
  8124                           
  8125                           ;lab7.c: 224: PORTBbits.RB2 = 0;
  8126  0046BA  9481               	bcf	3969,2,c	;volatile
  8127                           
  8128                           ;lab7.c: 226: TRISBbits.RB3 = 0;
  8129  0046BC  9693               	bcf	3987,3,c	;volatile
  8130                           
  8131                           ; _settingsPIR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  8132  0046BE  0012               	return		;funcret
  8133  0046C0                     __end_of_settingsPIR:
  8134                           	opt stack 0
  8135                           tblptru	equ	0xFF8
  8136                           tblptrh	equ	0xFF7
  8137                           tblptrl	equ	0xFF6
  8138                           tablat	equ	0xFF5
  8139                           intcon	equ	0xFF2
  8140                           intcon2	equ	0xFF1
  8141                           indf0	equ	0xFEF
  8142                           postinc0	equ	0xFEE
  8143                           fsr0h	equ	0xFEA
  8144                           fsr0l	equ	0xFE9
  8145                           wreg	equ	0xFE8
  8146                           postinc1	equ	0xFE6
  8147                           postdec1	equ	0xFE5
  8148                           plusw1	equ	0xFE3
  8149                           fsr1h	equ	0xFE2
  8150                           fsr1l	equ	0xFE1
  8151                           indf2	equ	0xFDF
  8152                           postinc2	equ	0xFDE
  8153                           postdec2	equ	0xFDD
  8154                           fsr2h	equ	0xFDA
  8155                           fsr2l	equ	0xFD9
  8156                           status	equ	0xFD8
  8157                           
  8158 ;; *************** function _temperatureMenu *****************
  8159 ;; Defined at:
  8160 ;;		line 931 in file "lab7.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8174 ;;      Params:         0       0       0       0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0
  8177 ;;      Totals:         0       0       0       0       0       0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:   16
  8181 ;; This function calls:
  8182 ;;		_delay
  8183 ;;		_getTempThreshold
  8184 ;;		_keypadOnly
  8185 ;;		_mainMenu
  8186 ;;		_printChar
  8187 ;;		_reception
  8188 ;;		_resetScreen
  8189 ;;		_write_EEPROM
  8190 ;; This function is called by:
  8191 ;;		_mainMenu
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text22
  8196  002D9E                     __ptext22:
  8197                           	opt stack 0
  8198  002D9E                     _temperatureMenu:
  8199                           	opt stack 12
  8200                           
  8201                           ;lab7.c: 933: resetScreen();
  8202                           
  8203                           ;incstack = 0
  8204  002D9E  EC41  F023         	call	_resetScreen	;wreg free
  8205                           
  8206                           ;lab7.c: 934: printChar("\n\r*****************Temperature Sensor Alarm *****************
      +                          **");
  8207  002DA2  0E11               	movlw	low STR_124
  8208  002DA4  6EE6               	movwf	postinc1,c
  8209  002DA6  0E74               	movlw	high STR_124
  8210  002DA8  6EE6               	movwf	postinc1,c
  8211  002DAA  EC0B  F021         	call	_printChar	;wreg free
  8212                           
  8213                           ;lab7.c: 935: printChar("\n\r");
  8214  002DAE  0EEC               	movlw	low (STR_17+36)
  8215  002DB0  6EE6               	movwf	postinc1,c
  8216  002DB2  0E7A               	movlw	high (STR_17+36)
  8217  002DB4  6EE6               	movwf	postinc1,c
  8218  002DB6  EC0B  F021         	call	_printChar	;wreg free
  8219                           
  8220                           ;lab7.c: 936: printChar("\n\rPlease select you option:");
  8221  002DBA  0EF2               	movlw	low STR_126
  8222  002DBC  6EE6               	movwf	postinc1,c
  8223  002DBE  0E7E               	movlw	high STR_126
  8224  002DC0  6EE6               	movwf	postinc1,c
  8225  002DC2  EC0B  F021         	call	_printChar	;wreg free
  8226                           
  8227                           ;lab7.c: 937: printChar("\n\r");
  8228  002DC6  0EEC               	movlw	low (STR_17+36)
  8229  002DC8  6EE6               	movwf	postinc1,c
  8230  002DCA  0E7A               	movlw	high (STR_17+36)
  8231  002DCC  6EE6               	movwf	postinc1,c
  8232  002DCE  EC0B  F021         	call	_printChar	;wreg free
  8233                           
  8234                           ;lab7.c: 938: printChar("\n\r     1. Enable Temperature Sensor Alarm ");
  8235  002DD2  0EF7               	movlw	low STR_128
  8236  002DD4  6EE6               	movwf	postinc1,c
  8237  002DD6  0E79               	movlw	high STR_128
  8238  002DD8  6EE6               	movwf	postinc1,c
  8239  002DDA  EC0B  F021         	call	_printChar	;wreg free
  8240                           
  8241                           ;lab7.c: 939: printChar("\n\r     2. Disable Temperature Alarm");
  8242  002DDE  0E60               	movlw	low STR_129
  8243  002DE0  6EE6               	movwf	postinc1,c
  8244  002DE2  0E7C               	movlw	high STR_129
  8245  002DE4  6EE6               	movwf	postinc1,c
  8246  002DE6  EC0B  F021         	call	_printChar	;wreg free
  8247                           
  8248                           ;lab7.c: 940: printChar("\n\r     3. Change Temperature alarm Threshold");
  8249  002DEA  0E46               	movlw	low STR_130
  8250  002DEC  6EE6               	movwf	postinc1,c
  8251  002DEE  0E79               	movlw	high STR_130
  8252  002DF0  6EE6               	movwf	postinc1,c
  8253  002DF2  EC0B  F021         	call	_printChar	;wreg free
  8254                           
  8255                           ;lab7.c: 941: printChar("\n\r");
  8256  002DF6  0EEC               	movlw	low (STR_17+36)
  8257  002DF8  6EE6               	movwf	postinc1,c
  8258  002DFA  0E7A               	movlw	high (STR_17+36)
  8259  002DFC  6EE6               	movwf	postinc1,c
  8260  002DFE  EC0B  F021         	call	_printChar	;wreg free
  8261                           
  8262                           ;lab7.c: 942: printChar("\n\r     0. Return to main menu");
  8263  002E02  0E45               	movlw	low STR_115
  8264  002E04  6EE6               	movwf	postinc1,c
  8265  002E06  0E7E               	movlw	high STR_115
  8266  002E08  6EE6               	movwf	postinc1,c
  8267  002E0A  EC0B  F021         	call	_printChar	;wreg free
  8268                           
  8269                           ;lab7.c: 943: printChar("\n\r");
  8270  002E0E  0EEC               	movlw	low (STR_17+36)
  8271  002E10  6EE6               	movwf	postinc1,c
  8272  002E12  0E7A               	movlw	high (STR_17+36)
  8273  002E14  6EE6               	movwf	postinc1,c
  8274  002E16  EC0B  F021         	call	_printChar	;wreg free
  8275                           
  8276                           ;lab7.c: 944: printChar("\n\rInput Here: ");
  8277  002E1A  0E2D               	movlw	low (STR_42+21)
  8278  002E1C  6EE6               	movwf	postinc1,c
  8279  002E1E  0E7C               	movlw	high (STR_42+21)
  8280  002E20  6EE6               	movwf	postinc1,c
  8281  002E22  EC0B  F021         	call	_printChar	;wreg free
  8282                           
  8283                           ;lab7.c: 946: delay();
  8284  002E26  ECE8  F022         	call	_delay	;wreg free
  8285                           
  8286                           ;lab7.c: 948: if(status==1 && PORTBbits.RB4 == 1)
  8287  002E2A  0410               	decf	_status,w,c
  8288  002E2C  1011               	iorwf	_status+1,w,c
  8289  002E2E  B4D8               	btfsc	status,2,c
  8290  002E30  A881               	btfss	3969,4,c	;volatile
  8291  002E32  D012               	goto	l3656
  8292                           
  8293                           ;lab7.c: 949: {
  8294                           ;lab7.c: 950: keypadOnly();
  8295  002E34  EC66  F01F         	call	_keypadOnly	;wreg free
  8296  002E38                     l445:
  8297  002E38  A2AC               	btfss	4012,1,c	;volatile
  8298  002E3A  D7FE               	goto	l445
  8299                           
  8300                           ;lab7.c: 952: TXREG = keypadValue;
  8301  002E3C  C01C  FFAD         	movff	_keypadValue,4013	;volatile
  8302                           
  8303                           ;lab7.c: 953: option = keypadValue;
  8304  002E40  C01C  F01D         	movff	_keypadValue,_option
  8305                           
  8306                           ;lab7.c: 954: delay();
  8307  002E44  ECE8  F022         	call	_delay	;wreg free
  8308                           
  8309                           ;lab7.c: 955: while(keypadValue != 'D'){
  8310  002E48  D002               	goto	l3654
  8311  002E4A                     l3652:
  8312                           
  8313                           ;lab7.c: 956: keypadOnly();
  8314  002E4A  EC66  F01F         	call	_keypadOnly	;wreg free
  8315  002E4E                     l3654:
  8316  002E4E  0E44               	movlw	68
  8317  002E50  181C               	xorwf	_keypadValue,w,c
  8318  002E52  B4D8               	btfsc	status,2,c
  8319  002E54  D053               	goto	l3696
  8320  002E56  D7F9               	goto	l3652
  8321  002E58                     l3656:
  8322                           
  8323                           ;lab7.c: 959: else
  8324                           ;lab7.c: 960: {
  8325                           ;lab7.c: 961: option = reception();
  8326  002E58  EC2B  F023         	call	_reception	;wreg free
  8327  002E5C  5052               	movf	btemp,w,c
  8328  002E5E  6E1D               	movwf	_option,c
  8329  002E60                     l452:
  8330  002E60  A2AC               	btfss	4012,1,c	;volatile
  8331  002E62  D7FE               	goto	l452
  8332                           
  8333                           ;lab7.c: 963: TXREG = option;
  8334  002E64  C01D  FFAD         	movff	_option,4013	;volatile
  8335  002E68                     l3658:
  8336  002E68  0E0D               	movlw	13
  8337  002E6A  18AE               	xorwf	4014,w,c	;volatile
  8338  002E6C  B4D8               	btfsc	status,2,c
  8339  002E6E  D046               	goto	l3696
  8340  002E70  D7FB               	goto	l3658
  8341  002E72                     l3660:
  8342                           
  8343                           ;lab7.c: 970: tempState = "ACTIVE";
  8344  002E72  0EE0               	movlw	low (STR_1+2)
  8345  002E74  6E47               	movwf	_tempState,c
  8346  002E76  0E7F               	movlw	high (STR_1+2)
  8347  002E78  6E48               	movwf	_tempState+1,c
  8348                           
  8349                           ;lab7.c: 971: write_EEPROM(tempStatusAddress, 'E');
  8350  002E7A  0E45               	movlw	69
  8351  002E7C  6EE6               	movwf	postinc1,c
  8352  002E7E  C049  FFE6         	movff	_tempStatusAddress,postinc1
  8353  002E82  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
  8354  002E86  ECFD  F022         	call	_write_EEPROM	;wreg free
  8355                           
  8356                           ;lab7.c: 972: T0CONbits.TMR0ON = 1;
  8357  002E8A  8ED5               	bsf	4053,7,c	;volatile
  8358                           
  8359                           ;lab7.c: 973: ADIE = 1;
  8360  002E8C  8C9D               	bsf	3997,6,c	;volatile
  8361                           
  8362                           ;lab7.c: 974: printChar("\n\rTemperature Sensor has been enabled.");
  8363  002E8E  0EEF               	movlw	low STR_136
  8364  002E90  6EE6               	movwf	postinc1,c
  8365  002E92  0E7A               	movlw	high STR_136
  8366  002E94  6EE6               	movwf	postinc1,c
  8367  002E96  EC0B  F021         	call	_printChar	;wreg free
  8368                           
  8369                           ;lab7.c: 975: delay();
  8370  002E9A  ECE8  F022         	call	_delay	;wreg free
  8371                           
  8372                           ;lab7.c: 978: break;
  8373  002E9E  D03C               	goto	l3698
  8374  002EA0                     l3672:
  8375                           
  8376                           ;lab7.c: 981: tempState = "INACTIVE";
  8377  002EA0  0EDE               	movlw	low STR_1
  8378  002EA2  6E47               	movwf	_tempState,c
  8379  002EA4  0E7F               	movlw	high STR_1
  8380  002EA6  6E48               	movwf	_tempState+1,c
  8381                           
  8382                           ;lab7.c: 982: write_EEPROM(tempStatusAddress, 'D');
  8383  002EA8  0E44               	movlw	68
  8384  002EAA  6EE6               	movwf	postinc1,c
  8385  002EAC  C049  FFE6         	movff	_tempStatusAddress,postinc1
  8386  002EB0  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
  8387  002EB4  ECFD  F022         	call	_write_EEPROM	;wreg free
  8388                           
  8389                           ;lab7.c: 983: T0CONbits.TMR0ON = 0;
  8390  002EB8  9ED5               	bcf	4053,7,c	;volatile
  8391                           
  8392                           ;lab7.c: 984: PIE1bits.ADIE = 0;
  8393  002EBA  9C9D               	bcf	3997,6,c	;volatile
  8394                           
  8395                           ;lab7.c: 985: PORTBbits.RB5 =0;
  8396  002EBC  9A81               	bcf	3969,5,c	;volatile
  8397                           
  8398                           ;lab7.c: 986: printChar("\n\rTemperature Sensor has been disabled.");
  8399  002EBE  0EA0               	movlw	low STR_35
  8400  002EC0  6EE6               	movwf	postinc1,c
  8401  002EC2  0E7A               	movlw	high STR_35
  8402  002EC4  6EE6               	movwf	postinc1,c
  8403  002EC6  EC0B  F021         	call	_printChar	;wreg free
  8404                           
  8405                           ;lab7.c: 987: delay();
  8406  002ECA  ECE8  F022         	call	_delay	;wreg free
  8407                           
  8408                           ;lab7.c: 990: break;
  8409  002ECE  D024               	goto	l3698
  8410  002ED0                     l3686:
  8411                           
  8412                           ;lab7.c: 993: getTempThreshold();
  8413  002ED0  EC0A  F019         	call	_getTempThreshold	;wreg free
  8414                           
  8415                           ;lab7.c: 1001: break;
  8416                           
  8417                           ;lab7.c: 998: case '0':
  8418                           
  8419                           ;lab7.c: 996: break;
  8420  002ED4  D021               	goto	l3698
  8421  002ED6                     l3688:
  8422                           
  8423                           ;lab7.c: 1004: printChar("\n\r");
  8424  002ED6  0EEC               	movlw	low (STR_17+36)
  8425  002ED8  6EE6               	movwf	postinc1,c
  8426  002EDA  0E7A               	movlw	high (STR_17+36)
  8427  002EDC  6EE6               	movwf	postinc1,c
  8428  002EDE  EC0B  F021         	call	_printChar	;wreg free
  8429                           
  8430                           ;lab7.c: 1005: printChar("\n\rIncorrect input option!!!");
  8431  002EE2  0ED6               	movlw	low STR_123
  8432  002EE4  6EE6               	movwf	postinc1,c
  8433  002EE6  0E7E               	movlw	high STR_123
  8434  002EE8  6EE6               	movwf	postinc1,c
  8435  002EEA  EC0B  F021         	call	_printChar	;wreg free
  8436                           
  8437                           ;lab7.c: 1006: delay();
  8438  002EEE  ECE8  F022         	call	_delay	;wreg free
  8439                           
  8440                           ;lab7.c: 1007: resetScreen();
  8441  002EF2  EC41  F023         	call	_resetScreen	;wreg free
  8442                           
  8443                           ;lab7.c: 1008: mainMenu();
  8444  002EF6  ECB1  F011         	call	_mainMenu	;wreg free
  8445                           
  8446                           ;lab7.c: 1009: }
  8447  002EFA  D00E               	goto	l3698
  8448  002EFC                     l3696:
  8449  002EFC  501D               	movf	_option,w,c
  8450                           
  8451                           ; Switch size 1, requested type "space"
  8452                           ; Number of cases is 4, Range of values is 48 to 51
  8453                           ; switch strategies available:
  8454                           ; Name         Instructions Cycles
  8455                           ; simple_byte           13     7 (average)
  8456                           ;	Chosen strategy is simple_byte
  8457  002EFE  0A30               	xorlw	48	; case 48
  8458  002F00  B4D8               	btfsc	status,2,c
  8459  002F02  D00A               	goto	l3698
  8460  002F04  0A01               	xorlw	1	; case 49
  8461  002F06  B4D8               	btfsc	status,2,c
  8462  002F08  D7B4               	goto	l3660
  8463  002F0A  0A03               	xorlw	3	; case 50
  8464  002F0C  B4D8               	btfsc	status,2,c
  8465  002F0E  D7C8               	goto	l3672
  8466  002F10  0A01               	xorlw	1	; case 51
  8467  002F12  B4D8               	btfsc	status,2,c
  8468  002F14  D7DD               	goto	l3686
  8469  002F16  D7DF               	goto	l3688
  8470  002F18                     l3698:
  8471                           
  8472                           ;lab7.c: 1010: resetScreen();
  8473  002F18  EC41  F023         	call	_resetScreen	;wreg free
  8474                           
  8475                           ;lab7.c: 1011: mainMenu();
  8476  002F1C  ECB1  F011         	call	_mainMenu	;wreg free
  8477  002F20  0012               	return		;funcret
  8478  002F22                     __end_of_temperatureMenu:
  8479                           	opt stack 0
  8480                           tblptru	equ	0xFF8
  8481                           tblptrh	equ	0xFF7
  8482                           tblptrl	equ	0xFF6
  8483                           tablat	equ	0xFF5
  8484                           intcon	equ	0xFF2
  8485                           intcon2	equ	0xFF1
  8486                           indf0	equ	0xFEF
  8487                           postinc0	equ	0xFEE
  8488                           fsr0h	equ	0xFEA
  8489                           fsr0l	equ	0xFE9
  8490                           wreg	equ	0xFE8
  8491                           postinc1	equ	0xFE6
  8492                           postdec1	equ	0xFE5
  8493                           plusw1	equ	0xFE3
  8494                           fsr1h	equ	0xFE2
  8495                           fsr1l	equ	0xFE1
  8496                           indf2	equ	0xFDF
  8497                           postinc2	equ	0xFDE
  8498                           postdec2	equ	0xFDD
  8499                           fsr2h	equ	0xFDA
  8500                           fsr2l	equ	0xFD9
  8501                           status	equ	0xFD8
  8502                           
  8503 ;; *************** function _fround *****************
  8504 ;; Defined at:
  8505 ;;		line 409 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  prec            1  [STACK] unsigned char 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  3  [STACK] unsigned char 
  8512 ;; Registers used:
  8513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8519 ;;      Params:         0       0       0       0       0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0
  8522 ;;      Totals:         0       0       0       0       0       0       0
  8523 ;;Total ram usage:        0 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:   12
  8526 ;; This function calls:
  8527 ;;		___ftmul
  8528 ;;		___lbdiv
  8529 ;;		___lbmod
  8530 ;; This function is called by:
  8531 ;;		_sprintf
  8532 ;; This function uses a reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text23
  8536  0028B6                     __ptext23:
  8537                           	opt stack 0
  8538  0028B6                     _fround:
  8539                           	opt stack 5
  8540                           
  8541                           ;doprnt.c: 413: if(prec>=110)
  8542                           ;stkvar	fround@prec @ sp[(0)+-1]
  8543                           
  8544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8545                           ;incstack = 0
  8546  0028B6  0EFF               	movlw	-1
  8547  0028B8  CFE3 F052          	movff	plusw1,btemp
  8548  0028BC  0E6D               	movlw	109
  8549  0028BE  6452               	cpfsgt	btemp,c
  8550  0028C0  D06F               	goto	l2284
  8551                           
  8552                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8553  0028C2  0E00               	movlw	0
  8554  0028C4  6EE6               	movwf	postinc1,c
  8555  0028C6  0E00               	movlw	0
  8556  0028C8  6EE6               	movwf	postinc1,c
  8557  0028CA  0E3F               	movlw	63
  8558  0028CC  6EE6               	movwf	postinc1,c
  8559  0028CE  0E0A               	movlw	10
  8560  0028D0  6EE6               	movwf	postinc1,c
  8561                           
  8562                           ;stkvar	fround@prec @ sp[(-4)+-1]
  8563  0028D2  0EFB               	movlw	-5
  8564  0028D4  50E3               	movf	plusw1,w,c
  8565  0028D6  6EE6               	movwf	postinc1,c
  8566  0028D8  EC01  F020         	call	___lbmod	;wreg free
  8567  0028DC  5052               	movf	btemp,w,c
  8568  0028DE  0D03               	mullw	3
  8569  0028E0  0E3B               	movlw	low __npowers_
  8570  0028E2  24F3               	addwf	prodl,w,c
  8571  0028E4  6EF6               	movwf	tblptrl,c
  8572  0028E6  0E73               	movlw	high __npowers_
  8573  0028E8  20F4               	addwfc	prodh,w,c
  8574  0028EA  6EF7               	movwf	tblptrh,c
  8575  0028EC                     	if	0	;There are less than 3 active tblptr bytes
  8576  0028EC                     	endif
  8577  0028EC  0009               	tblrd		*+
  8578  0028EE  CFF5 FFE6          	movff	tablat,postinc1
  8579  0028F2  0009               	tblrd		*+
  8580  0028F4  CFF5 FFE6          	movff	tablat,postinc1
  8581  0028F8  0009               	tblrd		*+
  8582  0028FA  CFF5 FFE6          	movff	tablat,postinc1
  8583  0028FE  0E0A               	movlw	10
  8584  002900  6EE6               	movwf	postinc1,c
  8585  002902  0E64               	movlw	100
  8586  002904  6EE6               	movwf	postinc1,c
  8587                           
  8588                           ;stkvar	fround@prec @ sp[(-8)+-1]
  8589  002906  0EF7               	movlw	-9
  8590  002908  50E3               	movf	plusw1,w,c
  8591  00290A  6EE6               	movwf	postinc1,c
  8592  00290C  EC01  F020         	call	___lbmod	;wreg free
  8593  002910  5052               	movf	btemp,w,c
  8594  002912  6EE6               	movwf	postinc1,c
  8595  002914  ECB9  F01E         	call	___lbdiv	;wreg free
  8596  002918  5052               	movf	btemp,w,c
  8597  00291A  0D03               	mullw	3
  8598  00291C  0E1B               	movlw	27
  8599  00291E  26F3               	addwf	prodl,f,c
  8600  002920  0E00               	movlw	0
  8601  002922  22F4               	addwfc	prodh,f,c
  8602  002924  0E3B               	movlw	low __npowers_
  8603  002926  24F3               	addwf	prodl,w,c
  8604  002928  6EF6               	movwf	tblptrl,c
  8605  00292A  0E73               	movlw	high __npowers_
  8606  00292C  20F4               	addwfc	prodh,w,c
  8607  00292E  6EF7               	movwf	tblptrh,c
  8608  002930                     	if	0	;There are less than 3 active tblptr bytes
  8609  002930                     	endif
  8610  002930  0009               	tblrd		*+
  8611  002932  CFF5 FFE6          	movff	tablat,postinc1
  8612  002936  0009               	tblrd		*+
  8613  002938  CFF5 FFE6          	movff	tablat,postinc1
  8614  00293C  0009               	tblrd		*+
  8615  00293E  CFF5 FFE6          	movff	tablat,postinc1
  8616  002942  0E64               	movlw	100
  8617  002944  6EE6               	movwf	postinc1,c
  8618                           
  8619                           ;stkvar	fround@prec @ sp[(-10)+-1]
  8620  002946  0EF5               	movlw	-11
  8621  002948  50E3               	movf	plusw1,w,c
  8622  00294A  6EE6               	movwf	postinc1,c
  8623  00294C  ECB9  F01E         	call	___lbdiv	;wreg free
  8624  002950  5052               	movf	btemp,w,c
  8625  002952  0D03               	mullw	3
  8626  002954  0E36               	movlw	54
  8627  002956  26F3               	addwf	prodl,f,c
  8628  002958  0E00               	movlw	0
  8629  00295A  22F4               	addwfc	prodh,f,c
  8630  00295C  0E3B               	movlw	low __npowers_
  8631  00295E  24F3               	addwf	prodl,w,c
  8632  002960  6EF6               	movwf	tblptrl,c
  8633  002962  0E73               	movlw	high __npowers_
  8634  002964  20F4               	addwfc	prodh,w,c
  8635  002966  6EF7               	movwf	tblptrh,c
  8636  002968                     	if	0	;There are less than 3 active tblptr bytes
  8637  002968                     	endif
  8638  002968  0009               	tblrd		*+
  8639  00296A  CFF5 FFE6          	movff	tablat,postinc1
  8640  00296E  0009               	tblrd		*+
  8641  002970  CFF5 FFE6          	movff	tablat,postinc1
  8642  002974  0009               	tblrd		*+
  8643  002976  CFF5 FFE6          	movff	tablat,postinc1
  8644  00297A  ECB6  F00E         	call	___ftmul	;wreg free
  8645  00297E  C052  FFE6         	movff	btemp,postinc1
  8646  002982  C053  FFE6         	movff	btemp+1,postinc1
  8647  002986  C054  FFE6         	movff	btemp+2,postinc1
  8648  00298A  ECB6  F00E         	call	___ftmul	;wreg free
  8649  00298E  C052  FFE6         	movff	btemp,postinc1
  8650  002992  C053  FFE6         	movff	btemp+1,postinc1
  8651  002996  C054  FFE6         	movff	btemp+2,postinc1
  8652  00299A  ECB6  F00E         	call	___ftmul	;wreg free
  8653  00299E  D065               	goto	l633
  8654  0029A0                     l2284:
  8655                           
  8656                           ;doprnt.c: 415: else if(prec > 10)
  8657                           ;stkvar	fround@prec @ sp[(0)+-1]
  8658  0029A0  0EFF               	movlw	-1
  8659  0029A2  CFE3 F052          	movff	plusw1,btemp
  8660  0029A6  0E0A               	movlw	10
  8661  0029A8  6452               	cpfsgt	btemp,c
  8662  0029AA  D045               	goto	l2290
  8663                           
  8664                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8665  0029AC  0E00               	movlw	0
  8666  0029AE  6EE6               	movwf	postinc1,c
  8667  0029B0  0E00               	movlw	0
  8668  0029B2  6EE6               	movwf	postinc1,c
  8669  0029B4  0E3F               	movlw	63
  8670  0029B6  6EE6               	movwf	postinc1,c
  8671  0029B8  0E0A               	movlw	10
  8672  0029BA  6EE6               	movwf	postinc1,c
  8673                           
  8674                           ;stkvar	fround@prec @ sp[(-4)+-1]
  8675  0029BC  0EFB               	movlw	-5
  8676  0029BE  50E3               	movf	plusw1,w,c
  8677  0029C0  6EE6               	movwf	postinc1,c
  8678  0029C2  EC01  F020         	call	___lbmod	;wreg free
  8679  0029C6  5052               	movf	btemp,w,c
  8680  0029C8  0D03               	mullw	3
  8681  0029CA  0E3B               	movlw	low __npowers_
  8682  0029CC  24F3               	addwf	prodl,w,c
  8683  0029CE  6EF6               	movwf	tblptrl,c
  8684  0029D0  0E73               	movlw	high __npowers_
  8685  0029D2  20F4               	addwfc	prodh,w,c
  8686  0029D4  6EF7               	movwf	tblptrh,c
  8687  0029D6                     	if	0	;There are less than 3 active tblptr bytes
  8688  0029D6                     	endif
  8689  0029D6  0009               	tblrd		*+
  8690  0029D8  CFF5 FFE6          	movff	tablat,postinc1
  8691  0029DC  0009               	tblrd		*+
  8692  0029DE  CFF5 FFE6          	movff	tablat,postinc1
  8693  0029E2  0009               	tblrd		*+
  8694  0029E4  CFF5 FFE6          	movff	tablat,postinc1
  8695  0029E8  0E0A               	movlw	10
  8696  0029EA  6EE6               	movwf	postinc1,c
  8697                           
  8698                           ;stkvar	fround@prec @ sp[(-7)+-1]
  8699  0029EC  0EF8               	movlw	-8
  8700  0029EE  50E3               	movf	plusw1,w,c
  8701  0029F0  6EE6               	movwf	postinc1,c
  8702  0029F2  ECB9  F01E         	call	___lbdiv	;wreg free
  8703  0029F6  5052               	movf	btemp,w,c
  8704  0029F8  0D03               	mullw	3
  8705  0029FA  0E1B               	movlw	27
  8706  0029FC  26F3               	addwf	prodl,f,c
  8707  0029FE  0E00               	movlw	0
  8708  002A00  22F4               	addwfc	prodh,f,c
  8709  002A02  0E3B               	movlw	low __npowers_
  8710  002A04  24F3               	addwf	prodl,w,c
  8711  002A06  6EF6               	movwf	tblptrl,c
  8712  002A08  0E73               	movlw	high __npowers_
  8713  002A0A  20F4               	addwfc	prodh,w,c
  8714  002A0C  6EF7               	movwf	tblptrh,c
  8715  002A0E                     	if	0	;There are less than 3 active tblptr bytes
  8716  002A0E                     	endif
  8717  002A0E  0009               	tblrd		*+
  8718  002A10  CFF5 FFE6          	movff	tablat,postinc1
  8719  002A14  0009               	tblrd		*+
  8720  002A16  CFF5 FFE6          	movff	tablat,postinc1
  8721  002A1A  0009               	tblrd		*+
  8722  002A1C  CFF5 FFE6          	movff	tablat,postinc1
  8723  002A20  ECB6  F00E         	call	___ftmul	;wreg free
  8724  002A24  C052  FFE6         	movff	btemp,postinc1
  8725  002A28  C053  FFE6         	movff	btemp+1,postinc1
  8726  002A2C  C054  FFE6         	movff	btemp+2,postinc1
  8727  002A30  ECB6  F00E         	call	___ftmul	;wreg free
  8728  002A34  D01A               	goto	l633
  8729  002A36                     l2290:
  8730                           
  8731                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8732  002A36  0E00               	movlw	0
  8733  002A38  6EE6               	movwf	postinc1,c
  8734  002A3A  0E00               	movlw	0
  8735  002A3C  6EE6               	movwf	postinc1,c
  8736  002A3E  0E3F               	movlw	63
  8737  002A40  6EE6               	movwf	postinc1,c
  8738                           
  8739                           ;stkvar	fround@prec @ sp[(-3)+-1]
  8740  002A42  0EFC               	movlw	-4
  8741  002A44  50E3               	movf	plusw1,w,c
  8742  002A46  0D03               	mullw	3
  8743  002A48  0E3B               	movlw	low __npowers_
  8744  002A4A  24F3               	addwf	prodl,w,c
  8745  002A4C  6EF6               	movwf	tblptrl,c
  8746  002A4E  0E73               	movlw	high __npowers_
  8747  002A50  20F4               	addwfc	prodh,w,c
  8748  002A52  6EF7               	movwf	tblptrh,c
  8749  002A54                     	if	0	;There are less than 3 active tblptr bytes
  8750  002A54                     	endif
  8751  002A54  0009               	tblrd		*+
  8752  002A56  CFF5 FFE6          	movff	tablat,postinc1
  8753  002A5A  0009               	tblrd		*+
  8754  002A5C  CFF5 FFE6          	movff	tablat,postinc1
  8755  002A60  0009               	tblrd		*+
  8756  002A62  CFF5 FFE6          	movff	tablat,postinc1
  8757  002A66  ECB6  F00E         	call	___ftmul	;wreg free
  8758  002A6A                     l633:
  8759                           
  8760                           ; _fround: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsiz
      +                          e = 1, vargsize = 0
  8761  002A6A  52E5               	movf	postdec1,f,c
  8762  002A6C  0012               	return		;funcret
  8763  002A6E                     __end_of_fround:
  8764                           	opt stack 0
  8765                           tblptru	equ	0xFF8
  8766                           tblptrh	equ	0xFF7
  8767                           tblptrl	equ	0xFF6
  8768                           tablat	equ	0xFF5
  8769                           prodh	equ	0xFF4
  8770                           prodl	equ	0xFF3
  8771                           intcon	equ	0xFF2
  8772                           intcon2	equ	0xFF1
  8773                           indf0	equ	0xFEF
  8774                           postinc0	equ	0xFEE
  8775                           fsr0h	equ	0xFEA
  8776                           fsr0l	equ	0xFE9
  8777                           wreg	equ	0xFE8
  8778                           postinc1	equ	0xFE6
  8779                           postdec1	equ	0xFE5
  8780                           plusw1	equ	0xFE3
  8781                           fsr1h	equ	0xFE2
  8782                           fsr1l	equ	0xFE1
  8783                           indf2	equ	0xFDF
  8784                           postinc2	equ	0xFDE
  8785                           postdec2	equ	0xFDD
  8786                           fsr2h	equ	0xFDA
  8787                           fsr2l	equ	0xFD9
  8788                           status	equ	0xFD8
  8789                           
  8790 ;; *************** function ___lbmod *****************
  8791 ;; Defined at:
  8792 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  dividend        1  [STACK] unsigned char 
  8795 ;;  divisor         1  [STACK] unsigned char 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  rem             1  [STACK] unsigned char 
  8798 ;;  counter         1  [STACK] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1  [STACK] unsigned char 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8808 ;;      Params:         0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:   10
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_fround
  8819 ;; This function uses a reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text24
  8823  004002                     __ptext24:
  8824                           	opt stack 0
  8825  004002                     ___lbmod:
  8826                           	opt stack 0
  8827                           
  8828                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  8829  004002  52E6               	movf	postinc1,f,c
  8830  004004  52E6               	movf	postinc1,f,c
  8831                           
  8832                           ;stkvar	___lbmod@counter @ sp[(-2)+1]
  8833                           
  8834                           ;incstack = 0
  8835  004006  0EFF               	movlw	-1
  8836  004008  6AE3               	clrf	plusw1,c
  8837  00400A  86E3               	bsf	plusw1,3,c
  8838                           
  8839                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  8840  00400C  0EFE               	movlw	-2
  8841  00400E  6AE3               	clrf	plusw1,c
  8842  004010                     l2066:
  8843                           
  8844                           ;stkvar	___lbmod@dividend @ sp[(-2)+-1]
  8845  004010  0EFD               	movlw	-3
  8846  004012  CFE3 F05D          	movff	plusw1,btemp+11
  8847                           
  8848                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  8849  004016  0EFE               	movlw	-2
  8850  004018  CFE3 F05C          	movff	plusw1,btemp+10
  8851  00401C  90D8               	bcf	status,0,c
  8852  00401E  345D               	rlcf	btemp+11,w,c
  8853  004020  345C               	rlcf	btemp+10,w,c
  8854  004022  6E5D               	movwf	btemp+11,c
  8855                           
  8856                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  8857  004024  0EFE               	movlw	-2
  8858  004026  C05D  FFE3         	movff	btemp+11,plusw1
  8859                           
  8860                           ;stkvar	___lbmod@dividend @ sp[(-2)+-1]
  8861  00402A  50E1               	movf	fsr1l,w,c
  8862  00402C  0FFD               	addlw	-3
  8863  00402E  6ED9               	movwf	fsr2l,c
  8864  004030  50E2               	movf	fsr1h,w,c
  8865  004032  6EDA               	movwf	fsr2h,c
  8866  004034  0EFF               	movlw	255
  8867  004036  22DA               	addwfc	fsr2h,f,c
  8868  004038  90D8               	bcf	status,0,c
  8869  00403A  36DF               	rlcf	indf2,f,c
  8870                           
  8871                           ;stkvar	___lbmod@divisor @ sp[(-2)+-2]
  8872                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  8873  00403C  50E1               	movf	fsr1l,w,c
  8874  00403E  0FFE               	addlw	-2
  8875  004040  6ED9               	movwf	fsr2l,c
  8876  004042  50E2               	movf	fsr1h,w,c
  8877  004044  6EDA               	movwf	fsr2h,c
  8878  004046  0EFF               	movlw	255
  8879  004048  22DA               	addwfc	fsr2h,f,c
  8880  00404A  0EFC               	movlw	-4
  8881  00404C  50E3               	movf	plusw1,w,c
  8882  00404E  5CDE               	subwf	postinc2,w,c
  8883  004050  A0D8               	btfss	status,0,c
  8884  004052  D00C               	goto	l2074
  8885                           
  8886                           ;stkvar	___lbmod@divisor @ sp[(-2)+-2]
  8887  004054  0EFC               	movlw	-4
  8888  004056  CFE3 F05D          	movff	plusw1,btemp+11
  8889                           
  8890                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  8891  00405A  50E1               	movf	fsr1l,w,c
  8892  00405C  0FFE               	addlw	-2
  8893  00405E  6ED9               	movwf	fsr2l,c
  8894  004060  50E2               	movf	fsr1h,w,c
  8895  004062  6EDA               	movwf	fsr2h,c
  8896  004064  0EFF               	movlw	255
  8897  004066  22DA               	addwfc	fsr2h,f,c
  8898  004068  505D               	movf	btemp+11,w,c
  8899  00406A  5EDF               	subwf	indf2,f,c
  8900  00406C                     l2074:
  8901                           
  8902                           ;stkvar	___lbmod@counter @ sp[(-2)+1]
  8903  00406C  0EFF               	movlw	-1
  8904  00406E  50E3               	movf	plusw1,w,c
  8905  004070  6E52               	movwf	btemp,c
  8906  004072  0E01               	movlw	1
  8907  004074  5E52               	subwf	btemp,f,c
  8908  004076  0EFF               	movlw	-1
  8909  004078  C052  FFE3         	movff	btemp,plusw1
  8910  00407C  A4D8               	btfss	status,2,c
  8911  00407E  D7C8               	goto	l2066
  8912                           
  8913                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  8914  004080  0EFE               	movlw	-2
  8915  004082  CFE3 F052          	movff	plusw1,btemp
  8916                           
  8917                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8918  004086  52E5               	movf	postdec1,f,c
  8919  004088  52E5               	movf	postdec1,f,c
  8920  00408A  52E5               	movf	postdec1,f,c
  8921  00408C  52E5               	movf	postdec1,f,c
  8922  00408E  0012               	return		;funcret
  8923  004090                     __end_of___lbmod:
  8924                           	opt stack 0
  8925                           tblptru	equ	0xFF8
  8926                           tblptrh	equ	0xFF7
  8927                           tblptrl	equ	0xFF6
  8928                           tablat	equ	0xFF5
  8929                           prodh	equ	0xFF4
  8930                           prodl	equ	0xFF3
  8931                           intcon	equ	0xFF2
  8932                           intcon2	equ	0xFF1
  8933                           indf0	equ	0xFEF
  8934                           postinc0	equ	0xFEE
  8935                           fsr0h	equ	0xFEA
  8936                           fsr0l	equ	0xFE9
  8937                           wreg	equ	0xFE8
  8938                           postinc1	equ	0xFE6
  8939                           postdec1	equ	0xFE5
  8940                           plusw1	equ	0xFE3
  8941                           fsr1h	equ	0xFE2
  8942                           fsr1l	equ	0xFE1
  8943                           indf2	equ	0xFDF
  8944                           postinc2	equ	0xFDE
  8945                           postdec2	equ	0xFDD
  8946                           fsr2h	equ	0xFDA
  8947                           fsr2l	equ	0xFD9
  8948                           status	equ	0xFD8
  8949                           
  8950 ;; *************** function ___lbdiv *****************
  8951 ;; Defined at:
  8952 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbdiv.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  dividend        1  [STACK] unsigned char 
  8955 ;;  divisor         1  [STACK] unsigned char 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  quotient        1  [STACK] unsigned char 
  8958 ;;  counter         1  [STACK] unsigned char 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1  [STACK] unsigned char 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8968 ;;      Params:         0       0       0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0
  8971 ;;      Totals:         0       0       0       0       0       0       0
  8972 ;;Total ram usage:        0 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:   10
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_fround
  8979 ;; This function uses a reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text25
  8983  003D72                     __ptext25:
  8984                           	opt stack 0
  8985  003D72                     ___lbdiv:
  8986                           	opt stack 0
  8987                           
  8988                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  8989  003D72  52E6               	movf	postinc1,f,c
  8990  003D74  52E6               	movf	postinc1,f,c
  8991                           
  8992                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  8993                           
  8994                           ;incstack = 0
  8995  003D76  0EFE               	movlw	-2
  8996  003D78  6AE3               	clrf	plusw1,c
  8997                           
  8998                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  8999  003D7A  0EFC               	movlw	-4
  9000  003D7C  50E3               	movf	plusw1,w,c
  9001  003D7E  B4D8               	btfsc	status,2,c
  9002  003D80  D047               	goto	l2058
  9003                           
  9004                           ;stkvar	___lbdiv@counter @ sp[(-2)+1]
  9005  003D82  0EFF               	movlw	-1
  9006  003D84  6AE3               	clrf	plusw1,c
  9007  003D86  D00A               	goto	L18
  9008  003D88                     l2040:
  9009                           
  9010                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  9011  003D88  50E1               	movf	fsr1l,w,c
  9012  003D8A  0FFC               	addlw	-4
  9013  003D8C  6ED9               	movwf	fsr2l,c
  9014  003D8E  50E2               	movf	fsr1h,w,c
  9015  003D90  6EDA               	movwf	fsr2h,c
  9016  003D92  0EFF               	movlw	255
  9017  003D94  22DA               	addwfc	fsr2h,f,c
  9018  003D96  90D8               	bcf	status,0,c
  9019  003D98  36DF               	rlcf	indf2,f,c
  9020                           
  9021                           ;stkvar	___lbdiv@counter @ sp[(-2)+1]
  9022  003D9A  0EFF               	movlw	-1
  9023  003D9C                     L18:
  9024  003D9C  2AE3               	incf	plusw1,f,c
  9025                           
  9026                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  9027  003D9E  0EFC               	movlw	-4
  9028  003DA0  AEE3               	btfss	plusw1,7,c
  9029  003DA2  D7F2               	goto	l2040
  9030  003DA4                     l2046:
  9031                           
  9032                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  9033  003DA4  50E1               	movf	fsr1l,w,c
  9034  003DA6  0FFE               	addlw	-2
  9035  003DA8  6ED9               	movwf	fsr2l,c
  9036  003DAA  50E2               	movf	fsr1h,w,c
  9037  003DAC  6EDA               	movwf	fsr2h,c
  9038  003DAE  0EFF               	movlw	255
  9039  003DB0  22DA               	addwfc	fsr2h,f,c
  9040  003DB2  90D8               	bcf	status,0,c
  9041  003DB4  36DF               	rlcf	indf2,f,c
  9042                           
  9043                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  9044                           ;stkvar	___lbdiv@dividend @ sp[(-2)+-1]
  9045  003DB6  50E1               	movf	fsr1l,w,c
  9046  003DB8  0FFD               	addlw	-3
  9047  003DBA  6ED9               	movwf	fsr2l,c
  9048  003DBC  50E2               	movf	fsr1h,w,c
  9049  003DBE  6EDA               	movwf	fsr2h,c
  9050  003DC0  0EFF               	movlw	255
  9051  003DC2  22DA               	addwfc	fsr2h,f,c
  9052  003DC4  0EFC               	movlw	-4
  9053  003DC6  50E3               	movf	plusw1,w,c
  9054  003DC8  5CDE               	subwf	postinc2,w,c
  9055  003DCA  A0D8               	btfss	status,0,c
  9056  003DCC  D00E               	goto	l2054
  9057                           
  9058                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  9059  003DCE  0EFC               	movlw	-4
  9060  003DD0  CFE3 F05D          	movff	plusw1,btemp+11
  9061                           
  9062                           ;stkvar	___lbdiv@dividend @ sp[(-2)+-1]
  9063  003DD4  50E1               	movf	fsr1l,w,c
  9064  003DD6  0FFD               	addlw	-3
  9065  003DD8  6ED9               	movwf	fsr2l,c
  9066  003DDA  50E2               	movf	fsr1h,w,c
  9067  003DDC  6EDA               	movwf	fsr2h,c
  9068  003DDE  0EFF               	movlw	255
  9069  003DE0  22DA               	addwfc	fsr2h,f,c
  9070  003DE2  505D               	movf	btemp+11,w,c
  9071  003DE4  5EDF               	subwf	indf2,f,c
  9072                           
  9073                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  9074  003DE6  0EFE               	movlw	-2
  9075  003DE8  80E3               	bsf	plusw1,0,c
  9076  003DEA                     l2054:
  9077                           
  9078                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  9079  003DEA  50E1               	movf	fsr1l,w,c
  9080  003DEC  0FFC               	addlw	-4
  9081  003DEE  6ED9               	movwf	fsr2l,c
  9082  003DF0  50E2               	movf	fsr1h,w,c
  9083  003DF2  6EDA               	movwf	fsr2h,c
  9084  003DF4  0EFF               	movlw	255
  9085  003DF6  22DA               	addwfc	fsr2h,f,c
  9086  003DF8  90D8               	bcf	status,0,c
  9087  003DFA  32DF               	rrcf	indf2,f,c
  9088                           
  9089                           ;stkvar	___lbdiv@counter @ sp[(-2)+1]
  9090  003DFC  0EFF               	movlw	-1
  9091  003DFE  50E3               	movf	plusw1,w,c
  9092  003E00  6E52               	movwf	btemp,c
  9093  003E02  0E01               	movlw	1
  9094  003E04  5E52               	subwf	btemp,f,c
  9095  003E06  0EFF               	movlw	-1
  9096  003E08  C052  FFE3         	movff	btemp,plusw1
  9097  003E0C  A4D8               	btfss	status,2,c
  9098  003E0E  D7CA               	goto	l2046
  9099  003E10                     l2058:
  9100                           
  9101                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  9102  003E10  0EFE               	movlw	-2
  9103  003E12  CFE3 F052          	movff	plusw1,btemp
  9104                           
  9105                           ; ___lbdiv: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9106  003E16  52E5               	movf	postdec1,f,c
  9107  003E18  52E5               	movf	postdec1,f,c
  9108  003E1A  52E5               	movf	postdec1,f,c
  9109  003E1C  52E5               	movf	postdec1,f,c
  9110  003E1E  0012               	return		;funcret
  9111  003E20                     __end_of___lbdiv:
  9112                           	opt stack 0
  9113                           tblptru	equ	0xFF8
  9114                           tblptrh	equ	0xFF7
  9115                           tblptrl	equ	0xFF6
  9116                           tablat	equ	0xFF5
  9117                           prodh	equ	0xFF4
  9118                           prodl	equ	0xFF3
  9119                           intcon	equ	0xFF2
  9120                           intcon2	equ	0xFF1
  9121                           indf0	equ	0xFEF
  9122                           postinc0	equ	0xFEE
  9123                           fsr0h	equ	0xFEA
  9124                           fsr0l	equ	0xFE9
  9125                           wreg	equ	0xFE8
  9126                           postinc1	equ	0xFE6
  9127                           postdec1	equ	0xFE5
  9128                           plusw1	equ	0xFE3
  9129                           fsr1h	equ	0xFE2
  9130                           fsr1l	equ	0xFE1
  9131                           indf2	equ	0xFDF
  9132                           postinc2	equ	0xFDE
  9133                           postdec2	equ	0xFDD
  9134                           fsr2h	equ	0xFDA
  9135                           fsr2l	equ	0xFD9
  9136                           status	equ	0xFD8
  9137                           
  9138 ;; *************** function _scale *****************
  9139 ;; Defined at:
  9140 ;;		line 425 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  scl             1  [STACK] char 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  3  [STACK] char 
  9147 ;; Registers used:
  9148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9154 ;;      Params:         0       0       0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0
  9157 ;;      Totals:         0       0       0       0       0       0       0
  9158 ;;Total ram usage:        0 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; Hardware stack levels required when called:   12
  9161 ;; This function calls:
  9162 ;;		___awdiv
  9163 ;;		___awmod
  9164 ;;		___ftmul
  9165 ;;		___wmul
  9166 ;; This function is called by:
  9167 ;;		_sprintf
  9168 ;; This function uses a reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text26
  9172  0013C0                     __ptext26:
  9173                           	opt stack 0
  9174  0013C0                     _scale:
  9175                           	opt stack 5
  9176                           
  9177                           ;doprnt.c: 428: if(scl < 0) {
  9178                           ;stkvar	scale@scl @ sp[(0)+-1]
  9179                           
  9180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  9181                           ;incstack = 0
  9182  0013C0  0EFF               	movlw	-1
  9183  0013C2  AEE3               	btfss	plusw1,7,c
  9184  0013C4  D10C               	goto	l2316
  9185                           
  9186                           ;doprnt.c: 429: scl = -scl;
  9187                           ;stkvar	scale@scl @ sp[(0)+-1]
  9188  0013C6  0EFF               	movlw	-1
  9189  0013C8  50E3               	movf	plusw1,w,c
  9190  0013CA  0800               	sublw	0
  9191  0013CC  6E5D               	movwf	btemp+11,c
  9192                           
  9193                           ;stkvar	scale@scl @ sp[(0)+-1]
  9194  0013CE  0EFF               	movlw	-1
  9195  0013D0  C05D  FFE3         	movff	btemp+11,plusw1
  9196                           
  9197                           ;doprnt.c: 430: if(scl>=110)
  9198                           ;stkvar	scale@scl @ sp[(0)+-1]
  9199  0013D4  0EFF               	movlw	-1
  9200  0013D6  50E3               	movf	plusw1,w,c
  9201  0013D8  0A80               	xorlw	128
  9202  0013DA  0F12               	addlw	-238
  9203  0013DC  A0D8               	btfss	status,0,c
  9204  0013DE  D098               	goto	l2306
  9205                           
  9206                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9207  0013E0  0E03               	movlw	3
  9208  0013E2  6EE6               	movwf	postinc1,c
  9209  0013E4  0E00               	movlw	0
  9210  0013E6  6EE6               	movwf	postinc1,c
  9211  0013E8  0E0A               	movlw	10
  9212  0013EA  6EE6               	movwf	postinc1,c
  9213  0013EC  0E00               	movlw	0
  9214  0013EE  6EE6               	movwf	postinc1,c
  9215                           
  9216                           ;stkvar	scale@scl @ sp[(-4)+-1]
  9217  0013F0  0EFB               	movlw	-5
  9218  0013F2  50E3               	movf	plusw1,w,c
  9219  0013F4  6E53               	movwf	btemp+1,c
  9220  0013F6  6A54               	clrf	btemp+2,c
  9221  0013F8  BE53               	btfsc	btemp+1,7,c
  9222  0013FA  0654               	decf	btemp+2,f,c
  9223  0013FC  C053  FFE6         	movff	btemp+1,postinc1
  9224  001400  C054  FFE6         	movff	btemp+2,postinc1
  9225  001404  ECCE  F01D         	call	___awmod	;wreg free
  9226  001408  C052  FFE6         	movff	btemp,postinc1
  9227  00140C  C053  FFE6         	movff	btemp+1,postinc1
  9228  001410  ECB6  F01F         	call	___wmul	;wreg free
  9229  001414  0E3B               	movlw	low __npowers_
  9230  001416  2452               	addwf	btemp,w,c
  9231  001418  6EF6               	movwf	tblptrl,c
  9232  00141A  0E73               	movlw	high __npowers_
  9233  00141C  2053               	addwfc	btemp+1,w,c
  9234  00141E  6EF7               	movwf	tblptrh,c
  9235  001420                     	if	0	;There are less than 3 active tblptr bytes
  9236  001420                     	endif
  9237  001420  0009               	tblrd		*+
  9238  001422  CFF5 FFE6          	movff	tablat,postinc1
  9239  001426  0009               	tblrd		*+
  9240  001428  CFF5 FFE6          	movff	tablat,postinc1
  9241  00142C  0009               	tblrd		*+
  9242  00142E  CFF5 FFE6          	movff	tablat,postinc1
  9243  001432  0E03               	movlw	3
  9244  001434  6EE6               	movwf	postinc1,c
  9245  001436  0E00               	movlw	0
  9246  001438  6EE6               	movwf	postinc1,c
  9247  00143A  0E0A               	movlw	10
  9248  00143C  6EE6               	movwf	postinc1,c
  9249  00143E  0E00               	movlw	0
  9250  001440  6EE6               	movwf	postinc1,c
  9251  001442  0E64               	movlw	100
  9252  001444  6EE6               	movwf	postinc1,c
  9253  001446  0E00               	movlw	0
  9254  001448  6EE6               	movwf	postinc1,c
  9255                           
  9256                           ;stkvar	scale@scl @ sp[(-9)+-1]
  9257  00144A  0EF6               	movlw	-10
  9258  00144C  50E3               	movf	plusw1,w,c
  9259  00144E  6E53               	movwf	btemp+1,c
  9260  001450  6A54               	clrf	btemp+2,c
  9261  001452  BE53               	btfsc	btemp+1,7,c
  9262  001454  0654               	decf	btemp+2,f,c
  9263  001456  C053  FFE6         	movff	btemp+1,postinc1
  9264  00145A  C054  FFE6         	movff	btemp+2,postinc1
  9265  00145E  ECCE  F01D         	call	___awmod	;wreg free
  9266  001462  C052  FFE6         	movff	btemp,postinc1
  9267  001466  C053  FFE6         	movff	btemp+1,postinc1
  9268  00146A  EC28  F01C         	call	___awdiv	;wreg free
  9269  00146E  C052  FFE6         	movff	btemp,postinc1
  9270  001472  C053  FFE6         	movff	btemp+1,postinc1
  9271  001476  ECB6  F01F         	call	___wmul	;wreg free
  9272  00147A  0E1B               	movlw	27
  9273  00147C  2652               	addwf	btemp,f,c
  9274  00147E  0E00               	movlw	0
  9275  001480  2253               	addwfc	btemp+1,f,c
  9276  001482  0E3B               	movlw	low __npowers_
  9277  001484  2452               	addwf	btemp,w,c
  9278  001486  6EF6               	movwf	tblptrl,c
  9279  001488  0E73               	movlw	high __npowers_
  9280  00148A  2053               	addwfc	btemp+1,w,c
  9281  00148C  6EF7               	movwf	tblptrh,c
  9282  00148E                     	if	0	;There are less than 3 active tblptr bytes
  9283  00148E                     	endif
  9284  00148E  0009               	tblrd		*+
  9285  001490  CFF5 FFE6          	movff	tablat,postinc1
  9286  001494  0009               	tblrd		*+
  9287  001496  CFF5 FFE6          	movff	tablat,postinc1
  9288  00149A  0009               	tblrd		*+
  9289  00149C  CFF5 FFE6          	movff	tablat,postinc1
  9290  0014A0  0E03               	movlw	3
  9291  0014A2  6EE6               	movwf	postinc1,c
  9292  0014A4  0E00               	movlw	0
  9293  0014A6  6EE6               	movwf	postinc1,c
  9294  0014A8  0E64               	movlw	100
  9295  0014AA  6EE6               	movwf	postinc1,c
  9296  0014AC  0E00               	movlw	0
  9297  0014AE  6EE6               	movwf	postinc1,c
  9298                           
  9299                           ;stkvar	scale@scl @ sp[(-10)+-1]
  9300  0014B0  0EF5               	movlw	-11
  9301  0014B2  50E3               	movf	plusw1,w,c
  9302  0014B4  6E53               	movwf	btemp+1,c
  9303  0014B6  6A54               	clrf	btemp+2,c
  9304  0014B8  BE53               	btfsc	btemp+1,7,c
  9305  0014BA  0654               	decf	btemp+2,f,c
  9306  0014BC  C053  FFE6         	movff	btemp+1,postinc1
  9307  0014C0  C054  FFE6         	movff	btemp+2,postinc1
  9308  0014C4  EC28  F01C         	call	___awdiv	;wreg free
  9309  0014C8  C052  FFE6         	movff	btemp,postinc1
  9310  0014CC  C053  FFE6         	movff	btemp+1,postinc1
  9311  0014D0  ECB6  F01F         	call	___wmul	;wreg free
  9312  0014D4  0E36               	movlw	54
  9313  0014D6  2652               	addwf	btemp,f,c
  9314  0014D8  0E00               	movlw	0
  9315  0014DA  2253               	addwfc	btemp+1,f,c
  9316  0014DC  0E3B               	movlw	low __npowers_
  9317  0014DE  2452               	addwf	btemp,w,c
  9318  0014E0  6EF6               	movwf	tblptrl,c
  9319  0014E2  0E73               	movlw	high __npowers_
  9320  0014E4  2053               	addwfc	btemp+1,w,c
  9321  0014E6  6EF7               	movwf	tblptrh,c
  9322  0014E8                     	if	0	;There are less than 3 active tblptr bytes
  9323  0014E8                     	endif
  9324  0014E8  0009               	tblrd		*+
  9325  0014EA  CFF5 FFE6          	movff	tablat,postinc1
  9326  0014EE  0009               	tblrd		*+
  9327  0014F0  CFF5 FFE6          	movff	tablat,postinc1
  9328  0014F4  0009               	tblrd		*+
  9329  0014F6  CFF5 FFE6          	movff	tablat,postinc1
  9330  0014FA  ECB6  F00E         	call	___ftmul	;wreg free
  9331  0014FE  C052  FFE6         	movff	btemp,postinc1
  9332  001502  C053  FFE6         	movff	btemp+1,postinc1
  9333  001506  C054  FFE6         	movff	btemp+2,postinc1
  9334  00150A  ECB6  F00E         	call	___ftmul	;wreg free
  9335  00150E  D176               	goto	l640
  9336  001510                     l2306:
  9337                           
  9338                           ;doprnt.c: 432: else if(scl > 10)
  9339                           ;stkvar	scale@scl @ sp[(0)+-1]
  9340  001510  0EFF               	movlw	-1
  9341  001512  50E3               	movf	plusw1,w,c
  9342  001514  0A80               	xorlw	128
  9343  001516  0F75               	addlw	-139
  9344  001518  A0D8               	btfss	status,0,c
  9345  00151A  D059               	goto	l2312
  9346                           
  9347                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9348  00151C  0E03               	movlw	3
  9349  00151E  6EE6               	movwf	postinc1,c
  9350  001520  0E00               	movlw	0
  9351  001522  6EE6               	movwf	postinc1,c
  9352  001524  0E0A               	movlw	10
  9353  001526  6EE6               	movwf	postinc1,c
  9354  001528  0E00               	movlw	0
  9355  00152A  6EE6               	movwf	postinc1,c
  9356                           
  9357                           ;stkvar	scale@scl @ sp[(-4)+-1]
  9358  00152C  0EFB               	movlw	-5
  9359  00152E  50E3               	movf	plusw1,w,c
  9360  001530  6E53               	movwf	btemp+1,c
  9361  001532  6A54               	clrf	btemp+2,c
  9362  001534  BE53               	btfsc	btemp+1,7,c
  9363  001536  0654               	decf	btemp+2,f,c
  9364  001538  C053  FFE6         	movff	btemp+1,postinc1
  9365  00153C  C054  FFE6         	movff	btemp+2,postinc1
  9366  001540  ECCE  F01D         	call	___awmod	;wreg free
  9367  001544  C052  FFE6         	movff	btemp,postinc1
  9368  001548  C053  FFE6         	movff	btemp+1,postinc1
  9369  00154C  ECB6  F01F         	call	___wmul	;wreg free
  9370  001550  0E3B               	movlw	low __npowers_
  9371  001552  2452               	addwf	btemp,w,c
  9372  001554  6EF6               	movwf	tblptrl,c
  9373  001556  0E73               	movlw	high __npowers_
  9374  001558  2053               	addwfc	btemp+1,w,c
  9375  00155A  6EF7               	movwf	tblptrh,c
  9376  00155C                     	if	0	;There are less than 3 active tblptr bytes
  9377  00155C                     	endif
  9378  00155C  0009               	tblrd		*+
  9379  00155E  CFF5 FFE6          	movff	tablat,postinc1
  9380  001562  0009               	tblrd		*+
  9381  001564  CFF5 FFE6          	movff	tablat,postinc1
  9382  001568  0009               	tblrd		*+
  9383  00156A  CFF5 FFE6          	movff	tablat,postinc1
  9384  00156E  0E03               	movlw	3
  9385  001570  6EE6               	movwf	postinc1,c
  9386  001572  0E00               	movlw	0
  9387  001574  6EE6               	movwf	postinc1,c
  9388  001576  0E0A               	movlw	10
  9389  001578  6EE6               	movwf	postinc1,c
  9390  00157A  0E00               	movlw	0
  9391  00157C  6EE6               	movwf	postinc1,c
  9392                           
  9393                           ;stkvar	scale@scl @ sp[(-7)+-1]
  9394  00157E  0EF8               	movlw	-8
  9395  001580  50E3               	movf	plusw1,w,c
  9396  001582  6E53               	movwf	btemp+1,c
  9397  001584  6A54               	clrf	btemp+2,c
  9398  001586  BE53               	btfsc	btemp+1,7,c
  9399  001588  0654               	decf	btemp+2,f,c
  9400  00158A  C053  FFE6         	movff	btemp+1,postinc1
  9401  00158E  C054  FFE6         	movff	btemp+2,postinc1
  9402  001592  EC28  F01C         	call	___awdiv	;wreg free
  9403  001596  C052  FFE6         	movff	btemp,postinc1
  9404  00159A  C053  FFE6         	movff	btemp+1,postinc1
  9405  00159E  ECB6  F01F         	call	___wmul	;wreg free
  9406  0015A2  0E1B               	movlw	27
  9407  0015A4  2652               	addwf	btemp,f,c
  9408  0015A6  0E00               	movlw	0
  9409  0015A8  2253               	addwfc	btemp+1,f,c
  9410  0015AA  0E3B               	movlw	low __npowers_
  9411  0015AC  2452               	addwf	btemp,w,c
  9412  0015AE  6EF6               	movwf	tblptrl,c
  9413  0015B0  0E73               	movlw	high __npowers_
  9414  0015B2  2053               	addwfc	btemp+1,w,c
  9415  0015B4  6EF7               	movwf	tblptrh,c
  9416  0015B6                     	if	0	;There are less than 3 active tblptr bytes
  9417  0015B6                     	endif
  9418  0015B6  0009               	tblrd		*+
  9419  0015B8  CFF5 FFE6          	movff	tablat,postinc1
  9420  0015BC  0009               	tblrd		*+
  9421  0015BE  CFF5 FFE6          	movff	tablat,postinc1
  9422  0015C2  0009               	tblrd		*+
  9423  0015C4  CFF5 FFE6          	movff	tablat,postinc1
  9424  0015C8  ECB6  F00E         	call	___ftmul	;wreg free
  9425  0015CC  D117               	goto	l640
  9426  0015CE                     l2312:
  9427                           
  9428                           ;doprnt.c: 434: return _npowers_[scl];
  9429                           ;stkvar	scale@scl @ sp[(0)+-1]
  9430  0015CE  0EFF               	movlw	-1
  9431  0015D0  50E3               	movf	plusw1,w,c
  9432  0015D2  0D03               	mullw	3
  9433  0015D4  0E3B               	movlw	low __npowers_
  9434  0015D6  24F3               	addwf	prodl,w,c
  9435  0015D8  6EF6               	movwf	tblptrl,c
  9436  0015DA  0E73               	movlw	high __npowers_
  9437  0015DC  D104               	goto	L19
  9438  0015DE                     l2316:
  9439                           
  9440                           ;doprnt.c: 435: }
  9441                           ;doprnt.c: 436: if(scl>=110)
  9442                           ;stkvar	scale@scl @ sp[(0)+-1]
  9443  0015DE  0EFF               	movlw	-1
  9444  0015E0  50E3               	movf	plusw1,w,c
  9445  0015E2  0A80               	xorlw	128
  9446  0015E4  0F12               	addlw	-238
  9447  0015E6  A0D8               	btfss	status,0,c
  9448  0015E8  D098               	goto	l2324
  9449                           
  9450                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9451  0015EA  0E03               	movlw	3
  9452  0015EC  6EE6               	movwf	postinc1,c
  9453  0015EE  0E00               	movlw	0
  9454  0015F0  6EE6               	movwf	postinc1,c
  9455  0015F2  0E0A               	movlw	10
  9456  0015F4  6EE6               	movwf	postinc1,c
  9457  0015F6  0E00               	movlw	0
  9458  0015F8  6EE6               	movwf	postinc1,c
  9459                           
  9460                           ;stkvar	scale@scl @ sp[(-4)+-1]
  9461  0015FA  0EFB               	movlw	-5
  9462  0015FC  50E3               	movf	plusw1,w,c
  9463  0015FE  6E53               	movwf	btemp+1,c
  9464  001600  6A54               	clrf	btemp+2,c
  9465  001602  BE53               	btfsc	btemp+1,7,c
  9466  001604  0654               	decf	btemp+2,f,c
  9467  001606  C053  FFE6         	movff	btemp+1,postinc1
  9468  00160A  C054  FFE6         	movff	btemp+2,postinc1
  9469  00160E  ECCE  F01D         	call	___awmod	;wreg free
  9470  001612  C052  FFE6         	movff	btemp,postinc1
  9471  001616  C053  FFE6         	movff	btemp+1,postinc1
  9472  00161A  ECB6  F01F         	call	___wmul	;wreg free
  9473  00161E  0E62               	movlw	low __powers_
  9474  001620  2452               	addwf	btemp,w,c
  9475  001622  6EF6               	movwf	tblptrl,c
  9476  001624  0E73               	movlw	high __powers_
  9477  001626  2053               	addwfc	btemp+1,w,c
  9478  001628  6EF7               	movwf	tblptrh,c
  9479  00162A                     	if	0	;There are less than 3 active tblptr bytes
  9480  00162A                     	endif
  9481  00162A  0009               	tblrd		*+
  9482  00162C  CFF5 FFE6          	movff	tablat,postinc1
  9483  001630  0009               	tblrd		*+
  9484  001632  CFF5 FFE6          	movff	tablat,postinc1
  9485  001636  0009               	tblrd		*+
  9486  001638  CFF5 FFE6          	movff	tablat,postinc1
  9487  00163C  0E03               	movlw	3
  9488  00163E  6EE6               	movwf	postinc1,c
  9489  001640  0E00               	movlw	0
  9490  001642  6EE6               	movwf	postinc1,c
  9491  001644  0E0A               	movlw	10
  9492  001646  6EE6               	movwf	postinc1,c
  9493  001648  0E00               	movlw	0
  9494  00164A  6EE6               	movwf	postinc1,c
  9495  00164C  0E64               	movlw	100
  9496  00164E  6EE6               	movwf	postinc1,c
  9497  001650  0E00               	movlw	0
  9498  001652  6EE6               	movwf	postinc1,c
  9499                           
  9500                           ;stkvar	scale@scl @ sp[(-9)+-1]
  9501  001654  0EF6               	movlw	-10
  9502  001656  50E3               	movf	plusw1,w,c
  9503  001658  6E53               	movwf	btemp+1,c
  9504  00165A  6A54               	clrf	btemp+2,c
  9505  00165C  BE53               	btfsc	btemp+1,7,c
  9506  00165E  0654               	decf	btemp+2,f,c
  9507  001660  C053  FFE6         	movff	btemp+1,postinc1
  9508  001664  C054  FFE6         	movff	btemp+2,postinc1
  9509  001668  ECCE  F01D         	call	___awmod	;wreg free
  9510  00166C  C052  FFE6         	movff	btemp,postinc1
  9511  001670  C053  FFE6         	movff	btemp+1,postinc1
  9512  001674  EC28  F01C         	call	___awdiv	;wreg free
  9513  001678  C052  FFE6         	movff	btemp,postinc1
  9514  00167C  C053  FFE6         	movff	btemp+1,postinc1
  9515  001680  ECB6  F01F         	call	___wmul	;wreg free
  9516  001684  0E1B               	movlw	27
  9517  001686  2652               	addwf	btemp,f,c
  9518  001688  0E00               	movlw	0
  9519  00168A  2253               	addwfc	btemp+1,f,c
  9520  00168C  0E62               	movlw	low __powers_
  9521  00168E  2452               	addwf	btemp,w,c
  9522  001690  6EF6               	movwf	tblptrl,c
  9523  001692  0E73               	movlw	high __powers_
  9524  001694  2053               	addwfc	btemp+1,w,c
  9525  001696  6EF7               	movwf	tblptrh,c
  9526  001698                     	if	0	;There are less than 3 active tblptr bytes
  9527  001698                     	endif
  9528  001698  0009               	tblrd		*+
  9529  00169A  CFF5 FFE6          	movff	tablat,postinc1
  9530  00169E  0009               	tblrd		*+
  9531  0016A0  CFF5 FFE6          	movff	tablat,postinc1
  9532  0016A4  0009               	tblrd		*+
  9533  0016A6  CFF5 FFE6          	movff	tablat,postinc1
  9534  0016AA  0E03               	movlw	3
  9535  0016AC  6EE6               	movwf	postinc1,c
  9536  0016AE  0E00               	movlw	0
  9537  0016B0  6EE6               	movwf	postinc1,c
  9538  0016B2  0E64               	movlw	100
  9539  0016B4  6EE6               	movwf	postinc1,c
  9540  0016B6  0E00               	movlw	0
  9541  0016B8  6EE6               	movwf	postinc1,c
  9542                           
  9543                           ;stkvar	scale@scl @ sp[(-10)+-1]
  9544  0016BA  0EF5               	movlw	-11
  9545  0016BC  50E3               	movf	plusw1,w,c
  9546  0016BE  6E53               	movwf	btemp+1,c
  9547  0016C0  6A54               	clrf	btemp+2,c
  9548  0016C2  BE53               	btfsc	btemp+1,7,c
  9549  0016C4  0654               	decf	btemp+2,f,c
  9550  0016C6  C053  FFE6         	movff	btemp+1,postinc1
  9551  0016CA  C054  FFE6         	movff	btemp+2,postinc1
  9552  0016CE  EC28  F01C         	call	___awdiv	;wreg free
  9553  0016D2  C052  FFE6         	movff	btemp,postinc1
  9554  0016D6  C053  FFE6         	movff	btemp+1,postinc1
  9555  0016DA  ECB6  F01F         	call	___wmul	;wreg free
  9556  0016DE  0E36               	movlw	54
  9557  0016E0  2652               	addwf	btemp,f,c
  9558  0016E2  0E00               	movlw	0
  9559  0016E4  2253               	addwfc	btemp+1,f,c
  9560  0016E6  0E62               	movlw	low __powers_
  9561  0016E8  2452               	addwf	btemp,w,c
  9562  0016EA  6EF6               	movwf	tblptrl,c
  9563  0016EC  0E73               	movlw	high __powers_
  9564  0016EE  2053               	addwfc	btemp+1,w,c
  9565  0016F0  6EF7               	movwf	tblptrh,c
  9566  0016F2                     	if	0	;There are less than 3 active tblptr bytes
  9567  0016F2                     	endif
  9568  0016F2  0009               	tblrd		*+
  9569  0016F4  CFF5 FFE6          	movff	tablat,postinc1
  9570  0016F8  0009               	tblrd		*+
  9571  0016FA  CFF5 FFE6          	movff	tablat,postinc1
  9572  0016FE  0009               	tblrd		*+
  9573  001700  CFF5 FFE6          	movff	tablat,postinc1
  9574  001704  ECB6  F00E         	call	___ftmul	;wreg free
  9575  001708  C052  FFE6         	movff	btemp,postinc1
  9576  00170C  C053  FFE6         	movff	btemp+1,postinc1
  9577  001710  C054  FFE6         	movff	btemp+2,postinc1
  9578  001714  ECB6  F00E         	call	___ftmul	;wreg free
  9579  001718  D071               	goto	l640
  9580  00171A                     l2324:
  9581                           
  9582                           ;doprnt.c: 438: else if(scl > 10)
  9583                           ;stkvar	scale@scl @ sp[(0)+-1]
  9584  00171A  0EFF               	movlw	-1
  9585  00171C  50E3               	movf	plusw1,w,c
  9586  00171E  0A80               	xorlw	128
  9587  001720  0F75               	addlw	-139
  9588  001722  A0D8               	btfss	status,0,c
  9589  001724  D059               	goto	l2330
  9590                           
  9591                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9592  001726  0E03               	movlw	3
  9593  001728  6EE6               	movwf	postinc1,c
  9594  00172A  0E00               	movlw	0
  9595  00172C  6EE6               	movwf	postinc1,c
  9596  00172E  0E0A               	movlw	10
  9597  001730  6EE6               	movwf	postinc1,c
  9598  001732  0E00               	movlw	0
  9599  001734  6EE6               	movwf	postinc1,c
  9600                           
  9601                           ;stkvar	scale@scl @ sp[(-4)+-1]
  9602  001736  0EFB               	movlw	-5
  9603  001738  50E3               	movf	plusw1,w,c
  9604  00173A  6E53               	movwf	btemp+1,c
  9605  00173C  6A54               	clrf	btemp+2,c
  9606  00173E  BE53               	btfsc	btemp+1,7,c
  9607  001740  0654               	decf	btemp+2,f,c
  9608  001742  C053  FFE6         	movff	btemp+1,postinc1
  9609  001746  C054  FFE6         	movff	btemp+2,postinc1
  9610  00174A  ECCE  F01D         	call	___awmod	;wreg free
  9611  00174E  C052  FFE6         	movff	btemp,postinc1
  9612  001752  C053  FFE6         	movff	btemp+1,postinc1
  9613  001756  ECB6  F01F         	call	___wmul	;wreg free
  9614  00175A  0E62               	movlw	low __powers_
  9615  00175C  2452               	addwf	btemp,w,c
  9616  00175E  6EF6               	movwf	tblptrl,c
  9617  001760  0E73               	movlw	high __powers_
  9618  001762  2053               	addwfc	btemp+1,w,c
  9619  001764  6EF7               	movwf	tblptrh,c
  9620  001766                     	if	0	;There are less than 3 active tblptr bytes
  9621  001766                     	endif
  9622  001766  0009               	tblrd		*+
  9623  001768  CFF5 FFE6          	movff	tablat,postinc1
  9624  00176C  0009               	tblrd		*+
  9625  00176E  CFF5 FFE6          	movff	tablat,postinc1
  9626  001772  0009               	tblrd		*+
  9627  001774  CFF5 FFE6          	movff	tablat,postinc1
  9628  001778  0E03               	movlw	3
  9629  00177A  6EE6               	movwf	postinc1,c
  9630  00177C  0E00               	movlw	0
  9631  00177E  6EE6               	movwf	postinc1,c
  9632  001780  0E0A               	movlw	10
  9633  001782  6EE6               	movwf	postinc1,c
  9634  001784  0E00               	movlw	0
  9635  001786  6EE6               	movwf	postinc1,c
  9636                           
  9637                           ;stkvar	scale@scl @ sp[(-7)+-1]
  9638  001788  0EF8               	movlw	-8
  9639  00178A  50E3               	movf	plusw1,w,c
  9640  00178C  6E53               	movwf	btemp+1,c
  9641  00178E  6A54               	clrf	btemp+2,c
  9642  001790  BE53               	btfsc	btemp+1,7,c
  9643  001792  0654               	decf	btemp+2,f,c
  9644  001794  C053  FFE6         	movff	btemp+1,postinc1
  9645  001798  C054  FFE6         	movff	btemp+2,postinc1
  9646  00179C  EC28  F01C         	call	___awdiv	;wreg free
  9647  0017A0  C052  FFE6         	movff	btemp,postinc1
  9648  0017A4  C053  FFE6         	movff	btemp+1,postinc1
  9649  0017A8  ECB6  F01F         	call	___wmul	;wreg free
  9650  0017AC  0E1B               	movlw	27
  9651  0017AE  2652               	addwf	btemp,f,c
  9652  0017B0  0E00               	movlw	0
  9653  0017B2  2253               	addwfc	btemp+1,f,c
  9654  0017B4  0E62               	movlw	low __powers_
  9655  0017B6  2452               	addwf	btemp,w,c
  9656  0017B8  6EF6               	movwf	tblptrl,c
  9657  0017BA  0E73               	movlw	high __powers_
  9658  0017BC  2053               	addwfc	btemp+1,w,c
  9659  0017BE  6EF7               	movwf	tblptrh,c
  9660  0017C0                     	if	0	;There are less than 3 active tblptr bytes
  9661  0017C0                     	endif
  9662  0017C0  0009               	tblrd		*+
  9663  0017C2  CFF5 FFE6          	movff	tablat,postinc1
  9664  0017C6  0009               	tblrd		*+
  9665  0017C8  CFF5 FFE6          	movff	tablat,postinc1
  9666  0017CC  0009               	tblrd		*+
  9667  0017CE  CFF5 FFE6          	movff	tablat,postinc1
  9668  0017D2  ECB6  F00E         	call	___ftmul	;wreg free
  9669  0017D6  D012               	goto	l640
  9670  0017D8                     l2330:
  9671                           
  9672                           ;doprnt.c: 440: return _powers_[scl];
  9673                           ;stkvar	scale@scl @ sp[(0)+-1]
  9674  0017D8  0EFF               	movlw	-1
  9675  0017DA  50E3               	movf	plusw1,w,c
  9676  0017DC  0D03               	mullw	3
  9677  0017DE  0E62               	movlw	low __powers_
  9678  0017E0  24F3               	addwf	prodl,w,c
  9679  0017E2  6EF6               	movwf	tblptrl,c
  9680  0017E4  0E73               	movlw	high __powers_
  9681  0017E6                     L19:
  9682  0017E6  20F4               	addwfc	prodh,w,c
  9683  0017E8  6EF7               	movwf	tblptrh,c
  9684  0017EA                     	if	0	;There are less than 3 active tblptr bytes
  9685  0017EA                     	endif
  9686  0017EA  0009               	tblrd		*+
  9687  0017EC  CFF5 F052          	movff	tablat,btemp
  9688  0017F0  0009               	tblrd		*+
  9689  0017F2  CFF5 F053          	movff	tablat,btemp+1
  9690  0017F6  0009               	tblrd		*+
  9691  0017F8  CFF5 F054          	movff	tablat,btemp+2
  9692  0017FC                     l640:
  9693                           
  9694                           ; _scale: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  9695  0017FC  52E5               	movf	postdec1,f,c
  9696  0017FE  0012               	return		;funcret
  9697  001800                     __end_of_scale:
  9698                           	opt stack 0
  9699                           tblptru	equ	0xFF8
  9700                           tblptrh	equ	0xFF7
  9701                           tblptrl	equ	0xFF6
  9702                           tablat	equ	0xFF5
  9703                           prodh	equ	0xFF4
  9704                           prodl	equ	0xFF3
  9705                           intcon	equ	0xFF2
  9706                           intcon2	equ	0xFF1
  9707                           indf0	equ	0xFEF
  9708                           postinc0	equ	0xFEE
  9709                           fsr0h	equ	0xFEA
  9710                           fsr0l	equ	0xFE9
  9711                           wreg	equ	0xFE8
  9712                           postinc1	equ	0xFE6
  9713                           postdec1	equ	0xFE5
  9714                           plusw1	equ	0xFE3
  9715                           fsr1h	equ	0xFE2
  9716                           fsr1l	equ	0xFE1
  9717                           indf2	equ	0xFDF
  9718                           postinc2	equ	0xFDE
  9719                           postdec2	equ	0xFDD
  9720                           fsr2h	equ	0xFDA
  9721                           fsr2l	equ	0xFD9
  9722                           status	equ	0xFD8
  9723                           
  9724 ;; *************** function ___wmul *****************
  9725 ;; Defined at:
  9726 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  multiplier      2  [STACK] unsigned int 
  9729 ;;  multiplicand    2  [STACK] unsigned int 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;  product         2  [STACK] unsigned int 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  2  [STACK] unsigned int 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9741 ;;      Params:         0       0       0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0
  9744 ;;      Totals:         0       0       0       0       0       0       0
  9745 ;;Total ram usage:        0 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:   10
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_scale
  9752 ;;		_sprintf
  9753 ;;		_atoi
  9754 ;; This function uses a reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text27
  9758  003F6C                     __ptext27:
  9759                           	opt stack 0
  9760  003F6C                     ___wmul:
  9761                           	opt stack 0
  9762                           
  9763                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  9764  003F6C  52E6               	movf	postinc1,f,c
  9765  003F6E  52E6               	movf	postinc1,f,c
  9766                           
  9767                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  9768                           
  9769                           ;incstack = 0
  9770  003F70  0EFA               	movlw	-6
  9771  003F72  CFE3 F05D          	movff	plusw1,btemp+11
  9772                           
  9773                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  9774  003F76  0EFC               	movlw	-4
  9775  003F78  50E3               	movf	plusw1,w,c
  9776  003F7A  025D               	mulwf	btemp+11,c
  9777                           
  9778                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9779  003F7C  0EFE               	movlw	-2
  9780  003F7E  CFF3 FFE3          	movff	prodl,plusw1
  9781  003F82  0EFF               	movlw	-1
  9782  003F84  CFF4 FFE3          	movff	prodh,plusw1
  9783                           
  9784                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  9785  003F88  0EFB               	movlw	251
  9786  003F8A  24E1               	addwf	fsr1l,w,c
  9787  003F8C  6ED9               	movwf	fsr2l,c
  9788  003F8E  0EFF               	movlw	255
  9789  003F90  20E2               	addwfc	fsr1h,w,c
  9790  003F92  6EDA               	movwf	fsr2h,c
  9791  003F94  50DF               	movf	indf2,w,c
  9792  003F96  6E5D               	movwf	btemp+11,c
  9793                           
  9794                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  9795  003F98  0EFC               	movlw	-4
  9796  003F9A  50E3               	movf	plusw1,w,c
  9797  003F9C  025D               	mulwf	btemp+11,c
  9798  003F9E  CFF3 FFF4          	movff	prodl,prodh
  9799  003FA2  6AF3               	clrf	prodl,c
  9800                           
  9801                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9802  003FA4  50E1               	movf	fsr1l,w,c
  9803  003FA6  0FFE               	addlw	-2
  9804  003FA8  6ED9               	movwf	fsr2l,c
  9805  003FAA  50E2               	movf	fsr1h,w,c
  9806  003FAC  6EDA               	movwf	fsr2h,c
  9807  003FAE  0EFF               	movlw	255
  9808  003FB0  22DA               	addwfc	fsr2h,f,c
  9809  003FB2  50F3               	movf	prodl,w,c
  9810  003FB4  26DE               	addwf	postinc2,f,c
  9811  003FB6  50F4               	movf	prodh,w,c
  9812  003FB8  22DD               	addwfc	postdec2,f,c
  9813                           
  9814                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  9815  003FBA  0EFA               	movlw	-6
  9816  003FBC  CFE3 F05D          	movff	plusw1,btemp+11
  9817                           
  9818                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  9819  003FC0  0EFD               	movlw	253
  9820  003FC2  24E1               	addwf	fsr1l,w,c
  9821  003FC4  6ED9               	movwf	fsr2l,c
  9822  003FC6  0EFF               	movlw	255
  9823  003FC8  20E2               	addwfc	fsr1h,w,c
  9824  003FCA  6EDA               	movwf	fsr2h,c
  9825  003FCC  50DF               	movf	indf2,w,c
  9826  003FCE  025D               	mulwf	btemp+11,c
  9827  003FD0  CFF3 FFF4          	movff	prodl,prodh
  9828  003FD4  6AF3               	clrf	prodl,c
  9829                           
  9830                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9831  003FD6  50E1               	movf	fsr1l,w,c
  9832  003FD8  0FFE               	addlw	-2
  9833  003FDA  6ED9               	movwf	fsr2l,c
  9834  003FDC  50E2               	movf	fsr1h,w,c
  9835  003FDE  6EDA               	movwf	fsr2h,c
  9836  003FE0  0EFF               	movlw	255
  9837  003FE2  22DA               	addwfc	fsr2h,f,c
  9838  003FE4  50F3               	movf	prodl,w,c
  9839  003FE6  26DE               	addwf	postinc2,f,c
  9840  003FE8  50F4               	movf	prodh,w,c
  9841  003FEA  22DD               	addwfc	postdec2,f,c
  9842                           
  9843                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9844  003FEC  0EFE               	movlw	-2
  9845  003FEE  CFE3 F052          	movff	plusw1,btemp
  9846  003FF2  0EFF               	movlw	-1
  9847  003FF4  CFE3 F053          	movff	plusw1,btemp+1
  9848                           
  9849                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  9850  003FF8  0EFA               	movlw	250
  9851  003FFA  26E1               	addwf	fsr1l,f,c
  9852  003FFC  0EFF               	movlw	255
  9853  003FFE  22E2               	addwfc	fsr1h,f,c
  9854  004000  0012               	return		;funcret
  9855  004002                     __end_of___wmul:
  9856                           	opt stack 0
  9857                           tblptru	equ	0xFF8
  9858                           tblptrh	equ	0xFF7
  9859                           tblptrl	equ	0xFF6
  9860                           tablat	equ	0xFF5
  9861                           prodh	equ	0xFF4
  9862                           prodl	equ	0xFF3
  9863                           intcon	equ	0xFF2
  9864                           intcon2	equ	0xFF1
  9865                           indf0	equ	0xFEF
  9866                           postinc0	equ	0xFEE
  9867                           fsr0h	equ	0xFEA
  9868                           fsr0l	equ	0xFE9
  9869                           wreg	equ	0xFE8
  9870                           postinc1	equ	0xFE6
  9871                           postdec1	equ	0xFE5
  9872                           plusw1	equ	0xFE3
  9873                           fsr1h	equ	0xFE2
  9874                           fsr1l	equ	0xFE1
  9875                           indf2	equ	0xFDF
  9876                           postinc2	equ	0xFDE
  9877                           postdec2	equ	0xFDD
  9878                           fsr2h	equ	0xFDA
  9879                           fsr2l	equ	0xFD9
  9880                           status	equ	0xFD8
  9881                           
  9882 ;; *************** function ___awmod *****************
  9883 ;; Defined at:
  9884 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  dividend        2  [STACK] int 
  9887 ;;  divisor         2  [STACK] int 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  sign            1  [STACK] unsigned char 
  9890 ;;  counter         1  [STACK] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  2  [STACK] int 
  9893 ;; Registers used:
  9894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9900 ;;      Params:         0       0       0       0       0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   10
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_scale
  9911 ;; This function uses a reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text28
  9915  003B9C                     __ptext28:
  9916                           	opt stack 0
  9917  003B9C                     ___awmod:
  9918                           	opt stack 0
  9919                           
  9920                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  9921  003B9C  52E6               	movf	postinc1,f,c
  9922  003B9E  52E6               	movf	postinc1,f,c
  9923                           
  9924                           ;stkvar	___awmod@sign @ sp[(-2)+0]
  9925                           
  9926                           ;incstack = 0
  9927  003BA0  0EFE               	movlw	-2
  9928  003BA2  6AE3               	clrf	plusw1,c
  9929                           
  9930                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  9931  003BA4  0EFD               	movlw	-3
  9932  003BA6  AEE3               	btfss	plusw1,7,c
  9933  003BA8  D009               	goto	l2006
  9934                           
  9935                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  9936                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  9937  003BAA  0EFC               	movlw	-4
  9938  003BAC  6CE3               	negf	plusw1,c
  9939  003BAE  0EFD               	movlw	-3
  9940  003BB0  1EE3               	comf	plusw1,f,c
  9941  003BB2  B0D8               	btfsc	status,0,c
  9942  003BB4  2AE3               	incf	plusw1,f,c
  9943                           
  9944                           ;stkvar	___awmod@sign @ sp[(-2)+0]
  9945  003BB6  0EFE               	movlw	-2
  9946  003BB8  6AE3               	clrf	plusw1,c
  9947  003BBA  2AE3               	incf	plusw1,f,c
  9948  003BBC                     l2006:
  9949                           
  9950                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  9951  003BBC  0EFB               	movlw	-5
  9952  003BBE  AEE3               	btfss	plusw1,7,c
  9953  003BC0  D006               	goto	l2010
  9954                           
  9955                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  9956                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  9957  003BC2  0EFA               	movlw	-6
  9958  003BC4  6CE3               	negf	plusw1,c
  9959  003BC6  0EFB               	movlw	-5
  9960  003BC8  1EE3               	comf	plusw1,f,c
  9961  003BCA  B0D8               	btfsc	status,0,c
  9962  003BCC  2AE3               	incf	plusw1,f,c
  9963  003BCE                     l2010:
  9964                           
  9965                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  9966  003BCE  0EFA               	movlw	-6
  9967  003BD0  CFE3 F052          	movff	plusw1,btemp
  9968  003BD4  0EFB               	movlw	-5
  9969  003BD6  50E3               	movf	plusw1,w,c
  9970  003BD8  1052               	iorwf	btemp,w,c
  9971  003BDA  B4D8               	btfsc	status,2,c
  9972  003BDC  D04A               	goto	l2028
  9973                           
  9974                           ;stkvar	___awmod@counter @ sp[(-2)+1]
  9975  003BDE  0EFF               	movlw	-1
  9976  003BE0  6AE3               	clrf	plusw1,c
  9977  003BE2  D010               	goto	L20
  9978  003BE4                     l2014:
  9979                           
  9980                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  9981  003BE4  0EFA               	movlw	-6
  9982  003BE6  50E3               	movf	plusw1,w,c
  9983  003BE8  90D8               	bcf	status,0,c
  9984  003BEA  34E8               	rlcf	wreg,w,c
  9985  003BEC  6E52               	movwf	btemp,c
  9986  003BEE  0EFA               	movlw	-6
  9987  003BF0  C052  FFE3         	movff	btemp,plusw1
  9988  003BF4  0EFB               	movlw	-5
  9989  003BF6  50E3               	movf	plusw1,w,c
  9990  003BF8  34E8               	rlcf	wreg,w,c
  9991  003BFA  6E52               	movwf	btemp,c
  9992  003BFC  0EFB               	movlw	-5
  9993  003BFE  C052  FFE3         	movff	btemp,plusw1
  9994                           
  9995                           ;stkvar	___awmod@counter @ sp[(-2)+1]
  9996  003C02  0EFF               	movlw	-1
  9997  003C04                     L20:
  9998  003C04  2AE3               	incf	plusw1,f,c
  9999                           
 10000                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 10001  003C06  0EFB               	movlw	-5
 10002  003C08  AEE3               	btfss	plusw1,7,c
 10003  003C0A  D7EC               	goto	l2014
 10004  003C0C                     l2020:
 10005                           
 10006                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 10007  003C0C  0EFA               	movlw	-6
 10008  003C0E  CFE3 F053          	movff	plusw1,btemp+1
 10009  003C12  0EFB               	movlw	-5
 10010  003C14  CFE3 F054          	movff	plusw1,btemp+2
 10011                           
 10012                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 10013  003C18  0EFC               	movlw	-4
 10014  003C1A  CFE3 F05C          	movff	plusw1,btemp+10
 10015  003C1E  0EFD               	movlw	-3
 10016  003C20  CFE3 F05D          	movff	plusw1,btemp+11
 10017  003C24  5053               	movf	btemp+1,w,c
 10018  003C26  5C5C               	subwf	btemp+10,w,c
 10019  003C28  5054               	movf	btemp+2,w,c
 10020  003C2A  585D               	subwfb	btemp+11,w,c
 10021  003C2C  A0D8               	btfss	status,0,c
 10022  003C2E  D012               	goto	l2024
 10023                           
 10024                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 10025                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 10026  003C30  0EFC               	movlw	-4
 10027  003C32  50E3               	movf	plusw1,w,c
 10028  003C34  6E52               	movwf	btemp,c
 10029  003C36  0EFA               	movlw	-6
 10030  003C38  50E3               	movf	plusw1,w,c
 10031  003C3A  5E52               	subwf	btemp,f,c
 10032  003C3C  0EFC               	movlw	-4
 10033  003C3E  C052  FFE3         	movff	btemp,plusw1
 10034  003C42  0EFD               	movlw	-3
 10035  003C44  50E3               	movf	plusw1,w,c
 10036  003C46  6E52               	movwf	btemp,c
 10037  003C48  0EFB               	movlw	-5
 10038  003C4A  50E3               	movf	plusw1,w,c
 10039  003C4C  5A52               	subwfb	btemp,f,c
 10040  003C4E  0EFD               	movlw	-3
 10041  003C50  C052  FFE3         	movff	btemp,plusw1
 10042  003C54                     l2024:
 10043                           
 10044                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 10045  003C54  90D8               	bcf	status,0,c
 10046  003C56  0EFB               	movlw	-5
 10047  003C58  32E3               	rrcf	plusw1,f,c
 10048  003C5A  0EFA               	movlw	-6
 10049  003C5C  32E3               	rrcf	plusw1,f,c
 10050                           
 10051                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 10052  003C5E  0EFF               	movlw	-1
 10053  003C60  50E3               	movf	plusw1,w,c
 10054  003C62  6E52               	movwf	btemp,c
 10055  003C64  0E01               	movlw	1
 10056  003C66  5E52               	subwf	btemp,f,c
 10057  003C68  0EFF               	movlw	-1
 10058  003C6A  C052  FFE3         	movff	btemp,plusw1
 10059  003C6E  A4D8               	btfss	status,2,c
 10060  003C70  D7CD               	goto	l2020
 10061  003C72                     l2028:
 10062                           
 10063                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 10064  003C72  0EFE               	movlw	-2
 10065  003C74  50E3               	movf	plusw1,w,c
 10066  003C76  B4D8               	btfsc	status,2,c
 10067  003C78  D006               	goto	l2032
 10068                           
 10069                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 10070                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 10071  003C7A  0EFC               	movlw	-4
 10072  003C7C  6CE3               	negf	plusw1,c
 10073  003C7E  0EFD               	movlw	-3
 10074  003C80  1EE3               	comf	plusw1,f,c
 10075  003C82  B0D8               	btfsc	status,0,c
 10076  003C84  2AE3               	incf	plusw1,f,c
 10077  003C86                     l2032:
 10078                           
 10079                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 10080  003C86  0EFC               	movlw	-4
 10081  003C88  CFE3 F052          	movff	plusw1,btemp
 10082  003C8C  0EFD               	movlw	-3
 10083  003C8E  CFE3 F053          	movff	plusw1,btemp+1
 10084                           
 10085                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10086  003C92  0EFA               	movlw	250
 10087  003C94  26E1               	addwf	fsr1l,f,c
 10088  003C96  0EFF               	movlw	255
 10089  003C98  22E2               	addwfc	fsr1h,f,c
 10090  003C9A  0012               	return		;funcret
 10091  003C9C                     __end_of___awmod:
 10092                           	opt stack 0
 10093                           tblptru	equ	0xFF8
 10094                           tblptrh	equ	0xFF7
 10095                           tblptrl	equ	0xFF6
 10096                           tablat	equ	0xFF5
 10097                           prodh	equ	0xFF4
 10098                           prodl	equ	0xFF3
 10099                           intcon	equ	0xFF2
 10100                           intcon2	equ	0xFF1
 10101                           indf0	equ	0xFEF
 10102                           postinc0	equ	0xFEE
 10103                           fsr0h	equ	0xFEA
 10104                           fsr0l	equ	0xFE9
 10105                           wreg	equ	0xFE8
 10106                           postinc1	equ	0xFE6
 10107                           postdec1	equ	0xFE5
 10108                           plusw1	equ	0xFE3
 10109                           fsr1h	equ	0xFE2
 10110                           fsr1l	equ	0xFE1
 10111                           indf2	equ	0xFDF
 10112                           postinc2	equ	0xFDE
 10113                           postdec2	equ	0xFDD
 10114                           fsr2h	equ	0xFDA
 10115                           fsr2l	equ	0xFD9
 10116                           status	equ	0xFD8
 10117                           
 10118 ;; *************** function __tdiv_to_l_ *****************
 10119 ;; Defined at:
 10120 ;;		line 60 in file "/Applications/microchip/xc8/v1.38/sources/common/ftdivl.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  f1              3  [STACK] float 
 10123 ;;  f2              3  [STACK] float 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  quot            4  [STACK] unsigned long 
 10126 ;;  exp1            1  [STACK] unsigned char 
 10127 ;;  cntr            1  [STACK] unsigned char 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  4  [STACK] unsigned long 
 10130 ;; Registers used:
 10131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+6, btemp+7, btemp+8, b
      +temp+9, btemp+10, btemp+11
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10137 ;;      Params:         0       0       0       0       0       0       0
 10138 ;;      Locals:         0       0       0       0       0       0       0
 10139 ;;      Temps:          0       0       0       0       0       0       0
 10140 ;;      Totals:         0       0       0       0       0       0       0
 10141 ;;Total ram usage:        0 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:   10
 10144 ;; This function calls:
 10145 ;;		Nothing
 10146 ;; This function is called by:
 10147 ;;		_sprintf
 10148 ;; This function uses a reentrant model
 10149 ;;
 10150                           
 10151                           	psect	text29
 10152  002180                     __ptext29:
 10153                           	opt stack 0
 10154  002180                     __tdiv_to_l_:
 10155                           	opt stack 0
 10156                           
 10157                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 10158  002180  0E06               	movlw	6
 10159  002182  26E1               	addwf	fsr1l,f,c
 10160  002184  0E00               	movlw	0
 10161  002186  22E2               	addwfc	fsr1h,f,c
 10162                           
 10163                           ;incstack = 0
 10164  002188  0E0F               	movlw	15
 10165  00218A  6E5D               	movwf	btemp+11,c
 10166                           
 10167                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-3]
 10168  00218C  0EF7               	movlw	-9
 10169  00218E  CFE3 F058          	movff	plusw1,btemp+6
 10170  002192  0EF8               	movlw	-8
 10171  002194  CFE3 F059          	movff	plusw1,btemp+7
 10172  002198  0EF9               	movlw	-7
 10173  00219A  CFE3 F05A          	movff	plusw1,btemp+8
 10174  00219E  285D               	incf	btemp+11,w,c
 10175  0021A0  6E52               	movwf	btemp,c
 10176  0021A2  D004               	goto	u1500
 10177  0021A4                     u1505:
 10178  0021A4  90D8               	bcf	status,0,c
 10179  0021A6  325A               	rrcf	btemp+8,f,c
 10180  0021A8  3259               	rrcf	btemp+7,f,c
 10181  0021AA  3258               	rrcf	btemp+6,f,c
 10182  0021AC                     u1500:
 10183  0021AC  2E52               	decfsz	btemp,f,c
 10184  0021AE  D7FA               	goto	u1505
 10185  0021B0  5058               	movf	btemp+6,w,c
 10186  0021B2  6E5D               	movwf	btemp+11,c
 10187                           
 10188                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10189  0021B4  0EFE               	movlw	-2
 10190  0021B6  C05D  FFE3         	movff	btemp+11,plusw1
 10191  0021BA  0EFE               	movlw	-2
 10192  0021BC  50E3               	movf	plusw1,w,c
 10193  0021BE  A4D8               	btfss	status,2,c
 10194  0021C0  D006               	goto	l2352
 10195  0021C2                     l2348:
 10196  0021C2  0E00               	movlw	0
 10197  0021C4  6E52               	movwf	btemp,c
 10198  0021C6  6A53               	clrf	btemp+1,c
 10199  0021C8  6A54               	clrf	btemp+2,c
 10200  0021CA  6A55               	clrf	btemp+3,c
 10201  0021CC  D0C5               	goto	l1052
 10202  0021CE                     l2352:
 10203  0021CE  0E0F               	movlw	15
 10204  0021D0  6E5D               	movwf	btemp+11,c
 10205                           
 10206                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-6]
 10207  0021D2  0EF4               	movlw	-12
 10208  0021D4  CFE3 F058          	movff	plusw1,btemp+6
 10209  0021D8  0EF5               	movlw	-11
 10210  0021DA  CFE3 F059          	movff	plusw1,btemp+7
 10211  0021DE  0EF6               	movlw	-10
 10212  0021E0  CFE3 F05A          	movff	plusw1,btemp+8
 10213  0021E4  285D               	incf	btemp+11,w,c
 10214  0021E6  6E52               	movwf	btemp,c
 10215  0021E8  D004               	goto	u1520
 10216  0021EA                     u1525:
 10217  0021EA  90D8               	bcf	status,0,c
 10218  0021EC  325A               	rrcf	btemp+8,f,c
 10219  0021EE  3259               	rrcf	btemp+7,f,c
 10220  0021F0  3258               	rrcf	btemp+6,f,c
 10221  0021F2                     u1520:
 10222  0021F2  2E52               	decfsz	btemp,f,c
 10223  0021F4  D7FA               	goto	u1525
 10224  0021F6  5058               	movf	btemp+6,w,c
 10225  0021F8  6E5D               	movwf	btemp+11,c
 10226                           
 10227                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
 10228  0021FA  0EFF               	movlw	-1
 10229  0021FC  C05D  FFE3         	movff	btemp+11,plusw1
 10230  002200  0EFF               	movlw	-1
 10231  002202  50E3               	movf	plusw1,w,c
 10232  002204  B4D8               	btfsc	status,2,c
 10233  002206  D7DD               	goto	l2348
 10234                           
 10235                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-3]
 10236  002208  0EF8               	movlw	-8
 10237  00220A  8EE3               	bsf	plusw1,7,c
 10238                           
 10239                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-3]
 10240  00220C  0EF9               	movlw	-7
 10241  00220E  6AE3               	clrf	plusw1,c
 10242                           
 10243                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-6]
 10244  002210  0EF5               	movlw	-11
 10245  002212  8EE3               	bsf	plusw1,7,c
 10246                           
 10247                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-6]
 10248  002214  0EF6               	movlw	-10
 10249  002216  6AE3               	clrf	plusw1,c
 10250                           
 10251                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
 10252  002218  0EFA               	movlw	-6
 10253  00221A  6AE3               	clrf	plusw1,c
 10254  00221C  0EFB               	movlw	-5
 10255  00221E  6AE3               	clrf	plusw1,c
 10256  002220  0EFC               	movlw	-4
 10257  002222  6AE3               	clrf	plusw1,c
 10258  002224  0EFD               	movlw	-3
 10259  002226  6AE3               	clrf	plusw1,c
 10260                           
 10261                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10262  002228  0EFE               	movlw	-2
 10263  00222A  CFE3 F052          	movff	plusw1,btemp
 10264  00222E  0E7F               	movlw	127
 10265  002230  5E52               	subwf	btemp,f,c
 10266  002232  0EFE               	movlw	-2
 10267  002234  C052  FFE3         	movff	btemp,plusw1
 10268  002238  0E98               	movlw	152
 10269  00223A  6E5D               	movwf	btemp+11,c
 10270                           
 10271                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
 10272  00223C  0EFF               	movlw	-1
 10273  00223E  50E3               	movf	plusw1,w,c
 10274  002240  245D               	addwf	btemp+11,w,c
 10275  002242  6E5C               	movwf	btemp+10,c
 10276                           
 10277                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10278  002244  50E1               	movf	fsr1l,w,c
 10279  002246  0FFE               	addlw	-2
 10280  002248  6ED9               	movwf	fsr2l,c
 10281  00224A  50E2               	movf	fsr1h,w,c
 10282  00224C  6EDA               	movwf	fsr2h,c
 10283  00224E  0EFF               	movlw	255
 10284  002250  22DA               	addwfc	fsr2h,f,c
 10285  002252  505C               	movf	btemp+10,w,c
 10286  002254  5EDF               	subwf	indf2,f,c
 10287                           
 10288                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
 10289  002256  0EFF               	movlw	-1
 10290  002258  6AE3               	clrf	plusw1,c
 10291  00225A  86E3               	bsf	plusw1,3,c
 10292  00225C  88E3               	bsf	plusw1,4,c	;indir
 10293  00225E                     l2372:
 10294                           
 10295                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
 10296  00225E  90D8               	bcf	status,0,c
 10297  002260  0EFA               	movlw	-6
 10298  002262  36E3               	rlcf	plusw1,f,c
 10299  002264  0EFB               	movlw	-5
 10300  002266  36E3               	rlcf	plusw1,f,c
 10301  002268  0EFC               	movlw	-4
 10302  00226A  36E3               	rlcf	plusw1,f,c
 10303  00226C  0EFD               	movlw	-3
 10304  00226E  36E3               	rlcf	plusw1,f,c
 10305                           
 10306                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-6]
 10307                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-3]
 10308  002270  50E1               	movf	fsr1l,w,c
 10309  002272  0FF7               	addlw	-9
 10310  002274  6ED9               	movwf	fsr2l,c
 10311  002276  50E2               	movf	fsr1h,w,c
 10312  002278  6EDA               	movwf	fsr2h,c
 10313  00227A  0EFF               	movlw	255
 10314  00227C  22DA               	addwfc	fsr2h,f,c
 10315  00227E  0EF4               	movlw	-12
 10316  002280  50E3               	movf	plusw1,w,c
 10317  002282  5CDE               	subwf	postinc2,w,c
 10318  002284  0EF5               	movlw	-11
 10319  002286  50E3               	movf	plusw1,w,c
 10320  002288  58DE               	subwfb	postinc2,w,c
 10321  00228A  0EF6               	movlw	-10
 10322  00228C  50E3               	movf	plusw1,w,c
 10323  00228E  58DE               	subwfb	postinc2,w,c
 10324  002290  A0D8               	btfss	status,0,c
 10325  002292  D018               	goto	l2380
 10326                           
 10327                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-6]
 10328  002294  0EF4               	movlw	-12
 10329  002296  CFE3 F05B          	movff	plusw1,btemp+9
 10330  00229A  0EF5               	movlw	-11
 10331  00229C  CFE3 F05C          	movff	plusw1,btemp+10
 10332  0022A0  0EF6               	movlw	-10
 10333  0022A2  CFE3 F05D          	movff	plusw1,btemp+11
 10334                           
 10335                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-3]
 10336  0022A6  50E1               	movf	fsr1l,w,c
 10337  0022A8  0FF7               	addlw	-9
 10338  0022AA  6ED9               	movwf	fsr2l,c
 10339  0022AC  50E2               	movf	fsr1h,w,c
 10340  0022AE  6EDA               	movwf	fsr2h,c
 10341  0022B0  0EFF               	movlw	255
 10342  0022B2  22DA               	addwfc	fsr2h,f,c
 10343  0022B4  505B               	movf	btemp+9,w,c
 10344  0022B6  5EDE               	subwf	postinc2,f,c
 10345  0022B8  505C               	movf	btemp+10,w,c
 10346  0022BA  5ADE               	subwfb	postinc2,f,c
 10347  0022BC  505D               	movf	btemp+11,w,c
 10348  0022BE  5ADE               	subwfb	postinc2,f,c
 10349                           
 10350                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
 10351  0022C0  0EFA               	movlw	-6
 10352  0022C2  80E3               	bsf	plusw1,0,c
 10353  0022C4                     l2380:
 10354                           
 10355                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-3]
 10356  0022C4  90D8               	bcf	status,0,c
 10357  0022C6  0EF7               	movlw	-9
 10358  0022C8  36E3               	rlcf	plusw1,f,c
 10359  0022CA  0EF8               	movlw	-8
 10360  0022CC  36E3               	rlcf	plusw1,f,c
 10361  0022CE  0EF9               	movlw	-7
 10362  0022D0  36E3               	rlcf	plusw1,f,c
 10363                           
 10364                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
 10365  0022D2  0EFF               	movlw	-1
 10366  0022D4  50E3               	movf	plusw1,w,c
 10367  0022D6  6E52               	movwf	btemp,c
 10368  0022D8  0E01               	movlw	1
 10369  0022DA  5E52               	subwf	btemp,f,c
 10370  0022DC  0EFF               	movlw	-1
 10371  0022DE  C052  FFE3         	movff	btemp,plusw1
 10372  0022E2  A4D8               	btfss	status,2,c
 10373  0022E4  D7BC               	goto	l2372
 10374                           
 10375                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10376  0022E6  0EFE               	movlw	-2
 10377  0022E8  AEE3               	btfss	plusw1,7,c
 10378  0022EA  D014               	goto	l2394
 10379                           
 10380                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10381  0022EC  0EFE               	movlw	-2
 10382  0022EE  50E3               	movf	plusw1,w,c
 10383  0022F0  0A80               	xorlw	128
 10384  0022F2  0F97               	addlw	151
 10385  0022F4  A0D8               	btfss	status,0,c
 10386  0022F6  D765               	goto	l2348
 10387  0022F8                     l2392:
 10388                           
 10389                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
 10390  0022F8  90D8               	bcf	status,0,c
 10391  0022FA  0EFD               	movlw	-3
 10392  0022FC  32E3               	rrcf	plusw1,f,c
 10393  0022FE  0EFC               	movlw	-4
 10394  002300  32E3               	rrcf	plusw1,f,c
 10395  002302  0EFB               	movlw	-5
 10396  002304  32E3               	rrcf	plusw1,f,c
 10397  002306  0EFA               	movlw	-6
 10398  002308  32E3               	rrcf	plusw1,f,c
 10399                           
 10400                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10401  00230A  0EFE               	movlw	-2
 10402  00230C  2AE3               	incf	plusw1,f,c
 10403  00230E  B4D8               	btfsc	status,2,c
 10404  002310  D017               	goto	l2404
 10405  002312  D7F2               	goto	l2392
 10406  002314                     l2394:
 10407                           
 10408                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10409  002314  0EFE               	movlw	-2
 10410  002316  CFE3 F052          	movff	plusw1,btemp
 10411  00231A  0E17               	movlw	23
 10412  00231C  6452               	cpfsgt	btemp,c
 10413  00231E  D00C               	goto	l2402
 10414  002320  D750               	goto	l2348
 10415  002322                     l2400:
 10416                           
 10417                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
 10418  002322  90D8               	bcf	status,0,c
 10419  002324  0EFA               	movlw	-6
 10420  002326  36E3               	rlcf	plusw1,f,c
 10421  002328  0EFB               	movlw	-5
 10422  00232A  36E3               	rlcf	plusw1,f,c
 10423  00232C  0EFC               	movlw	-4
 10424  00232E  36E3               	rlcf	plusw1,f,c
 10425  002330  0EFD               	movlw	-3
 10426  002332  36E3               	rlcf	plusw1,f,c
 10427                           
 10428                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10429  002334  0EFE               	movlw	-2
 10430  002336  06E3               	decf	plusw1,f,c
 10431  002338                     l2402:
 10432                           
 10433                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
 10434  002338  0EFE               	movlw	-2
 10435  00233A  50E3               	movf	plusw1,w,c
 10436  00233C  A4D8               	btfss	status,2,c
 10437  00233E  D7F1               	goto	l2400
 10438  002340                     l2404:
 10439                           
 10440                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
 10441  002340  0EFA               	movlw	-6
 10442  002342  CFE3 F052          	movff	plusw1,btemp
 10443  002346  0EFB               	movlw	-5
 10444  002348  CFE3 F053          	movff	plusw1,btemp+1
 10445  00234C  0EFC               	movlw	-4
 10446  00234E  CFE3 F054          	movff	plusw1,btemp+2
 10447  002352  0EFD               	movlw	-3
 10448  002354  CFE3 F055          	movff	plusw1,btemp+3
 10449  002358                     l1052:
 10450                           
 10451                           ; __tdiv_to_l_: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 10452  002358  0EF4               	movlw	244
 10453  00235A  26E1               	addwf	fsr1l,f,c
 10454  00235C  0EFF               	movlw	255
 10455  00235E  22E2               	addwfc	fsr1h,f,c
 10456  002360  0012               	return		;funcret
 10457  002362                     __end_of__tdiv_to_l_:
 10458                           	opt stack 0
 10459                           tblptru	equ	0xFF8
 10460                           tblptrh	equ	0xFF7
 10461                           tblptrl	equ	0xFF6
 10462                           tablat	equ	0xFF5
 10463                           prodh	equ	0xFF4
 10464                           prodl	equ	0xFF3
 10465                           intcon	equ	0xFF2
 10466                           intcon2	equ	0xFF1
 10467                           indf0	equ	0xFEF
 10468                           postinc0	equ	0xFEE
 10469                           fsr0h	equ	0xFEA
 10470                           fsr0l	equ	0xFE9
 10471                           wreg	equ	0xFE8
 10472                           postinc1	equ	0xFE6
 10473                           postdec1	equ	0xFE5
 10474                           plusw1	equ	0xFE3
 10475                           fsr1h	equ	0xFE2
 10476                           fsr1l	equ	0xFE1
 10477                           indf2	equ	0xFDF
 10478                           postinc2	equ	0xFDE
 10479                           postdec2	equ	0xFDD
 10480                           fsr2h	equ	0xFDA
 10481                           fsr2l	equ	0xFD9
 10482                           status	equ	0xFD8
 10483                           
 10484 ;; *************** function __div_to_l_ *****************
 10485 ;; Defined at:
 10486 ;;		line 60 in file "/Applications/microchip/xc8/v1.38/sources/common/fldivl.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  f1              3  [STACK] unsigned long 
 10489 ;;  f2              3  [STACK] unsigned long 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;  quot            4  [STACK] unsigned long 
 10492 ;;  exp1            1  [STACK] unsigned char 
 10493 ;;  cntr            1  [STACK] unsigned char 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  4  [STACK] unsigned long 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp
      ++9, btemp+10, btemp+11
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10503 ;;      Params:         0       0       0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:   10
 10510 ;; This function calls:
 10511 ;;		Nothing
 10512 ;; This function is called by:
 10513 ;;		_sprintf
 10514 ;; This function uses a reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text30
 10518  001B0C                     __ptext30:
 10519                           	opt stack 0
 10520  001B0C                     __div_to_l_:
 10521                           	opt stack 0
 10522                           
 10523                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 10524  001B0C  0E06               	movlw	6
 10525  001B0E  26E1               	addwf	fsr1l,f,c
 10526  001B10  0E00               	movlw	0
 10527  001B12  22E2               	addwfc	fsr1h,f,c
 10528                           
 10529                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-3]
 10530                           
 10531                           ;incstack = 0
 10532  001B14  0EF7               	movlw	247
 10533  001B16  24E1               	addwf	fsr1l,w,c
 10534  001B18  6ED9               	movwf	fsr2l,c
 10535  001B1A  0EFF               	movlw	255
 10536  001B1C  20E2               	addwfc	fsr1h,w,c
 10537  001B1E  6EDA               	movwf	fsr2h,c
 10538  001B20  CFDE F05A          	movff	postinc2,btemp+8
 10539  001B24  CFDE F05B          	movff	postinc2,btemp+9
 10540  001B28  CFDE F05C          	movff	postinc2,btemp+10
 10541  001B2C  CFDE F05D          	movff	postinc2,btemp+11
 10542  001B30  0E18               	movlw	24
 10543  001B32  D005               	goto	u1610
 10544  001B34                     u1615:
 10545  001B34  90D8               	bcf	status,0,c
 10546  001B36  325D               	rrcf	btemp+11,f,c
 10547  001B38  325C               	rrcf	btemp+10,f,c
 10548  001B3A  325B               	rrcf	btemp+9,f,c
 10549  001B3C  325A               	rrcf	btemp+8,f,c
 10550  001B3E                     u1610:
 10551  001B3E  2EE8               	decfsz	wreg,f,c
 10552  001B40  D7F9               	goto	u1615
 10553                           
 10554                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10555  001B42  0EFE               	movlw	-2
 10556  001B44  C05A  FFE3         	movff	btemp+8,plusw1
 10557  001B48  0EFE               	movlw	-2
 10558  001B4A  50E3               	movf	plusw1,w,c
 10559  001B4C  A4D8               	btfss	status,2,c
 10560  001B4E  D006               	goto	l2414
 10561  001B50                     l2410:
 10562  001B50  0E00               	movlw	0
 10563  001B52  6E52               	movwf	btemp,c
 10564  001B54  6A53               	clrf	btemp+1,c
 10565  001B56  6A54               	clrf	btemp+2,c
 10566  001B58  6A55               	clrf	btemp+3,c
 10567  001B5A  D103               	goto	l948
 10568  001B5C                     l2414:
 10569                           
 10570                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-6]
 10571  001B5C  0EF4               	movlw	244
 10572  001B5E  24E1               	addwf	fsr1l,w,c
 10573  001B60  6ED9               	movwf	fsr2l,c
 10574  001B62  0EFF               	movlw	255
 10575  001B64  20E2               	addwfc	fsr1h,w,c
 10576  001B66  6EDA               	movwf	fsr2h,c
 10577  001B68  CFDE F05A          	movff	postinc2,btemp+8
 10578  001B6C  CFDE F05B          	movff	postinc2,btemp+9
 10579  001B70  CFDE F05C          	movff	postinc2,btemp+10
 10580  001B74  CFDE F05D          	movff	postinc2,btemp+11
 10581  001B78  0E18               	movlw	24
 10582  001B7A  D005               	goto	u1630
 10583  001B7C                     u1635:
 10584  001B7C  90D8               	bcf	status,0,c
 10585  001B7E  325D               	rrcf	btemp+11,f,c
 10586  001B80  325C               	rrcf	btemp+10,f,c
 10587  001B82  325B               	rrcf	btemp+9,f,c
 10588  001B84  325A               	rrcf	btemp+8,f,c
 10589  001B86                     u1630:
 10590  001B86  2EE8               	decfsz	wreg,f,c
 10591  001B88  D7F9               	goto	u1635
 10592                           
 10593                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
 10594  001B8A  0EFF               	movlw	-1
 10595  001B8C  C05A  FFE3         	movff	btemp+8,plusw1
 10596  001B90  0EFF               	movlw	-1
 10597  001B92  50E3               	movf	plusw1,w,c
 10598  001B94  B4D8               	btfsc	status,2,c
 10599  001B96  D7DC               	goto	l2410
 10600                           
 10601                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-3]
 10602  001B98  0EF7               	movlw	247
 10603  001B9A  24E1               	addwf	fsr1l,w,c
 10604  001B9C  6ED9               	movwf	fsr2l,c
 10605  001B9E  0EFF               	movlw	255
 10606  001BA0  20E2               	addwfc	fsr1h,w,c
 10607  001BA2  6EDA               	movwf	fsr2h,c
 10608  001BA4  0E00               	movlw	0
 10609  001BA6  12DE               	iorwf	postinc2,f,c
 10610  001BA8  0E00               	movlw	0
 10611  001BAA  12DE               	iorwf	postinc2,f,c
 10612  001BAC  0E80               	movlw	128
 10613  001BAE  12DE               	iorwf	postinc2,f,c
 10614  001BB0  0E00               	movlw	0
 10615  001BB2  12DE               	iorwf	postinc2,f,c
 10616                           
 10617                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-3]
 10618  001BB4  0EF7               	movlw	247
 10619  001BB6  24E1               	addwf	fsr1l,w,c
 10620  001BB8  6ED9               	movwf	fsr2l,c
 10621  001BBA  0EFF               	movlw	255
 10622  001BBC  20E2               	addwfc	fsr1h,w,c
 10623  001BBE  6EDA               	movwf	fsr2h,c
 10624  001BC0  0EFF               	movlw	255
 10625  001BC2  16DE               	andwf	postinc2,f,c
 10626  001BC4  0EFF               	movlw	255
 10627  001BC6  16DE               	andwf	postinc2,f,c
 10628  001BC8  0EFF               	movlw	255
 10629  001BCA  16DE               	andwf	postinc2,f,c
 10630  001BCC  0E00               	movlw	0
 10631  001BCE  16DE               	andwf	postinc2,f,c
 10632                           
 10633                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-6]
 10634  001BD0  0EF4               	movlw	244
 10635  001BD2  24E1               	addwf	fsr1l,w,c
 10636  001BD4  6ED9               	movwf	fsr2l,c
 10637  001BD6  0EFF               	movlw	255
 10638  001BD8  20E2               	addwfc	fsr1h,w,c
 10639  001BDA  6EDA               	movwf	fsr2h,c
 10640  001BDC  0E00               	movlw	0
 10641  001BDE  12DE               	iorwf	postinc2,f,c
 10642  001BE0  0E00               	movlw	0
 10643  001BE2  12DE               	iorwf	postinc2,f,c
 10644  001BE4  0E80               	movlw	128
 10645  001BE6  12DE               	iorwf	postinc2,f,c
 10646  001BE8  0E00               	movlw	0
 10647  001BEA  12DE               	iorwf	postinc2,f,c
 10648                           
 10649                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-6]
 10650  001BEC  0EF4               	movlw	244
 10651  001BEE  24E1               	addwf	fsr1l,w,c
 10652  001BF0  6ED9               	movwf	fsr2l,c
 10653  001BF2  0EFF               	movlw	255
 10654  001BF4  20E2               	addwfc	fsr1h,w,c
 10655  001BF6  6EDA               	movwf	fsr2h,c
 10656  001BF8  0EFF               	movlw	255
 10657  001BFA  16DE               	andwf	postinc2,f,c
 10658  001BFC  0EFF               	movlw	255
 10659  001BFE  16DE               	andwf	postinc2,f,c
 10660  001C00  0EFF               	movlw	255
 10661  001C02  16DE               	andwf	postinc2,f,c
 10662  001C04  0E00               	movlw	0
 10663  001C06  16DE               	andwf	postinc2,f,c
 10664                           
 10665                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
 10666  001C08  0EFA               	movlw	-6
 10667  001C0A  6AE3               	clrf	plusw1,c
 10668  001C0C  0EFB               	movlw	-5
 10669  001C0E  6AE3               	clrf	plusw1,c
 10670  001C10  0EFC               	movlw	-4
 10671  001C12  6AE3               	clrf	plusw1,c
 10672  001C14  0EFD               	movlw	-3
 10673  001C16  6AE3               	clrf	plusw1,c
 10674                           
 10675                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10676  001C18  0EFE               	movlw	-2
 10677  001C1A  CFE3 F052          	movff	plusw1,btemp
 10678  001C1E  0E7F               	movlw	127
 10679  001C20  5E52               	subwf	btemp,f,c
 10680  001C22  0EFE               	movlw	-2
 10681  001C24  C052  FFE3         	movff	btemp,plusw1
 10682  001C28  0EA0               	movlw	160
 10683  001C2A  6E5D               	movwf	btemp+11,c
 10684                           
 10685                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
 10686  001C2C  0EFF               	movlw	-1
 10687  001C2E  50E3               	movf	plusw1,w,c
 10688  001C30  245D               	addwf	btemp+11,w,c
 10689  001C32  6E5C               	movwf	btemp+10,c
 10690                           
 10691                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10692  001C34  50E1               	movf	fsr1l,w,c
 10693  001C36  0FFE               	addlw	-2
 10694  001C38  6ED9               	movwf	fsr2l,c
 10695  001C3A  50E2               	movf	fsr1h,w,c
 10696  001C3C  6EDA               	movwf	fsr2h,c
 10697  001C3E  0EFF               	movlw	255
 10698  001C40  22DA               	addwfc	fsr2h,f,c
 10699  001C42  505C               	movf	btemp+10,w,c
 10700  001C44  5EDF               	subwf	indf2,f,c
 10701                           
 10702                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
 10703  001C46  0EFF               	movlw	-1
 10704  001C48  6AE3               	clrf	plusw1,c
 10705  001C4A  8AE3               	bsf	plusw1,5,c
 10706  001C4C                     l2430:
 10707                           
 10708                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
 10709  001C4C  90D8               	bcf	status,0,c
 10710  001C4E  0EFA               	movlw	-6
 10711  001C50  36E3               	rlcf	plusw1,f,c
 10712  001C52  0EFB               	movlw	-5
 10713  001C54  36E3               	rlcf	plusw1,f,c
 10714  001C56  0EFC               	movlw	-4
 10715  001C58  36E3               	rlcf	plusw1,f,c
 10716  001C5A  0EFD               	movlw	-3
 10717  001C5C  36E3               	rlcf	plusw1,f,c
 10718                           
 10719                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-6]
 10720  001C5E  0EF4               	movlw	244
 10721  001C60  24E1               	addwf	fsr1l,w,c
 10722  001C62  6ED9               	movwf	fsr2l,c
 10723  001C64  0EFF               	movlw	255
 10724  001C66  20E2               	addwfc	fsr1h,w,c
 10725  001C68  6EDA               	movwf	fsr2h,c
 10726                           
 10727                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-3]
 10728  001C6A  0EF7               	movlw	247
 10729  001C6C  24E1               	addwf	fsr1l,w,c
 10730  001C6E  6EE9               	movwf	fsr0l,c
 10731  001C70  0EFF               	movlw	255
 10732  001C72  20E2               	addwfc	fsr1h,w,c
 10733  001C74  6EEA               	movwf	fsr0h,c
 10734  001C76  50DE               	movf	postinc2,w,c
 10735  001C78  5CEE               	subwf	postinc0,w,c
 10736  001C7A  50DE               	movf	postinc2,w,c
 10737  001C7C  58EE               	subwfb	postinc0,w,c
 10738  001C7E  50DE               	movf	postinc2,w,c
 10739  001C80  58EE               	subwfb	postinc0,w,c
 10740  001C82  50DE               	movf	postinc2,w,c
 10741  001C84  58EE               	subwfb	postinc0,w,c
 10742  001C86  A0D8               	btfss	status,0,c
 10743  001C88  D01E               	goto	l2438
 10744                           
 10745                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-6]
 10746  001C8A  0EF4               	movlw	244
 10747  001C8C  24E1               	addwf	fsr1l,w,c
 10748  001C8E  6ED9               	movwf	fsr2l,c
 10749  001C90  0EFF               	movlw	255
 10750  001C92  20E2               	addwfc	fsr1h,w,c
 10751  001C94  6EDA               	movwf	fsr2h,c
 10752  001C96  CFDE F05A          	movff	postinc2,btemp+8
 10753  001C9A  CFDE F05B          	movff	postinc2,btemp+9
 10754  001C9E  CFDE F05C          	movff	postinc2,btemp+10
 10755  001CA2  CFDE F05D          	movff	postinc2,btemp+11
 10756                           
 10757                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-3]
 10758  001CA6  0EF7               	movlw	247
 10759  001CA8  24E1               	addwf	fsr1l,w,c
 10760  001CAA  6ED9               	movwf	fsr2l,c
 10761  001CAC  0EFF               	movlw	255
 10762  001CAE  20E2               	addwfc	fsr1h,w,c
 10763  001CB0  6EDA               	movwf	fsr2h,c
 10764  001CB2  505A               	movf	btemp+8,w,c
 10765  001CB4  5EDE               	subwf	postinc2,f,c
 10766  001CB6  505B               	movf	btemp+9,w,c
 10767  001CB8  5ADE               	subwfb	postinc2,f,c
 10768  001CBA  505C               	movf	btemp+10,w,c
 10769  001CBC  5ADE               	subwfb	postinc2,f,c
 10770  001CBE  505D               	movf	btemp+11,w,c
 10771  001CC0  5ADE               	subwfb	postinc2,f,c
 10772                           
 10773                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
 10774  001CC2  0EFA               	movlw	-6
 10775  001CC4  80E3               	bsf	plusw1,0,c
 10776  001CC6                     l2438:
 10777                           
 10778                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-3]
 10779  001CC6  0EF7               	movlw	247
 10780  001CC8  24E1               	addwf	fsr1l,w,c
 10781  001CCA  6ED9               	movwf	fsr2l,c
 10782  001CCC  0EFF               	movlw	255
 10783  001CCE  20E2               	addwfc	fsr1h,w,c
 10784  001CD0  6EDA               	movwf	fsr2h,c
 10785  001CD2  90D8               	bcf	status,0,c
 10786  001CD4  36DE               	rlcf	postinc2,f,c
 10787  001CD6  36DE               	rlcf	postinc2,f,c
 10788  001CD8  36DE               	rlcf	postinc2,f,c
 10789  001CDA  36DE               	rlcf	postinc2,f,c
 10790                           
 10791                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
 10792  001CDC  0EFF               	movlw	-1
 10793  001CDE  50E3               	movf	plusw1,w,c
 10794  001CE0  6E52               	movwf	btemp,c
 10795  001CE2  0E01               	movlw	1
 10796  001CE4  5E52               	subwf	btemp,f,c
 10797  001CE6  0EFF               	movlw	-1
 10798  001CE8  C052  FFE3         	movff	btemp,plusw1
 10799  001CEC  A4D8               	btfss	status,2,c
 10800  001CEE  D7AE               	goto	l2430
 10801                           
 10802                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10803  001CF0  0EFE               	movlw	-2
 10804  001CF2  AEE3               	btfss	plusw1,7,c
 10805  001CF4  D014               	goto	l2452
 10806                           
 10807                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10808  001CF6  0EFE               	movlw	-2
 10809  001CF8  50E3               	movf	plusw1,w,c
 10810  001CFA  0A80               	xorlw	128
 10811  001CFC  0F9F               	addlw	159
 10812  001CFE  A0D8               	btfss	status,0,c
 10813  001D00  D727               	goto	l2410
 10814  001D02                     l2450:
 10815                           
 10816                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
 10817  001D02  90D8               	bcf	status,0,c
 10818  001D04  0EFD               	movlw	-3
 10819  001D06  32E3               	rrcf	plusw1,f,c
 10820  001D08  0EFC               	movlw	-4
 10821  001D0A  32E3               	rrcf	plusw1,f,c
 10822  001D0C  0EFB               	movlw	-5
 10823  001D0E  32E3               	rrcf	plusw1,f,c
 10824  001D10  0EFA               	movlw	-6
 10825  001D12  32E3               	rrcf	plusw1,f,c
 10826                           
 10827                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10828  001D14  0EFE               	movlw	-2
 10829  001D16  2AE3               	incf	plusw1,f,c
 10830  001D18  B4D8               	btfsc	status,2,c
 10831  001D1A  D017               	goto	l2462
 10832  001D1C  D7F2               	goto	l2450
 10833  001D1E                     l2452:
 10834                           
 10835                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10836  001D1E  0EFE               	movlw	-2
 10837  001D20  CFE3 F052          	movff	plusw1,btemp
 10838  001D24  0E1F               	movlw	31
 10839  001D26  6452               	cpfsgt	btemp,c
 10840  001D28  D00C               	goto	l2460
 10841  001D2A  D712               	goto	l2410
 10842  001D2C                     l2458:
 10843                           
 10844                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
 10845  001D2C  90D8               	bcf	status,0,c
 10846  001D2E  0EFA               	movlw	-6
 10847  001D30  36E3               	rlcf	plusw1,f,c
 10848  001D32  0EFB               	movlw	-5
 10849  001D34  36E3               	rlcf	plusw1,f,c
 10850  001D36  0EFC               	movlw	-4
 10851  001D38  36E3               	rlcf	plusw1,f,c
 10852  001D3A  0EFD               	movlw	-3
 10853  001D3C  36E3               	rlcf	plusw1,f,c
 10854                           
 10855                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10856  001D3E  0EFE               	movlw	-2
 10857  001D40  06E3               	decf	plusw1,f,c
 10858  001D42                     l2460:
 10859                           
 10860                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
 10861  001D42  0EFE               	movlw	-2
 10862  001D44  50E3               	movf	plusw1,w,c
 10863  001D46  A4D8               	btfss	status,2,c
 10864  001D48  D7F1               	goto	l2458
 10865  001D4A                     l2462:
 10866                           
 10867                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
 10868  001D4A  0EFA               	movlw	-6
 10869  001D4C  CFE3 F052          	movff	plusw1,btemp
 10870  001D50  0EFB               	movlw	-5
 10871  001D52  CFE3 F053          	movff	plusw1,btemp+1
 10872  001D56  0EFC               	movlw	-4
 10873  001D58  CFE3 F054          	movff	plusw1,btemp+2
 10874  001D5C  0EFD               	movlw	-3
 10875  001D5E  CFE3 F055          	movff	plusw1,btemp+3
 10876  001D62                     l948:
 10877                           
 10878                           ; __div_to_l_: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10879  001D62  0EF4               	movlw	244
 10880  001D64  26E1               	addwf	fsr1l,f,c
 10881  001D66  0EFF               	movlw	255
 10882  001D68  22E2               	addwfc	fsr1h,f,c
 10883  001D6A  0012               	return		;funcret
 10884  001D6C                     __end_of__div_to_l_:
 10885                           	opt stack 0
 10886                           tblptru	equ	0xFF8
 10887                           tblptrh	equ	0xFF7
 10888                           tblptrl	equ	0xFF6
 10889                           tablat	equ	0xFF5
 10890                           prodh	equ	0xFF4
 10891                           prodl	equ	0xFF3
 10892                           intcon	equ	0xFF2
 10893                           intcon2	equ	0xFF1
 10894                           indf0	equ	0xFEF
 10895                           postinc0	equ	0xFEE
 10896                           fsr0h	equ	0xFEA
 10897                           fsr0l	equ	0xFE9
 10898                           wreg	equ	0xFE8
 10899                           postinc1	equ	0xFE6
 10900                           postdec1	equ	0xFE5
 10901                           plusw1	equ	0xFE3
 10902                           fsr1h	equ	0xFE2
 10903                           fsr1l	equ	0xFE1
 10904                           indf2	equ	0xFDF
 10905                           postinc2	equ	0xFDE
 10906                           postdec2	equ	0xFDD
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function ___ftsub *****************
 10912 ;; Defined at:
 10913 ;;		line 20 in file "/Applications/microchip/xc8/v1.38/sources/common/ftsub.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  f1              3  [STACK] float 
 10916 ;;  f2              3  [STACK] float 
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  3  [STACK] float 
 10921 ;; Registers used:
 10922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10928 ;;      Params:         0       0       0       0       0       0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0
 10930 ;;      Temps:          0       0       0       0       0       0       0
 10931 ;;      Totals:         0       0       0       0       0       0       0
 10932 ;;Total ram usage:        0 bytes
 10933 ;; Hardware stack levels used:    1
 10934 ;; Hardware stack levels required when called:   12
 10935 ;; This function calls:
 10936 ;;		___ftadd
 10937 ;; This function is called by:
 10938 ;;		_sprintf
 10939 ;; This function uses a reentrant model
 10940 ;;
 10941                           
 10942                           	psect	text31
 10943  0044BA                     __ptext31:
 10944                           	opt stack 0
 10945  0044BA                     ___ftsub:
 10946                           	opt stack 5
 10947                           
 10948                           ;stkvar	___ftsub@f2 @ sp[(0)+-6]
 10949                           
 10950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 10951                           ;incstack = 0
 10952  0044BA  0EFA               	movlw	-6
 10953  0044BC  50E3               	movf	plusw1,w,c
 10954  0044BE  E107               	bnz	u1720
 10955  0044C0  0EFB               	movlw	-5
 10956  0044C2  50E3               	movf	plusw1,w,c
 10957  0044C4  E104               	bnz	u1720
 10958  0044C6  0EFC               	movlw	-4
 10959  0044C8  50E3               	movf	plusw1,w,c
 10960  0044CA  B4D8               	btfsc	status,2,c
 10961  0044CC  D002               	goto	l2470
 10962  0044CE                     u1720:
 10963                           
 10964                           ;stkvar	___ftsub@f2 @ sp[(0)+-6]
 10965  0044CE  0EFC               	movlw	-4
 10966  0044D0  7EE3               	btg	plusw1,7,c
 10967  0044D2                     l2470:
 10968                           
 10969                           ;stkvar	___ftsub@f2 @ sp[(0)+-6]
 10970  0044D2  0EFA               	movlw	-6
 10971  0044D4  CFE3 FFE6          	movff	plusw1,postinc1
 10972  0044D8  CFE3 FFE6          	movff	plusw1,postinc1
 10973  0044DC  CFE3 FFE6          	movff	plusw1,postinc1
 10974                           
 10975                           ;stkvar	___ftsub@f1 @ sp[(-3)+-3]
 10976  0044E0  0EFA               	movlw	-6
 10977  0044E2  CFE3 FFE6          	movff	plusw1,postinc1
 10978  0044E6  CFE3 FFE6          	movff	plusw1,postinc1
 10979  0044EA  CFE3 FFE6          	movff	plusw1,postinc1
 10980  0044EE  EC00  F00C         	call	___ftadd	;wreg free
 10981                           
 10982                           ; ___ftsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10983  0044F2  0EFA               	movlw	250
 10984  0044F4  26E1               	addwf	fsr1l,f,c
 10985  0044F6  0EFF               	movlw	255
 10986  0044F8  22E2               	addwfc	fsr1h,f,c
 10987  0044FA  0012               	return		;funcret
 10988  0044FC                     __end_of___ftsub:
 10989                           	opt stack 0
 10990                           tblptru	equ	0xFF8
 10991                           tblptrh	equ	0xFF7
 10992                           tblptrl	equ	0xFF6
 10993                           tablat	equ	0xFF5
 10994                           prodh	equ	0xFF4
 10995                           prodl	equ	0xFF3
 10996                           intcon	equ	0xFF2
 10997                           intcon2	equ	0xFF1
 10998                           indf0	equ	0xFEF
 10999                           postinc0	equ	0xFEE
 11000                           fsr0h	equ	0xFEA
 11001                           fsr0l	equ	0xFE9
 11002                           wreg	equ	0xFE8
 11003                           postinc1	equ	0xFE6
 11004                           postdec1	equ	0xFE5
 11005                           plusw1	equ	0xFE3
 11006                           fsr1h	equ	0xFE2
 11007                           fsr1l	equ	0xFE1
 11008                           indf2	equ	0xFDF
 11009                           postinc2	equ	0xFDE
 11010                           postdec2	equ	0xFDD
 11011                           fsr2h	equ	0xFDA
 11012                           fsr2l	equ	0xFD9
 11013                           status	equ	0xFD8
 11014                           
 11015 ;; *************** function ___awdiv *****************
 11016 ;; Defined at:
 11017 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awdiv.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;  dividend        2  [STACK] int 
 11020 ;;  divisor         2  [STACK] int 
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;  quotient        2  [STACK] int 
 11023 ;;  sign            1  [STACK] unsigned char 
 11024 ;;  counter         1  [STACK] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  2  [STACK] int 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11034 ;;      Params:         0       0       0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0
 11037 ;;      Totals:         0       0       0       0       0       0       0
 11038 ;;Total ram usage:        0 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:   10
 11041 ;; This function calls:
 11042 ;;		Nothing
 11043 ;; This function is called by:
 11044 ;;		_scale
 11045 ;;		_sprintf
 11046 ;; This function uses a reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text32
 11050  003850                     __ptext32:
 11051                           	opt stack 0
 11052  003850                     ___awdiv:
 11053                           	opt stack 0
 11054                           
 11055                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
 11056  003850  52E6               	movf	postinc1,f,c
 11057  003852  52E6               	movf	postinc1,f,c
 11058  003854  52E6               	movf	postinc1,f,c
 11059  003856  52E6               	movf	postinc1,f,c
 11060                           
 11061                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 11062                           
 11063                           ;incstack = 0
 11064  003858  0EFE               	movlw	-2
 11065  00385A  6AE3               	clrf	plusw1,c
 11066                           
 11067                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11068  00385C  0EF9               	movlw	-7
 11069  00385E  AEE3               	btfss	plusw1,7,c
 11070  003860  D009               	goto	l1960
 11071                           
 11072                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11073                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11074  003862  0EF8               	movlw	-8
 11075  003864  6CE3               	negf	plusw1,c
 11076  003866  0EF9               	movlw	-7
 11077  003868  1EE3               	comf	plusw1,f,c
 11078  00386A  B0D8               	btfsc	status,0,c
 11079  00386C  2AE3               	incf	plusw1,f,c
 11080                           
 11081                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 11082  00386E  0EFE               	movlw	-2
 11083  003870  6AE3               	clrf	plusw1,c
 11084  003872  2AE3               	incf	plusw1,f,c
 11085  003874                     l1960:
 11086                           
 11087                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 11088  003874  0EFB               	movlw	-5
 11089  003876  AEE3               	btfss	plusw1,7,c
 11090  003878  D008               	goto	l1966
 11091                           
 11092                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 11093                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 11094  00387A  0EFA               	movlw	-6
 11095  00387C  6CE3               	negf	plusw1,c
 11096  00387E  0EFB               	movlw	-5
 11097  003880  1EE3               	comf	plusw1,f,c
 11098  003882  B0D8               	btfsc	status,0,c
 11099  003884  2AE3               	incf	plusw1,f,c
 11100                           
 11101                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 11102  003886  0EFE               	movlw	-2
 11103  003888  70E3               	btg	plusw1,0,c
 11104  00388A                     l1966:
 11105                           
 11106                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 11107  00388A  0EFC               	movlw	-4
 11108  00388C  6AE3               	clrf	plusw1,c
 11109  00388E  0EFD               	movlw	-3
 11110  003890  6AE3               	clrf	plusw1,c
 11111                           
 11112                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11113  003892  0EF8               	movlw	-8
 11114  003894  CFE3 F052          	movff	plusw1,btemp
 11115  003898  0EF9               	movlw	-7
 11116  00389A  50E3               	movf	plusw1,w,c
 11117  00389C  1052               	iorwf	btemp,w,c
 11118  00389E  B4D8               	btfsc	status,2,c
 11119  0038A0  D05B               	goto	l1990
 11120                           
 11121                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 11122  0038A2  0EFF               	movlw	-1
 11123  0038A4  6AE3               	clrf	plusw1,c
 11124  0038A6  D010               	goto	L21
 11125  0038A8                     l1972:
 11126                           
 11127                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11128  0038A8  0EF8               	movlw	-8
 11129  0038AA  50E3               	movf	plusw1,w,c
 11130  0038AC  90D8               	bcf	status,0,c
 11131  0038AE  34E8               	rlcf	wreg,w,c
 11132  0038B0  6E52               	movwf	btemp,c
 11133  0038B2  0EF8               	movlw	-8
 11134  0038B4  C052  FFE3         	movff	btemp,plusw1
 11135  0038B8  0EF9               	movlw	-7
 11136  0038BA  50E3               	movf	plusw1,w,c
 11137  0038BC  34E8               	rlcf	wreg,w,c
 11138  0038BE  6E52               	movwf	btemp,c
 11139  0038C0  0EF9               	movlw	-7
 11140  0038C2  C052  FFE3         	movff	btemp,plusw1
 11141                           
 11142                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 11143  0038C6  0EFF               	movlw	-1
 11144  0038C8                     L21:
 11145  0038C8  2AE3               	incf	plusw1,f,c
 11146                           
 11147                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11148  0038CA  0EF9               	movlw	-7
 11149  0038CC  AEE3               	btfss	plusw1,7,c
 11150  0038CE  D7EC               	goto	l1972
 11151  0038D0                     l1978:
 11152                           
 11153                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 11154  0038D0  0EFC               	movlw	-4
 11155  0038D2  50E3               	movf	plusw1,w,c
 11156  0038D4  90D8               	bcf	status,0,c
 11157  0038D6  34E8               	rlcf	wreg,w,c
 11158  0038D8  6E52               	movwf	btemp,c
 11159  0038DA  0EFC               	movlw	-4
 11160  0038DC  C052  FFE3         	movff	btemp,plusw1
 11161  0038E0  0EFD               	movlw	-3
 11162  0038E2  50E3               	movf	plusw1,w,c
 11163  0038E4  34E8               	rlcf	wreg,w,c
 11164  0038E6  6E52               	movwf	btemp,c
 11165  0038E8  0EFD               	movlw	-3
 11166  0038EA  C052  FFE3         	movff	btemp,plusw1
 11167                           
 11168                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11169  0038EE  0EF8               	movlw	-8
 11170  0038F0  CFE3 F053          	movff	plusw1,btemp+1
 11171  0038F4  0EF9               	movlw	-7
 11172  0038F6  CFE3 F054          	movff	plusw1,btemp+2
 11173                           
 11174                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 11175  0038FA  0EFA               	movlw	-6
 11176  0038FC  CFE3 F05C          	movff	plusw1,btemp+10
 11177  003900  0EFB               	movlw	-5
 11178  003902  CFE3 F05D          	movff	plusw1,btemp+11
 11179  003906  5053               	movf	btemp+1,w,c
 11180  003908  5C5C               	subwf	btemp+10,w,c
 11181  00390A  5054               	movf	btemp+2,w,c
 11182  00390C  585D               	subwfb	btemp+11,w,c
 11183  00390E  A0D8               	btfss	status,0,c
 11184  003910  D014               	goto	l1986
 11185                           
 11186                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11187                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
 11188  003912  0EFA               	movlw	-6
 11189  003914  50E3               	movf	plusw1,w,c
 11190  003916  6E52               	movwf	btemp,c
 11191  003918  0EF8               	movlw	-8
 11192  00391A  50E3               	movf	plusw1,w,c
 11193  00391C  5E52               	subwf	btemp,f,c
 11194  00391E  0EFA               	movlw	-6
 11195  003920  C052  FFE3         	movff	btemp,plusw1
 11196  003924  0EFB               	movlw	-5
 11197  003926  50E3               	movf	plusw1,w,c
 11198  003928  6E52               	movwf	btemp,c
 11199  00392A  0EF9               	movlw	-7
 11200  00392C  50E3               	movf	plusw1,w,c
 11201  00392E  5A52               	subwfb	btemp,f,c
 11202  003930  0EFB               	movlw	-5
 11203  003932  C052  FFE3         	movff	btemp,plusw1
 11204                           
 11205                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 11206  003936  0EFC               	movlw	-4
 11207  003938  80E3               	bsf	plusw1,0,c
 11208  00393A                     l1986:
 11209                           
 11210                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
 11211  00393A  90D8               	bcf	status,0,c
 11212  00393C  0EF9               	movlw	-7
 11213  00393E  32E3               	rrcf	plusw1,f,c
 11214  003940  0EF8               	movlw	-8
 11215  003942  32E3               	rrcf	plusw1,f,c
 11216                           
 11217                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
 11218  003944  0EFF               	movlw	-1
 11219  003946  50E3               	movf	plusw1,w,c
 11220  003948  6E52               	movwf	btemp,c
 11221  00394A  0E01               	movlw	1
 11222  00394C  5E52               	subwf	btemp,f,c
 11223  00394E  0EFF               	movlw	-1
 11224  003950  C052  FFE3         	movff	btemp,plusw1
 11225  003954  A4D8               	btfss	status,2,c
 11226  003956  D7BC               	goto	l1978
 11227  003958                     l1990:
 11228                           
 11229                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
 11230  003958  0EFE               	movlw	-2
 11231  00395A  50E3               	movf	plusw1,w,c
 11232  00395C  B4D8               	btfsc	status,2,c
 11233  00395E  D006               	goto	l1994
 11234                           
 11235                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 11236                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 11237  003960  0EFC               	movlw	-4
 11238  003962  6CE3               	negf	plusw1,c
 11239  003964  0EFD               	movlw	-3
 11240  003966  1EE3               	comf	plusw1,f,c
 11241  003968  B0D8               	btfsc	status,0,c
 11242  00396A  2AE3               	incf	plusw1,f,c
 11243  00396C                     l1994:
 11244                           
 11245                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
 11246  00396C  0EFC               	movlw	-4
 11247  00396E  CFE3 F052          	movff	plusw1,btemp
 11248  003972  0EFD               	movlw	-3
 11249  003974  CFE3 F053          	movff	plusw1,btemp+1
 11250                           
 11251                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11252  003978  0EF8               	movlw	248
 11253  00397A  26E1               	addwf	fsr1l,f,c
 11254  00397C  0EFF               	movlw	255
 11255  00397E  22E2               	addwfc	fsr1h,f,c
 11256  003980  0012               	return		;funcret
 11257  003982                     __end_of___awdiv:
 11258                           	opt stack 0
 11259                           tblptru	equ	0xFF8
 11260                           tblptrh	equ	0xFF7
 11261                           tblptrl	equ	0xFF6
 11262                           tablat	equ	0xFF5
 11263                           prodh	equ	0xFF4
 11264                           prodl	equ	0xFF3
 11265                           intcon	equ	0xFF2
 11266                           intcon2	equ	0xFF1
 11267                           indf0	equ	0xFEF
 11268                           postinc0	equ	0xFEE
 11269                           fsr0h	equ	0xFEA
 11270                           fsr0l	equ	0xFE9
 11271                           wreg	equ	0xFE8
 11272                           postinc1	equ	0xFE6
 11273                           postdec1	equ	0xFE5
 11274                           plusw1	equ	0xFE3
 11275                           fsr1h	equ	0xFE2
 11276                           fsr1l	equ	0xFE1
 11277                           indf2	equ	0xFDF
 11278                           postinc2	equ	0xFDE
 11279                           postdec2	equ	0xFDD
 11280                           fsr2h	equ	0xFDA
 11281                           fsr2l	equ	0xFD9
 11282                           status	equ	0xFD8
 11283                           
 11284 ;; *************** function ___ftge *****************
 11285 ;; Defined at:
 11286 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/ftge.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  ff1             3  [STACK] float 
 11289 ;;  ff2             3  [STACK] float 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;		None
 11292 ;; Return value:  Size  Location     Type
 11293 ;;		None               void
 11294 ;; Registers used:
 11295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11301 ;;      Params:         0       0       0       0       0       0       0
 11302 ;;      Locals:         0       0       0       0       0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0
 11304 ;;      Totals:         0       0       0       0       0       0       0
 11305 ;;Total ram usage:        0 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:   10
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_My_ISR_Low
 11312 ;;		_sprintf
 11313 ;; This function uses a reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text33
 11317  003E20                     __ptext33:
 11318                           	opt stack 0
 11319  003E20                     ___ftge:
 11320                           	opt stack 7
 11321                           
 11322                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 11323                           
 11324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 11325                           ;incstack = 0
 11326  003E20  0EFF               	movlw	-1
 11327  003E22  AEE3               	btfss	plusw1,7,c
 11328  003E24  D019               	goto	l2478
 11329                           
 11330                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 11331                           ;load constant 0x800000
 11332  003E26  0E80               	movlw	128
 11333  003E28  6E5D               	movwf	btemp+11,c
 11334  003E2A  6A5C               	clrf	btemp+10,c
 11335  003E2C  6A5B               	clrf	btemp+9,c
 11336  003E2E  0EFD               	movlw	-3
 11337  003E30  50E3               	movf	plusw1,w,c
 11338  003E32  5C5B               	subwf	btemp+9,w,c
 11339  003E34  6E58               	movwf	btemp+6,c
 11340  003E36  0EFE               	movlw	-2
 11341  003E38  50E3               	movf	plusw1,w,c
 11342  003E3A  585C               	subwfb	btemp+10,w,c
 11343  003E3C  6E59               	movwf	btemp+7,c
 11344  003E3E  0EFF               	movlw	-1
 11345  003E40  50E3               	movf	plusw1,w,c
 11346  003E42  585D               	subwfb	btemp+11,w,c
 11347  003E44  6E5A               	movwf	btemp+8,c
 11348                           
 11349                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 11350  003E46  0EFD               	movlw	-3
 11351  003E48  C058  FFE3         	movff	btemp+6,plusw1
 11352  003E4C  0EFE               	movlw	-2
 11353  003E4E  C059  FFE3         	movff	btemp+7,plusw1
 11354  003E52  0EFF               	movlw	-1
 11355  003E54  C05A  FFE3         	movff	btemp+8,plusw1
 11356  003E58                     l2478:
 11357                           
 11358                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 11359  003E58  0EFC               	movlw	-4
 11360  003E5A  AEE3               	btfss	plusw1,7,c
 11361  003E5C  D019               	goto	l2482
 11362                           
 11363                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 11364                           ;load constant 0x800000
 11365  003E5E  0E80               	movlw	128
 11366  003E60  6E5D               	movwf	btemp+11,c
 11367  003E62  6A5C               	clrf	btemp+10,c
 11368  003E64  6A5B               	clrf	btemp+9,c
 11369  003E66  0EFA               	movlw	-6
 11370  003E68  50E3               	movf	plusw1,w,c
 11371  003E6A  5C5B               	subwf	btemp+9,w,c
 11372  003E6C  6E58               	movwf	btemp+6,c
 11373  003E6E  0EFB               	movlw	-5
 11374  003E70  50E3               	movf	plusw1,w,c
 11375  003E72  585C               	subwfb	btemp+10,w,c
 11376  003E74  6E59               	movwf	btemp+7,c
 11377  003E76  0EFC               	movlw	-4
 11378  003E78  50E3               	movf	plusw1,w,c
 11379  003E7A  585D               	subwfb	btemp+11,w,c
 11380  003E7C  6E5A               	movwf	btemp+8,c
 11381                           
 11382                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 11383  003E7E  0EFA               	movlw	-6
 11384  003E80  C058  FFE3         	movff	btemp+6,plusw1
 11385  003E84  0EFB               	movlw	-5
 11386  003E86  C059  FFE3         	movff	btemp+7,plusw1
 11387  003E8A  0EFC               	movlw	-4
 11388  003E8C  C05A  FFE3         	movff	btemp+8,plusw1
 11389  003E90                     l2482:
 11390                           
 11391                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 11392  003E90  0EFF               	movlw	-1
 11393  003E92  7EE3               	btg	plusw1,7,c
 11394                           
 11395                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 11396  003E94  0EFC               	movlw	-4
 11397  003E96  7EE3               	btg	plusw1,7,c
 11398                           
 11399                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 11400                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 11401  003E98  50E1               	movf	fsr1l,w,c
 11402  003E9A  0FFD               	addlw	-3
 11403  003E9C  6ED9               	movwf	fsr2l,c
 11404  003E9E  50E2               	movf	fsr1h,w,c
 11405  003EA0  6EDA               	movwf	fsr2h,c
 11406  003EA2  0EFF               	movlw	255
 11407  003EA4  22DA               	addwfc	fsr2h,f,c
 11408  003EA6  0EFA               	movlw	-6
 11409  003EA8  50E3               	movf	plusw1,w,c
 11410  003EAA  5CDE               	subwf	postinc2,w,c
 11411  003EAC  0EFB               	movlw	-5
 11412  003EAE  50E3               	movf	plusw1,w,c
 11413  003EB0  58DE               	subwfb	postinc2,w,c
 11414  003EB2  0EFC               	movlw	-4
 11415  003EB4  50E3               	movf	plusw1,w,c
 11416  003EB6  58DE               	subwfb	postinc2,w,c
 11417  003EB8  B0D8               	btfsc	status,0,c
 11418  003EBA  D002               	goto	l2490
 11419  003EBC  9052               	bcf	btemp,0,c
 11420  003EBE  D001               	goto	l1070
 11421  003EC0                     l2490:
 11422  003EC0  8052               	bsf	btemp,0,c
 11423  003EC2                     l1070:
 11424                           
 11425                           ; ___ftge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11426  003EC2  0EFA               	movlw	250
 11427  003EC4  26E1               	addwf	fsr1l,f,c
 11428  003EC6  0EFF               	movlw	255
 11429  003EC8  22E2               	addwfc	fsr1h,f,c
 11430  003ECA  0012               	return		;funcret
 11431  003ECC                     __end_of___ftge:
 11432                           	opt stack 0
 11433                           tblptru	equ	0xFF8
 11434                           tblptrh	equ	0xFF7
 11435                           tblptrl	equ	0xFF6
 11436                           tablat	equ	0xFF5
 11437                           prodh	equ	0xFF4
 11438                           prodl	equ	0xFF3
 11439                           intcon	equ	0xFF2
 11440                           intcon2	equ	0xFF1
 11441                           indf0	equ	0xFEF
 11442                           postinc0	equ	0xFEE
 11443                           fsr0h	equ	0xFEA
 11444                           fsr0l	equ	0xFE9
 11445                           wreg	equ	0xFE8
 11446                           postinc1	equ	0xFE6
 11447                           postdec1	equ	0xFE5
 11448                           plusw1	equ	0xFE3
 11449                           fsr1h	equ	0xFE2
 11450                           fsr1l	equ	0xFE1
 11451                           indf2	equ	0xFDF
 11452                           postinc2	equ	0xFDE
 11453                           postdec2	equ	0xFDD
 11454                           fsr2h	equ	0xFDA
 11455                           fsr2l	equ	0xFD9
 11456                           status	equ	0xFD8
 11457                           
 11458 ;; *************** function ___ftneg *****************
 11459 ;; Defined at:
 11460 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/ftneg.c"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;  f1              3  [STACK] float 
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;		None
 11465 ;; Return value:  Size  Location     Type
 11466 ;;                  3  [STACK] float 
 11467 ;; Registers used:
 11468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2
 11469 ;; Tracked objects:
 11470 ;;		On entry : 0/0
 11471 ;;		On exit  : 0/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11474 ;;      Params:         0       0       0       0       0       0       0
 11475 ;;      Locals:         0       0       0       0       0       0       0
 11476 ;;      Temps:          0       0       0       0       0       0       0
 11477 ;;      Totals:         0       0       0       0       0       0       0
 11478 ;;Total ram usage:        0 bytes
 11479 ;; Hardware stack levels used:    1
 11480 ;; Hardware stack levels required when called:   10
 11481 ;; This function calls:
 11482 ;;		Nothing
 11483 ;; This function is called by:
 11484 ;;		_sprintf
 11485 ;; This function uses a reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text34
 11489  00459E                     __ptext34:
 11490                           	opt stack 0
 11491  00459E                     ___ftneg:
 11492                           	opt stack 7
 11493                           
 11494                           ;stkvar	___ftneg@f1 @ sp[(0)+-3]
 11495                           
 11496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
 11497                           ;incstack = 0
 11498  00459E  0EFD               	movlw	-3
 11499  0045A0  50E3               	movf	plusw1,w,c
 11500  0045A2  E107               	bnz	u1760
 11501  0045A4  0EFE               	movlw	-2
 11502  0045A6  50E3               	movf	plusw1,w,c
 11503  0045A8  E104               	bnz	u1760
 11504  0045AA  0EFF               	movlw	-1
 11505  0045AC  50E3               	movf	plusw1,w,c
 11506  0045AE  B4D8               	btfsc	status,2,c
 11507  0045B0  D002               	goto	l2498
 11508  0045B2                     u1760:
 11509                           
 11510                           ;stkvar	___ftneg@f1 @ sp[(0)+-3]
 11511  0045B2  0EFF               	movlw	-1
 11512  0045B4  7EE3               	btg	plusw1,7,c
 11513  0045B6                     l2498:
 11514                           
 11515                           ;stkvar	___ftneg@f1 @ sp[(0)+-3]
 11516  0045B6  0EFD               	movlw	-3
 11517  0045B8  CFE3 F052          	movff	plusw1,btemp
 11518  0045BC  0EFE               	movlw	-2
 11519  0045BE  CFE3 F053          	movff	plusw1,btemp+1
 11520  0045C2  0EFF               	movlw	-1
 11521  0045C4  CFE3 F054          	movff	plusw1,btemp+2
 11522                           
 11523                           ; ___ftneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsi
      +                          ze = 3, vargsize = 0
 11524  0045C8  52E5               	movf	postdec1,f,c
 11525  0045CA  52E5               	movf	postdec1,f,c
 11526  0045CC  52E5               	movf	postdec1,f,c
 11527  0045CE  0012               	return		;funcret
 11528  0045D0                     __end_of___ftneg:
 11529                           	opt stack 0
 11530                           tblptru	equ	0xFF8
 11531                           tblptrh	equ	0xFF7
 11532                           tblptrl	equ	0xFF6
 11533                           tablat	equ	0xFF5
 11534                           prodh	equ	0xFF4
 11535                           prodl	equ	0xFF3
 11536                           intcon	equ	0xFF2
 11537                           intcon2	equ	0xFF1
 11538                           indf0	equ	0xFEF
 11539                           postinc0	equ	0xFEE
 11540                           fsr0h	equ	0xFEA
 11541                           fsr0l	equ	0xFE9
 11542                           wreg	equ	0xFE8
 11543                           postinc1	equ	0xFE6
 11544                           postdec1	equ	0xFE5
 11545                           plusw1	equ	0xFE3
 11546                           fsr1h	equ	0xFE2
 11547                           fsr1l	equ	0xFE1
 11548                           indf2	equ	0xFDF
 11549                           postinc2	equ	0xFDE
 11550                           postdec2	equ	0xFDD
 11551                           fsr2h	equ	0xFDA
 11552                           fsr2l	equ	0xFD9
 11553                           status	equ	0xFD8
 11554                           
 11555 ;; *************** function ___fttol *****************
 11556 ;; Defined at:
 11557 ;;		line 44 in file "/Applications/microchip/xc8/v1.38/sources/common/fttol.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  f1              3  [STACK] float 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  lval            4  [STACK] unsigned long 
 11562 ;;  exp1            1  [STACK] unsigned char 
 11563 ;;  sign1           1  [STACK] unsigned char 
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  4  [STACK] long 
 11566 ;; Registers used:
 11567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+
      +8, btemp+9, btemp+10, btemp+11
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11573 ;;      Params:         0       0       0       0       0       0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0
 11576 ;;      Totals:         0       0       0       0       0       0       0
 11577 ;;Total ram usage:        0 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:   10
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		_sprintf
 11584 ;; This function uses a reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text35
 11588  00309E                     __ptext35:
 11589                           	opt stack 0
 11590  00309E                     ___fttol:
 11591                           	opt stack 0
 11592                           
 11593                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
 11594  00309E  0E06               	movlw	6
 11595  0030A0  26E1               	addwf	fsr1l,f,c
 11596  0030A2  0E00               	movlw	0
 11597  0030A4  22E2               	addwfc	fsr1h,f,c
 11598                           
 11599                           ;incstack = 0
 11600  0030A6  0E0F               	movlw	15
 11601  0030A8  6E5D               	movwf	btemp+11,c
 11602                           
 11603                           ;stkvar	___fttol@f1 @ sp[(-6)+-3]
 11604  0030AA  0EF7               	movlw	-9
 11605  0030AC  CFE3 F058          	movff	plusw1,btemp+6
 11606  0030B0  0EF8               	movlw	-8
 11607  0030B2  CFE3 F059          	movff	plusw1,btemp+7
 11608  0030B6  0EF9               	movlw	-7
 11609  0030B8  CFE3 F05A          	movff	plusw1,btemp+8
 11610  0030BC  285D               	incf	btemp+11,w,c
 11611  0030BE  6E52               	movwf	btemp,c
 11612  0030C0  D004               	goto	u1770
 11613  0030C2                     u1775:
 11614  0030C2  90D8               	bcf	status,0,c
 11615  0030C4  325A               	rrcf	btemp+8,f,c
 11616  0030C6  3259               	rrcf	btemp+7,f,c
 11617  0030C8  3258               	rrcf	btemp+6,f,c
 11618  0030CA                     u1770:
 11619  0030CA  2E52               	decfsz	btemp,f,c
 11620  0030CC  D7FA               	goto	u1775
 11621  0030CE  5058               	movf	btemp+6,w,c
 11622  0030D0  6E5D               	movwf	btemp+11,c
 11623                           
 11624                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11625  0030D2  0EFE               	movlw	-2
 11626  0030D4  C05D  FFE3         	movff	btemp+11,plusw1
 11627  0030D8  0EFE               	movlw	-2
 11628  0030DA  50E3               	movf	plusw1,w,c
 11629  0030DC  A4D8               	btfss	status,2,c
 11630  0030DE  D006               	goto	l2508
 11631  0030E0                     l2504:
 11632  0030E0  0E00               	movlw	0
 11633  0030E2  6E52               	movwf	btemp,c
 11634  0030E4  6A53               	clrf	btemp+1,c
 11635  0030E6  6A54               	clrf	btemp+2,c
 11636  0030E8  6A55               	clrf	btemp+3,c
 11637  0030EA  D08F               	goto	l1097
 11638  0030EC                     l2508:
 11639  0030EC  0E17               	movlw	23
 11640  0030EE  6E5D               	movwf	btemp+11,c
 11641                           
 11642                           ;stkvar	___fttol@f1 @ sp[(-6)+-3]
 11643  0030F0  0EF7               	movlw	-9
 11644  0030F2  CFE3 F058          	movff	plusw1,btemp+6
 11645  0030F6  0EF8               	movlw	-8
 11646  0030F8  CFE3 F059          	movff	plusw1,btemp+7
 11647  0030FC  0EF9               	movlw	-7
 11648  0030FE  CFE3 F05A          	movff	plusw1,btemp+8
 11649  003102  285D               	incf	btemp+11,w,c
 11650  003104  6E52               	movwf	btemp,c
 11651  003106  D004               	goto	u1790
 11652  003108                     u1795:
 11653  003108  90D8               	bcf	status,0,c
 11654  00310A  325A               	rrcf	btemp+8,f,c
 11655  00310C  3259               	rrcf	btemp+7,f,c
 11656  00310E  3258               	rrcf	btemp+6,f,c
 11657  003110                     u1790:
 11658  003110  2E52               	decfsz	btemp,f,c
 11659  003112  D7FA               	goto	u1795
 11660  003114  5058               	movf	btemp+6,w,c
 11661  003116  6E5D               	movwf	btemp+11,c
 11662                           
 11663                           ;stkvar	___fttol@sign1 @ sp[(-6)+5]
 11664  003118  0EFF               	movlw	-1
 11665  00311A  C05D  FFE3         	movff	btemp+11,plusw1
 11666                           
 11667                           ;stkvar	___fttol@f1 @ sp[(-6)+-3]
 11668  00311E  0EF8               	movlw	-8
 11669  003120  8EE3               	bsf	plusw1,7,c
 11670                           
 11671                           ;stkvar	___fttol@f1 @ sp[(-6)+-3]
 11672  003122  0EF9               	movlw	-7
 11673  003124  6AE3               	clrf	plusw1,c
 11674                           
 11675                           ;stkvar	___fttol@f1 @ sp[(-6)+-3]
 11676  003126  0EF7               	movlw	-9
 11677  003128  CFE3 F05B          	movff	plusw1,btemp+9
 11678  00312C  0EF8               	movlw	-8
 11679  00312E  CFE3 F05C          	movff	plusw1,btemp+10
 11680  003132  0EF9               	movlw	-7
 11681  003134  CFE3 F05D          	movff	plusw1,btemp+11
 11682  003138  505B               	movf	btemp+9,w,c
 11683  00313A  6E56               	movwf	btemp+4,c
 11684  00313C  505C               	movf	btemp+10,w,c
 11685  00313E  6E57               	movwf	btemp+5,c
 11686  003140  505D               	movf	btemp+11,w,c
 11687  003142  6E58               	movwf	btemp+6,c
 11688  003144  6A59               	clrf	btemp+7,c
 11689                           
 11690                           ;stkvar	___fttol@lval @ sp[(-6)+0]
 11691  003146  0EFA               	movlw	-6
 11692  003148  C056  FFE3         	movff	btemp+4,plusw1
 11693  00314C  0EFB               	movlw	-5
 11694  00314E  C057  FFE3         	movff	btemp+5,plusw1
 11695  003152  0EFC               	movlw	-4
 11696  003154  C058  FFE3         	movff	btemp+6,plusw1
 11697  003158  0EFD               	movlw	-3
 11698  00315A  C059  FFE3         	movff	btemp+7,plusw1
 11699                           
 11700                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11701  00315E  0EFE               	movlw	-2
 11702  003160  CFE3 F052          	movff	plusw1,btemp
 11703  003164  0E8E               	movlw	142
 11704  003166  5E52               	subwf	btemp,f,c
 11705  003168  0EFE               	movlw	-2
 11706  00316A  C052  FFE3         	movff	btemp,plusw1
 11707                           
 11708                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11709  00316E  0EFE               	movlw	-2
 11710  003170  AEE3               	btfss	plusw1,7,c
 11711  003172  D014               	goto	l2528
 11712                           
 11713                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11714  003174  0EFE               	movlw	-2
 11715  003176  50E3               	movf	plusw1,w,c
 11716  003178  0A80               	xorlw	128
 11717  00317A  0F8F               	addlw	143
 11718  00317C  A0D8               	btfss	status,0,c
 11719  00317E  D7B0               	goto	l2504
 11720  003180                     l2526:
 11721                           
 11722                           ;stkvar	___fttol@lval @ sp[(-6)+0]
 11723  003180  90D8               	bcf	status,0,c
 11724  003182  0EFD               	movlw	-3
 11725  003184  32E3               	rrcf	plusw1,f,c
 11726  003186  0EFC               	movlw	-4
 11727  003188  32E3               	rrcf	plusw1,f,c
 11728  00318A  0EFB               	movlw	-5
 11729  00318C  32E3               	rrcf	plusw1,f,c
 11730  00318E  0EFA               	movlw	-6
 11731  003190  32E3               	rrcf	plusw1,f,c
 11732                           
 11733                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11734  003192  0EFE               	movlw	-2
 11735  003194  2AE3               	incf	plusw1,f,c
 11736  003196  B4D8               	btfsc	status,2,c
 11737  003198  D017               	goto	l2538
 11738  00319A  D7F2               	goto	l2526
 11739  00319C                     l2528:
 11740                           
 11741                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11742  00319C  0EFE               	movlw	-2
 11743  00319E  CFE3 F052          	movff	plusw1,btemp
 11744  0031A2  0E17               	movlw	23
 11745  0031A4  6452               	cpfsgt	btemp,c
 11746  0031A6  D00C               	goto	l2536
 11747  0031A8  D79B               	goto	l2504
 11748  0031AA                     l2534:
 11749                           
 11750                           ;stkvar	___fttol@lval @ sp[(-6)+0]
 11751  0031AA  90D8               	bcf	status,0,c
 11752  0031AC  0EFA               	movlw	-6
 11753  0031AE  36E3               	rlcf	plusw1,f,c
 11754  0031B0  0EFB               	movlw	-5
 11755  0031B2  36E3               	rlcf	plusw1,f,c
 11756  0031B4  0EFC               	movlw	-4
 11757  0031B6  36E3               	rlcf	plusw1,f,c
 11758  0031B8  0EFD               	movlw	-3
 11759  0031BA  36E3               	rlcf	plusw1,f,c
 11760                           
 11761                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11762  0031BC  0EFE               	movlw	-2
 11763  0031BE  06E3               	decf	plusw1,f,c
 11764  0031C0                     l2536:
 11765                           
 11766                           ;stkvar	___fttol@exp1 @ sp[(-6)+4]
 11767  0031C0  0EFE               	movlw	-2
 11768  0031C2  50E3               	movf	plusw1,w,c
 11769  0031C4  A4D8               	btfss	status,2,c
 11770  0031C6  D7F1               	goto	l2534
 11771  0031C8                     l2538:
 11772                           
 11773                           ;stkvar	___fttol@sign1 @ sp[(-6)+5]
 11774  0031C8  0EFF               	movlw	-1
 11775  0031CA  50E3               	movf	plusw1,w,c
 11776  0031CC  B4D8               	btfsc	status,2,c
 11777  0031CE  D011               	goto	l2542
 11778                           
 11779                           ;stkvar	___fttol@lval @ sp[(-6)+0]
 11780                           ;stkvar	___fttol@lval @ sp[(-6)+0]
 11781  0031D0  0EFA               	movlw	-6
 11782  0031D2  6CE3               	negf	plusw1,c
 11783  0031D4  0EFB               	movlw	-5
 11784  0031D6  1EE3               	comf	plusw1,f,c
 11785  0031D8  0EFC               	movlw	-4
 11786  0031DA  1EE3               	comf	plusw1,f,c
 11787  0031DC  0EFD               	movlw	-3
 11788  0031DE  1EE3               	comf	plusw1,f,c
 11789  0031E0  E308               	bnc	u1860
 11790  0031E2  0EFB               	movlw	-5
 11791  0031E4  2AE3               	incf	plusw1,f,c
 11792  0031E6  E305               	bnc	u1860
 11793  0031E8  0EFC               	movlw	-4
 11794  0031EA  2AE3               	incf	plusw1,f,c
 11795  0031EC  E302               	bnc	u1860
 11796  0031EE  0EFD               	movlw	-3
 11797  0031F0  2AE3               	incf	plusw1,f,c
 11798  0031F2                     u1860:
 11799  0031F2                     l2542:
 11800                           
 11801                           ;stkvar	___fttol@lval @ sp[(-6)+0]
 11802  0031F2  0EFA               	movlw	-6
 11803  0031F4  CFE3 F052          	movff	plusw1,btemp
 11804  0031F8  0EFB               	movlw	-5
 11805  0031FA  CFE3 F053          	movff	plusw1,btemp+1
 11806  0031FE  0EFC               	movlw	-4
 11807  003200  CFE3 F054          	movff	plusw1,btemp+2
 11808  003204  0EFD               	movlw	-3
 11809  003206  CFE3 F055          	movff	plusw1,btemp+3
 11810  00320A                     l1097:
 11811                           
 11812                           ; ___fttol: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsi
      +                          ze = 3, vargsize = 0
 11813  00320A  0EF7               	movlw	247
 11814  00320C  26E1               	addwf	fsr1l,f,c
 11815  00320E  0EFF               	movlw	255
 11816  003210  22E2               	addwfc	fsr1h,f,c
 11817  003212  0012               	return		;funcret
 11818  003214                     __end_of___fttol:
 11819                           	opt stack 0
 11820                           tblptru	equ	0xFF8
 11821                           tblptrh	equ	0xFF7
 11822                           tblptrl	equ	0xFF6
 11823                           tablat	equ	0xFF5
 11824                           prodh	equ	0xFF4
 11825                           prodl	equ	0xFF3
 11826                           intcon	equ	0xFF2
 11827                           intcon2	equ	0xFF1
 11828                           indf0	equ	0xFEF
 11829                           postinc0	equ	0xFEE
 11830                           fsr0h	equ	0xFEA
 11831                           fsr0l	equ	0xFE9
 11832                           wreg	equ	0xFE8
 11833                           postinc1	equ	0xFE6
 11834                           postdec1	equ	0xFE5
 11835                           plusw1	equ	0xFE3
 11836                           fsr1h	equ	0xFE2
 11837                           fsr1l	equ	0xFE1
 11838                           indf2	equ	0xFDF
 11839                           postinc2	equ	0xFDE
 11840                           postdec2	equ	0xFDD
 11841                           fsr2h	equ	0xFDA
 11842                           fsr2l	equ	0xFD9
 11843                           status	equ	0xFD8
 11844                           
 11845 ;; *************** function ___lldiv *****************
 11846 ;; Defined at:
 11847 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/lldiv.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;  dividend        4  [STACK] unsigned long 
 11850 ;;  divisor         4  [STACK] unsigned long 
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;  quotient        4  [STACK] unsigned long 
 11853 ;;  counter         1  [STACK] unsigned char 
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  4  [STACK] unsigned long 
 11856 ;; Registers used:
 11857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11863 ;;      Params:         0       0       0       0       0       0       0
 11864 ;;      Locals:         0       0       0       0       0       0       0
 11865 ;;      Temps:          0       0       0       0       0       0       0
 11866 ;;      Totals:         0       0       0       0       0       0       0
 11867 ;;Total ram usage:        0 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:   10
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_sprintf
 11874 ;; This function uses a reentrant model
 11875 ;;
 11876                           
 11877                           	psect	text36
 11878  003A9A                     __ptext36:
 11879                           	opt stack 0
 11880  003A9A                     ___lldiv:
 11881                           	opt stack 0
 11882                           
 11883                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0
 11884  003A9A  0E05               	movlw	5
 11885  003A9C  26E1               	addwf	fsr1l,f,c
 11886  003A9E  0E00               	movlw	0
 11887  003AA0  22E2               	addwfc	fsr1h,f,c
 11888                           
 11889                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
 11890                           
 11891                           ;incstack = 0
 11892  003AA2  0EFB               	movlw	-5
 11893  003AA4  6AE3               	clrf	plusw1,c
 11894  003AA6  0EFC               	movlw	-4
 11895  003AA8  6AE3               	clrf	plusw1,c
 11896  003AAA  0EFD               	movlw	-3
 11897  003AAC  6AE3               	clrf	plusw1,c
 11898  003AAE  0EFE               	movlw	-2
 11899  003AB0  6AE3               	clrf	plusw1,c
 11900                           
 11901                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
 11902  003AB2  0EF3               	movlw	-13
 11903  003AB4  50E3               	movf	plusw1,w,c
 11904  003AB6  E10A               	bnz	u1870
 11905  003AB8  0EF4               	movlw	-12
 11906  003ABA  50E3               	movf	plusw1,w,c
 11907  003ABC  E107               	bnz	u1870
 11908  003ABE  0EF5               	movlw	-11
 11909  003AC0  50E3               	movf	plusw1,w,c
 11910  003AC2  E104               	bnz	u1870
 11911  003AC4  0EF6               	movlw	-10
 11912  003AC6  50E3               	movf	plusw1,w,c
 11913  003AC8  B4D8               	btfsc	status,2,c
 11914  003ACA  D057               	goto	l2568
 11915  003ACC                     u1870:
 11916                           
 11917                           ;stkvar	___lldiv@counter @ sp[(-5)+4]
 11918  003ACC  0EFF               	movlw	-1
 11919  003ACE  6AE3               	clrf	plusw1,c
 11920  003AD0  D00A               	goto	L22
 11921  003AD2                     l2552:
 11922                           
 11923                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
 11924  003AD2  90D8               	bcf	status,0,c
 11925  003AD4  0EF3               	movlw	-13
 11926  003AD6  36E3               	rlcf	plusw1,f,c
 11927  003AD8  0EF4               	movlw	-12
 11928  003ADA  36E3               	rlcf	plusw1,f,c
 11929  003ADC  0EF5               	movlw	-11
 11930  003ADE  36E3               	rlcf	plusw1,f,c
 11931  003AE0  0EF6               	movlw	-10
 11932  003AE2  36E3               	rlcf	plusw1,f,c
 11933                           
 11934                           ;stkvar	___lldiv@counter @ sp[(-5)+4]
 11935  003AE4  0EFF               	movlw	-1
 11936  003AE6                     L22:
 11937  003AE6  2AE3               	incf	plusw1,f,c
 11938                           
 11939                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
 11940  003AE8  0EF6               	movlw	-10
 11941  003AEA  AEE3               	btfss	plusw1,7,c
 11942  003AEC  D7F2               	goto	l2552
 11943  003AEE                     l2556:
 11944                           
 11945                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
 11946  003AEE  90D8               	bcf	status,0,c
 11947  003AF0  0EFB               	movlw	-5
 11948  003AF2  36E3               	rlcf	plusw1,f,c
 11949  003AF4  0EFC               	movlw	-4
 11950  003AF6  36E3               	rlcf	plusw1,f,c
 11951  003AF8  0EFD               	movlw	-3
 11952  003AFA  36E3               	rlcf	plusw1,f,c
 11953  003AFC  0EFE               	movlw	-2
 11954  003AFE  36E3               	rlcf	plusw1,f,c
 11955                           
 11956                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
 11957                           ;stkvar	___lldiv@dividend @ sp[(-5)+-4]
 11958  003B00  50E1               	movf	fsr1l,w,c
 11959  003B02  0FF7               	addlw	-9
 11960  003B04  6ED9               	movwf	fsr2l,c
 11961  003B06  50E2               	movf	fsr1h,w,c
 11962  003B08  6EDA               	movwf	fsr2h,c
 11963  003B0A  0EFF               	movlw	255
 11964  003B0C  22DA               	addwfc	fsr2h,f,c
 11965  003B0E  0EF3               	movlw	-13
 11966  003B10  50E3               	movf	plusw1,w,c
 11967  003B12  5CDE               	subwf	postinc2,w,c
 11968  003B14  0EF4               	movlw	-12
 11969  003B16  50E3               	movf	plusw1,w,c
 11970  003B18  58DE               	subwfb	postinc2,w,c
 11971  003B1A  0EF5               	movlw	-11
 11972  003B1C  50E3               	movf	plusw1,w,c
 11973  003B1E  58DE               	subwfb	postinc2,w,c
 11974  003B20  0EF6               	movlw	-10
 11975  003B22  50E3               	movf	plusw1,w,c
 11976  003B24  58DE               	subwfb	postinc2,w,c
 11977  003B26  A0D8               	btfss	status,0,c
 11978  003B28  D015               	goto	l2564
 11979                           
 11980                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
 11981                           ;stkvar	___lldiv@dividend @ sp[(-5)+-4]
 11982  003B2A  50E1               	movf	fsr1l,w,c
 11983  003B2C  0FF7               	addlw	-9
 11984  003B2E  6ED9               	movwf	fsr2l,c
 11985  003B30  50E2               	movf	fsr1h,w,c
 11986  003B32  6EDA               	movwf	fsr2h,c
 11987  003B34  0EFF               	movlw	255
 11988  003B36  22DA               	addwfc	fsr2h,f,c
 11989  003B38  0EF3               	movlw	-13
 11990  003B3A  50E3               	movf	plusw1,w,c
 11991  003B3C  5EDE               	subwf	postinc2,f,c
 11992  003B3E  0EF4               	movlw	-12
 11993  003B40  50E3               	movf	plusw1,w,c
 11994  003B42  5ADE               	subwfb	postinc2,f,c
 11995  003B44  0EF5               	movlw	-11
 11996  003B46  50E3               	movf	plusw1,w,c
 11997  003B48  5ADE               	subwfb	postinc2,f,c
 11998  003B4A  0EF6               	movlw	-10
 11999  003B4C  50E3               	movf	plusw1,w,c
 12000  003B4E  5ADE               	subwfb	postinc2,f,c
 12001                           
 12002                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
 12003  003B50  0EFB               	movlw	-5
 12004  003B52  80E3               	bsf	plusw1,0,c
 12005  003B54                     l2564:
 12006                           
 12007                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
 12008  003B54  90D8               	bcf	status,0,c
 12009  003B56  0EF6               	movlw	-10
 12010  003B58  32E3               	rrcf	plusw1,f,c
 12011  003B5A  0EF5               	movlw	-11
 12012  003B5C  32E3               	rrcf	plusw1,f,c
 12013  003B5E  0EF4               	movlw	-12
 12014  003B60  32E3               	rrcf	plusw1,f,c
 12015  003B62  0EF3               	movlw	-13
 12016  003B64  32E3               	rrcf	plusw1,f,c
 12017                           
 12018                           ;stkvar	___lldiv@counter @ sp[(-5)+4]
 12019  003B66  0EFF               	movlw	-1
 12020  003B68  50E3               	movf	plusw1,w,c
 12021  003B6A  6E52               	movwf	btemp,c
 12022  003B6C  0E01               	movlw	1
 12023  003B6E  5E52               	subwf	btemp,f,c
 12024  003B70  0EFF               	movlw	-1
 12025  003B72  C052  FFE3         	movff	btemp,plusw1
 12026  003B76  A4D8               	btfss	status,2,c
 12027  003B78  D7BA               	goto	l2556
 12028  003B7A                     l2568:
 12029                           
 12030                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
 12031  003B7A  0EFB               	movlw	-5
 12032  003B7C  CFE3 F052          	movff	plusw1,btemp
 12033  003B80  0EFC               	movlw	-4
 12034  003B82  CFE3 F053          	movff	plusw1,btemp+1
 12035  003B86  0EFD               	movlw	-3
 12036  003B88  CFE3 F054          	movff	plusw1,btemp+2
 12037  003B8C  0EFE               	movlw	-2
 12038  003B8E  CFE3 F055          	movff	plusw1,btemp+3
 12039                           
 12040                           ; ___lldiv: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12041  003B92  0EF3               	movlw	243
 12042  003B94  26E1               	addwf	fsr1l,f,c
 12043  003B96  0EFF               	movlw	255
 12044  003B98  22E2               	addwfc	fsr1h,f,c
 12045  003B9A  0012               	return		;funcret
 12046  003B9C                     __end_of___lldiv:
 12047                           	opt stack 0
 12048                           tblptru	equ	0xFF8
 12049                           tblptrh	equ	0xFF7
 12050                           tblptrl	equ	0xFF6
 12051                           tablat	equ	0xFF5
 12052                           prodh	equ	0xFF4
 12053                           prodl	equ	0xFF3
 12054                           intcon	equ	0xFF2
 12055                           intcon2	equ	0xFF1
 12056                           indf0	equ	0xFEF
 12057                           postinc0	equ	0xFEE
 12058                           fsr0h	equ	0xFEA
 12059                           fsr0l	equ	0xFE9
 12060                           wreg	equ	0xFE8
 12061                           postinc1	equ	0xFE6
 12062                           postdec1	equ	0xFE5
 12063                           plusw1	equ	0xFE3
 12064                           fsr1h	equ	0xFE2
 12065                           fsr1l	equ	0xFE1
 12066                           indf2	equ	0xFDF
 12067                           postinc2	equ	0xFDE
 12068                           postdec2	equ	0xFDD
 12069                           fsr2h	equ	0xFDA
 12070                           fsr2l	equ	0xFD9
 12071                           status	equ	0xFD8
 12072                           
 12073 ;; *************** function ___llmod *****************
 12074 ;; Defined at:
 12075 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/llmod.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  dividend        4  [STACK] unsigned long 
 12078 ;;  divisor         4  [STACK] unsigned long 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  counter         1  [STACK] unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  4  [STACK] unsigned long 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12090 ;;      Params:         0       0       0       0       0       0       0
 12091 ;;      Locals:         0       0       0       0       0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0
 12093 ;;      Totals:         0       0       0       0       0       0       0
 12094 ;;Total ram usage:        0 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:   10
 12097 ;; This function calls:
 12098 ;;		Nothing
 12099 ;; This function is called by:
 12100 ;;		_sprintf
 12101 ;; This function uses a reentrant model
 12102 ;;
 12103                           
 12104                           	psect	text37
 12105  003C9C                     __ptext37:
 12106                           	opt stack 0
 12107  003C9C                     ___llmod:
 12108                           	opt stack 0
 12109                           
 12110                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0
 12111  003C9C  52E6               	movf	postinc1,f,c
 12112                           
 12113                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
 12114                           
 12115                           ;incstack = 0
 12116  003C9E  0EF7               	movlw	-9
 12117  003CA0  50E3               	movf	plusw1,w,c
 12118  003CA2  E10A               	bnz	u1910
 12119  003CA4  0EF8               	movlw	-8
 12120  003CA6  50E3               	movf	plusw1,w,c
 12121  003CA8  E107               	bnz	u1910
 12122  003CAA  0EF9               	movlw	-7
 12123  003CAC  50E3               	movf	plusw1,w,c
 12124  003CAE  E104               	bnz	u1910
 12125  003CB0  0EFA               	movlw	-6
 12126  003CB2  50E3               	movf	plusw1,w,c
 12127  003CB4  B4D8               	btfsc	status,2,c
 12128  003CB6  D04C               	goto	l2588
 12129  003CB8                     u1910:
 12130                           
 12131                           ;stkvar	___llmod@counter @ sp[(-1)+0]
 12132  003CB8  0EFF               	movlw	-1
 12133  003CBA  6AE3               	clrf	plusw1,c
 12134  003CBC  D00A               	goto	L23
 12135  003CBE                     l2576:
 12136                           
 12137                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
 12138  003CBE  90D8               	bcf	status,0,c
 12139  003CC0  0EF7               	movlw	-9
 12140  003CC2  36E3               	rlcf	plusw1,f,c
 12141  003CC4  0EF8               	movlw	-8
 12142  003CC6  36E3               	rlcf	plusw1,f,c
 12143  003CC8  0EF9               	movlw	-7
 12144  003CCA  36E3               	rlcf	plusw1,f,c
 12145  003CCC  0EFA               	movlw	-6
 12146  003CCE  36E3               	rlcf	plusw1,f,c
 12147                           
 12148                           ;stkvar	___llmod@counter @ sp[(-1)+0]
 12149  003CD0  0EFF               	movlw	-1
 12150  003CD2                     L23:
 12151  003CD2  2AE3               	incf	plusw1,f,c
 12152                           
 12153                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
 12154  003CD4  0EFA               	movlw	-6
 12155  003CD6  AEE3               	btfss	plusw1,7,c
 12156  003CD8  D7F2               	goto	l2576
 12157  003CDA                     l2580:
 12158                           
 12159                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
 12160                           ;stkvar	___llmod@dividend @ sp[(-1)+-4]
 12161  003CDA  50E1               	movf	fsr1l,w,c
 12162  003CDC  0FFB               	addlw	-5
 12163  003CDE  6ED9               	movwf	fsr2l,c
 12164  003CE0  50E2               	movf	fsr1h,w,c
 12165  003CE2  6EDA               	movwf	fsr2h,c
 12166  003CE4  0EFF               	movlw	255
 12167  003CE6  22DA               	addwfc	fsr2h,f,c
 12168  003CE8  0EF7               	movlw	-9
 12169  003CEA  50E3               	movf	plusw1,w,c
 12170  003CEC  5CDE               	subwf	postinc2,w,c
 12171  003CEE  0EF8               	movlw	-8
 12172  003CF0  50E3               	movf	plusw1,w,c
 12173  003CF2  58DE               	subwfb	postinc2,w,c
 12174  003CF4  0EF9               	movlw	-7
 12175  003CF6  50E3               	movf	plusw1,w,c
 12176  003CF8  58DE               	subwfb	postinc2,w,c
 12177  003CFA  0EFA               	movlw	-6
 12178  003CFC  50E3               	movf	plusw1,w,c
 12179  003CFE  58DE               	subwfb	postinc2,w,c
 12180  003D00  A0D8               	btfss	status,0,c
 12181  003D02  D013               	goto	l2584
 12182                           
 12183                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
 12184                           ;stkvar	___llmod@dividend @ sp[(-1)+-4]
 12185  003D04  50E1               	movf	fsr1l,w,c
 12186  003D06  0FFB               	addlw	-5
 12187  003D08  6ED9               	movwf	fsr2l,c
 12188  003D0A  50E2               	movf	fsr1h,w,c
 12189  003D0C  6EDA               	movwf	fsr2h,c
 12190  003D0E  0EFF               	movlw	255
 12191  003D10  22DA               	addwfc	fsr2h,f,c
 12192  003D12  0EF7               	movlw	-9
 12193  003D14  50E3               	movf	plusw1,w,c
 12194  003D16  5EDE               	subwf	postinc2,f,c
 12195  003D18  0EF8               	movlw	-8
 12196  003D1A  50E3               	movf	plusw1,w,c
 12197  003D1C  5ADE               	subwfb	postinc2,f,c
 12198  003D1E  0EF9               	movlw	-7
 12199  003D20  50E3               	movf	plusw1,w,c
 12200  003D22  5ADE               	subwfb	postinc2,f,c
 12201  003D24  0EFA               	movlw	-6
 12202  003D26  50E3               	movf	plusw1,w,c
 12203  003D28  5ADE               	subwfb	postinc2,f,c
 12204  003D2A                     l2584:
 12205                           
 12206                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
 12207  003D2A  90D8               	bcf	status,0,c
 12208  003D2C  0EFA               	movlw	-6
 12209  003D2E  32E3               	rrcf	plusw1,f,c
 12210  003D30  0EF9               	movlw	-7
 12211  003D32  32E3               	rrcf	plusw1,f,c
 12212  003D34  0EF8               	movlw	-8
 12213  003D36  32E3               	rrcf	plusw1,f,c
 12214  003D38  0EF7               	movlw	-9
 12215  003D3A  32E3               	rrcf	plusw1,f,c
 12216                           
 12217                           ;stkvar	___llmod@counter @ sp[(-1)+0]
 12218  003D3C  0EFF               	movlw	-1
 12219  003D3E  50E3               	movf	plusw1,w,c
 12220  003D40  6E52               	movwf	btemp,c
 12221  003D42  0E01               	movlw	1
 12222  003D44  5E52               	subwf	btemp,f,c
 12223  003D46  0EFF               	movlw	-1
 12224  003D48  C052  FFE3         	movff	btemp,plusw1
 12225  003D4C  A4D8               	btfss	status,2,c
 12226  003D4E  D7C5               	goto	l2580
 12227  003D50                     l2588:
 12228                           
 12229                           ;stkvar	___llmod@dividend @ sp[(-1)+-4]
 12230  003D50  0EFB               	movlw	-5
 12231  003D52  CFE3 F052          	movff	plusw1,btemp
 12232  003D56  0EFC               	movlw	-4
 12233  003D58  CFE3 F053          	movff	plusw1,btemp+1
 12234  003D5C  0EFD               	movlw	-3
 12235  003D5E  CFE3 F054          	movff	plusw1,btemp+2
 12236  003D62  0EFE               	movlw	-2
 12237  003D64  CFE3 F055          	movff	plusw1,btemp+3
 12238                           
 12239                           ; ___llmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12240  003D68  0EF7               	movlw	247
 12241  003D6A  26E1               	addwf	fsr1l,f,c
 12242  003D6C  0EFF               	movlw	255
 12243  003D6E  22E2               	addwfc	fsr1h,f,c
 12244  003D70  0012               	return		;funcret
 12245  003D72                     __end_of___llmod:
 12246                           	opt stack 0
 12247                           tblptru	equ	0xFF8
 12248                           tblptrh	equ	0xFF7
 12249                           tblptrl	equ	0xFF6
 12250                           tablat	equ	0xFF5
 12251                           prodh	equ	0xFF4
 12252                           prodl	equ	0xFF3
 12253                           intcon	equ	0xFF2
 12254                           intcon2	equ	0xFF1
 12255                           indf0	equ	0xFEF
 12256                           postinc0	equ	0xFEE
 12257                           fsr0h	equ	0xFEA
 12258                           fsr0l	equ	0xFE9
 12259                           wreg	equ	0xFE8
 12260                           postinc1	equ	0xFE6
 12261                           postdec1	equ	0xFE5
 12262                           plusw1	equ	0xFE3
 12263                           fsr1h	equ	0xFE2
 12264                           fsr1l	equ	0xFE1
 12265                           indf2	equ	0xFDF
 12266                           postinc2	equ	0xFDE
 12267                           postdec2	equ	0xFDD
 12268                           fsr2h	equ	0xFDA
 12269                           fsr2l	equ	0xFD9
 12270                           status	equ	0xFD8
 12271                           
 12272 ;; *************** function ___lltoft *****************
 12273 ;; Defined at:
 12274 ;;		line 35 in file "/Applications/microchip/xc8/v1.38/sources/common/lltoft.c"
 12275 ;; Parameters:    Size  Location     Type
 12276 ;;  c               4  [STACK] unsigned long 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;  exp             1  [STACK] unsigned char 
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  3  [STACK] float 
 12281 ;; Registers used:
 12282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+9, btemp+10, btemp+11
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/0
 12285 ;;		On exit  : 0/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12288 ;;      Params:         0       0       0       0       0       0       0
 12289 ;;      Locals:         0       0       0       0       0       0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0
 12291 ;;      Totals:         0       0       0       0       0       0       0
 12292 ;;Total ram usage:        0 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:   11
 12295 ;; This function calls:
 12296 ;;		___ftpack
 12297 ;; This function is called by:
 12298 ;;		_sprintf
 12299 ;; This function uses a reentrant model
 12300 ;;
 12301                           
 12302                           	psect	text38
 12303  004376                     __ptext38:
 12304                           	opt stack 0
 12305  004376                     ___lltoft:
 12306                           	opt stack 0
 12307                           
 12308                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
 12309  004376  52E6               	movf	postinc1,f,c
 12310                           
 12311                           ;incstack = 0
 12312  004378  0E8E               	movlw	142
 12313  00437A  6E5D               	movwf	btemp+11,c
 12314                           
 12315                           ;stkvar	___lltoft@exp @ sp[(-1)+0]
 12316  00437C  0EFF               	movlw	-1
 12317  00437E  C05D  FFE3         	movff	btemp+11,plusw1
 12318  004382  D00B               	goto	l2596
 12319  004384                     l2594:
 12320                           
 12321                           ;stkvar	___lltoft@c @ sp[(-1)+-4]
 12322  004384  90D8               	bcf	status,0,c
 12323  004386  0EFE               	movlw	-2
 12324  004388  32E3               	rrcf	plusw1,f,c
 12325  00438A  0EFD               	movlw	-3
 12326  00438C  32E3               	rrcf	plusw1,f,c
 12327  00438E  0EFC               	movlw	-4
 12328  004390  32E3               	rrcf	plusw1,f,c
 12329  004392  0EFB               	movlw	-5
 12330  004394  32E3               	rrcf	plusw1,f,c
 12331                           
 12332                           ;stkvar	___lltoft@exp @ sp[(-1)+0]
 12333  004396  0EFF               	movlw	-1
 12334  004398  2AE3               	incf	plusw1,f,c
 12335  00439A                     l2596:
 12336                           
 12337                           ;stkvar	___lltoft@c @ sp[(-1)+-4]
 12338  00439A  50E1               	movf	fsr1l,w,c
 12339  00439C  0FFB               	addlw	-5
 12340  00439E  6ED9               	movwf	fsr2l,c
 12341  0043A0  50E2               	movf	fsr1h,w,c
 12342  0043A2  6EDA               	movwf	fsr2h,c
 12343  0043A4  0EFF               	movlw	255
 12344  0043A6  22DA               	addwfc	fsr2h,f,c
 12345  0043A8  52DE               	movf	postinc2,f,c
 12346  0043AA  52DE               	movf	postinc2,f,c
 12347  0043AC  52DE               	movf	postinc2,f,c
 12348  0043AE  0EFF               	movlw	255
 12349  0043B0  14DD               	andwf	postdec2,w,c
 12350  0043B2  A4D8               	btfss	status,2,c
 12351  0043B4  D7E7               	goto	l2594
 12352  0043B6  0E00               	movlw	0
 12353  0043B8  6EE6               	movwf	postinc1,c
 12354                           
 12355                           ;stkvar	___lltoft@exp @ sp[(-2)+0]
 12356  0043BA  0EFE               	movlw	-2
 12357  0043BC  50E3               	movf	plusw1,w,c
 12358  0043BE  6EE6               	movwf	postinc1,c
 12359                           
 12360                           ;stkvar	___lltoft@c @ sp[(-3)+-4]
 12361  0043C0  0EF9               	movlw	-7
 12362  0043C2  CFE3 FFE6          	movff	plusw1,postinc1
 12363  0043C6  CFE3 FFE6          	movff	plusw1,postinc1
 12364  0043CA  CFE3 FFE6          	movff	plusw1,postinc1
 12365  0043CE  ECC1  F01C         	call	___ftpack	;wreg free
 12366                           
 12367                           ; ___lltoft: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 12368  0043D2  0EFB               	movlw	251
 12369  0043D4  26E1               	addwf	fsr1l,f,c
 12370  0043D6  0EFF               	movlw	255
 12371  0043D8  22E2               	addwfc	fsr1h,f,c
 12372  0043DA  0012               	return		;funcret
 12373  0043DC                     __end_of___lltoft:
 12374                           	opt stack 0
 12375                           tblptru	equ	0xFF8
 12376                           tblptrh	equ	0xFF7
 12377                           tblptrl	equ	0xFF6
 12378                           tablat	equ	0xFF5
 12379                           prodh	equ	0xFF4
 12380                           prodl	equ	0xFF3
 12381                           intcon	equ	0xFF2
 12382                           intcon2	equ	0xFF1
 12383                           indf0	equ	0xFEF
 12384                           postinc0	equ	0xFEE
 12385                           fsr0h	equ	0xFEA
 12386                           fsr0l	equ	0xFE9
 12387                           wreg	equ	0xFE8
 12388                           postinc1	equ	0xFE6
 12389                           postdec1	equ	0xFE5
 12390                           plusw1	equ	0xFE3
 12391                           fsr1h	equ	0xFE2
 12392                           fsr1l	equ	0xFE1
 12393                           indf2	equ	0xFDF
 12394                           postinc2	equ	0xFDE
 12395                           postdec2	equ	0xFDD
 12396                           fsr2h	equ	0xFDA
 12397                           fsr2l	equ	0xFD9
 12398                           status	equ	0xFD8
 12399                           
 12400 ;; *************** function _read_EEPROM *****************
 12401 ;; Defined at:
 12402 ;;		line 635 in file "lab7.c"
 12403 ;; Parameters:    Size  Location     Type
 12404 ;;  add             2  [STACK] int 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;		None
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  1  [STACK] unsigned char 
 12409 ;; Registers used:
 12410 ;;		fsr1l, fsr1h, btemp
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12416 ;;      Params:         0       0       0       0       0       0       0
 12417 ;;      Locals:         0       0       0       0       0       0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0
 12419 ;;      Totals:         0       0       0       0       0       0       0
 12420 ;;Total ram usage:        0 bytes
 12421 ;; Hardware stack levels used:    1
 12422 ;; Hardware stack levels required when called:   10
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_main
 12427 ;;		_resetPIR
 12428 ;;		_checkStatus
 12429 ;;		_mainScreen
 12430 ;; This function uses a reentrant model
 12431 ;;
 12432                           
 12433                           	psect	text39
 12434  00466C                     __ptext39:
 12435                           	opt stack 0
 12436  00466C                     _read_EEPROM:
 12437                           	opt stack 2
 12438                           
 12439                           ;lab7.c: 637: EEADR = add;
 12440                           ;stkvar	read_EEPROM@add @ sp[(0)+-2]
 12441                           
 12442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
 12443                           ;incstack = 0
 12444  00466C  0EFE               	movlw	-2
 12445  00466E  CFE3 FFA9          	movff	plusw1,4009	;volatile
 12446                           
 12447                           ;lab7.c: 638: EEPGD = 0;
 12448  004672  9EA6               	bcf	4006,7,c	;volatile
 12449                           
 12450                           ;lab7.c: 639: CFGS = 0;
 12451  004674  9CA6               	bcf	4006,6,c	;volatile
 12452                           
 12453                           ;lab7.c: 640: RD = 1;
 12454  004676  80A6               	bsf	4006,0,c	;volatile
 12455                           
 12456                           ;lab7.c: 641: return EEDATA;
 12457  004678  CFA8 F052          	movff	4008,btemp	;volatile
 12458                           
 12459                           ; _read_EEPROM: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 12460  00467C  52E5               	movf	postdec1,f,c
 12461  00467E  52E5               	movf	postdec1,f,c
 12462  004680  0012               	return		;funcret
 12463  004682                     __end_of_read_EEPROM:
 12464                           	opt stack 0
 12465                           tblptru	equ	0xFF8
 12466                           tblptrh	equ	0xFF7
 12467                           tblptrl	equ	0xFF6
 12468                           tablat	equ	0xFF5
 12469                           prodh	equ	0xFF4
 12470                           prodl	equ	0xFF3
 12471                           intcon	equ	0xFF2
 12472                           intcon2	equ	0xFF1
 12473                           indf0	equ	0xFEF
 12474                           postinc0	equ	0xFEE
 12475                           fsr0h	equ	0xFEA
 12476                           fsr0l	equ	0xFE9
 12477                           wreg	equ	0xFE8
 12478                           postinc1	equ	0xFE6
 12479                           postdec1	equ	0xFE5
 12480                           plusw1	equ	0xFE3
 12481                           fsr1h	equ	0xFE2
 12482                           fsr1l	equ	0xFE1
 12483                           indf2	equ	0xFDF
 12484                           postinc2	equ	0xFDE
 12485                           postdec2	equ	0xFDD
 12486                           fsr2h	equ	0xFDA
 12487                           fsr2l	equ	0xFD9
 12488                           status	equ	0xFD8
 12489                           
 12490 ;; *************** function _mainScreen *****************
 12491 ;; Defined at:
 12492 ;;		line 645 in file "lab7.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;		None
 12495 ;; Auto vars:     Size  Location     Type
 12496 ;;		None
 12497 ;; Return value:  Size  Location     Type
 12498 ;;                  1  [STACK] void 
 12499 ;; Registers used:
 12500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 12501 ;; Tracked objects:
 12502 ;;		On entry : 0/0
 12503 ;;		On exit  : 0/0
 12504 ;;		Unchanged: 0/0
 12505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12506 ;;      Params:         0       0       0       0       0       0       0
 12507 ;;      Locals:         0       0       0       0       0       0       0
 12508 ;;      Temps:          0       0       0       0       0       0       0
 12509 ;;      Totals:         0       0       0       0       0       0       0
 12510 ;;Total ram usage:        0 bytes
 12511 ;; Hardware stack levels used:    1
 12512 ;; Hardware stack levels required when called:   11
 12513 ;; This function calls:
 12514 ;;		_printChar
 12515 ;;		_read_EEPROM
 12516 ;; This function is called by:
 12517 ;;		_main
 12518 ;;		_resetPIR
 12519 ;;		_My_ISR_Low
 12520 ;;		_setPassword
 12521 ;;		_resetScreen
 12522 ;; This function uses a reentrant model
 12523 ;;
 12524                           
 12525                           	psect	text40
 12526  004090                     __ptext40:
 12527                           	opt stack 0
 12528  004090                     _mainScreen:
 12529                           	opt stack 1
 12530                           
 12531                           ;lab7.c: 647: printChar("\n\r***********************************************************
      +                          *");
 12532                           
 12533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 12534                           ;incstack = 0
 12535  004090  0ECC               	movlw	low STR_57
 12536  004092  6EE6               	movwf	postinc1,c
 12537  004094  0E75               	movlw	high STR_57
 12538  004096  6EE6               	movwf	postinc1,c
 12539  004098  EC0B  F021         	call	_printChar	;wreg free
 12540                           
 12541                           ;lab7.c: 648: printChar("\n\r*                  Alarm System is Connected               
      +                          *");
 12542  00409C  0E4E               	movlw	low STR_58
 12543  00409E  6EE6               	movwf	postinc1,c
 12544  0040A0  0E75               	movlw	high STR_58
 12545  0040A2  6EE6               	movwf	postinc1,c
 12546  0040A4  EC0B  F021         	call	_printChar	;wreg free
 12547                           
 12548                           ;lab7.c: 649: printChar("\n\r*               CSE 3442: Embedded Systems I               
      +                          *");
 12549  0040A8  0E0F               	movlw	low STR_59
 12550  0040AA  6EE6               	movwf	postinc1,c
 12551  0040AC  0E75               	movlw	high STR_59
 12552  0040AE  6EE6               	movwf	postinc1,c
 12553  0040B0  EC0B  F021         	call	_printChar	;wreg free
 12554                           
 12555                           ;lab7.c: 650: printChar("\n\r*     Lab 7 (ABET) - Standalone PIC with Communication     
      +                          *");
 12556  0040B4  0E8D               	movlw	low STR_60
 12557  0040B6  6EE6               	movwf	postinc1,c
 12558  0040B8  0E75               	movlw	high STR_60
 12559  0040BA  6EE6               	movwf	postinc1,c
 12560  0040BC  EC0B  F021         	call	_printChar	;wreg free
 12561                           
 12562                           ;lab7.c: 651: printChar("\n\r*                      Suman Shrestha                      
      +                          *");
 12563  0040C0  0ED0               	movlw	low STR_61
 12564  0040C2  6EE6               	movwf	postinc1,c
 12565  0040C4  0E74               	movlw	high STR_61
 12566  0040C6  6EE6               	movwf	postinc1,c
 12567  0040C8  EC0B  F021         	call	_printChar	;wreg free
 12568                           
 12569                           ;lab7.c: 652: printChar("\n\r***********************************************************
      +                          *");
 12570  0040CC  0ECC               	movlw	low STR_57
 12571  0040CE  6EE6               	movwf	postinc1,c
 12572  0040D0  0E75               	movlw	high STR_57
 12573  0040D2  6EE6               	movwf	postinc1,c
 12574  0040D4  EC0B  F021         	call	_printChar	;wreg free
 12575                           
 12576                           ;lab7.c: 653: for(i = 0, address = 0xE0; i < 4;address++,i++)
 12577  0040D8  6A0A               	clrf	_i,c
 12578  0040DA  6A0B               	clrf	_i+1,c
 12579  0040DC  0E00               	movlw	0
 12580  0040DE  6E07               	movwf	_address+1,c
 12581  0040E0  0EE0               	movlw	224
 12582  0040E2  6E06               	movwf	_address,c
 12583  0040E4  D012               	goto	l2614
 12584  0040E6                     l2608:
 12585                           
 12586                           ;lab7.c: 654: {
 12587                           ;lab7.c: 655: password[i] = read_EEPROM(address);
 12588  0040E6  500A               	movf	_i,w,c
 12589  0040E8  240C               	addwf	_password,w,c
 12590  0040EA  6ED9               	movwf	fsr2l,c
 12591  0040EC  500B               	movf	_i+1,w,c
 12592  0040EE  200D               	addwfc	_password+1,w,c
 12593  0040F0  6EDA               	movwf	fsr2h,c
 12594  0040F2  C006  FFE6         	movff	_address,postinc1
 12595  0040F6  C007  FFE6         	movff	_address+1,postinc1
 12596  0040FA  EC36  F023         	call	_read_EEPROM	;wreg free
 12597  0040FE  5052               	movf	btemp,w,c
 12598  004100  6EDF               	movwf	indf2,c
 12599  004102  4A06               	infsnz	_address,f,c
 12600  004104  2A07               	incf	_address+1,f,c
 12601  004106  4A0A               	infsnz	_i,f,c
 12602  004108  2A0B               	incf	_i+1,f,c
 12603  00410A                     l2614:
 12604  00410A  BE0B               	btfsc	_i+1,7,c
 12605  00410C  D7EC               	goto	l2608
 12606  00410E  500B               	movf	_i+1,w,c
 12607  004110  E104               	bnz	u1960
 12608  004112  0E04               	movlw	4
 12609  004114  5C0A               	subwf	_i,w,c
 12610  004116  A0D8               	btfss	status,0,c
 12611  004118  D7E6               	goto	l2608
 12612  00411A                     u1960:
 12613                           
 12614                           ; _mainScreen: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12615  00411A  0012               	return		;funcret
 12616  00411C                     __end_of_mainScreen:
 12617                           	opt stack 0
 12618                           tblptru	equ	0xFF8
 12619                           tblptrh	equ	0xFF7
 12620                           tblptrl	equ	0xFF6
 12621                           tablat	equ	0xFF5
 12622                           prodh	equ	0xFF4
 12623                           prodl	equ	0xFF3
 12624                           intcon	equ	0xFF2
 12625                           intcon2	equ	0xFF1
 12626                           indf0	equ	0xFEF
 12627                           postinc0	equ	0xFEE
 12628                           fsr0h	equ	0xFEA
 12629                           fsr0l	equ	0xFE9
 12630                           wreg	equ	0xFE8
 12631                           postinc1	equ	0xFE6
 12632                           postdec1	equ	0xFE5
 12633                           plusw1	equ	0xFE3
 12634                           fsr1h	equ	0xFE2
 12635                           fsr1l	equ	0xFE1
 12636                           indf2	equ	0xFDF
 12637                           postinc2	equ	0xFDE
 12638                           postdec2	equ	0xFDD
 12639                           fsr2h	equ	0xFDA
 12640                           fsr2l	equ	0xFD9
 12641                           status	equ	0xFD8
 12642                           
 12643 ;; *************** function _login *****************
 12644 ;; Defined at:
 12645 ;;		line 505 in file "lab7.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;		None
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1  [STACK] void 
 12652 ;; Registers used:
 12653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12659 ;;      Params:         0       0       0       0       0       0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0
 12661 ;;      Temps:          0       0       0       0       0       0       0
 12662 ;;      Totals:         0       0       0       0       0       0       0
 12663 ;;Total ram usage:        0 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:   18
 12666 ;; This function calls:
 12667 ;;		_checkPassword
 12668 ;;		_checkStatus
 12669 ;;		_delay
 12670 ;;		_getTempPassword
 12671 ;;		_login
 12672 ;;		_mainMenu
 12673 ;;		_printChar
 12674 ;;		_resetScreen
 12675 ;; This function is called by:
 12676 ;;		_main
 12677 ;;		_setPassword
 12678 ;; This function uses a recursive model
 12679 ;;
 12680                           
 12681                           	psect	text41
 12682  0043DC                     __ptext41:
 12683                           	opt stack 0
 12684  0043DC                     _login:
 12685                           	opt stack 11
 12686                           
 12687                           ;lab7.c: 507: printChar("\r\nEnter the password to login: ");
 12688                           
 12689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 12690                           ;incstack = 0
 12691  0043DC  0E0E               	movlw	low STR_47
 12692  0043DE  6EE6               	movwf	postinc1,c
 12693  0043E0  0E7D               	movlw	high STR_47
 12694  0043E2  6EE6               	movwf	postinc1,c
 12695  0043E4  EC0B  F021         	call	_printChar	;wreg free
 12696                           
 12697                           ;lab7.c: 508: delay();
 12698  0043E8  ECE8  F022         	call	_delay	;wreg free
 12699                           
 12700                           ;lab7.c: 509: tempPass = getTempPassword();
 12701  0043EC  EC8E  F01B         	call	_getTempPassword	;wreg free
 12702  0043F0  C052  F016         	movff	btemp,_tempPass
 12703  0043F4  C053  F017         	movff	btemp+1,_tempPass+1
 12704                           
 12705                           ;lab7.c: 512: checkPassword();
 12706  0043F8  EC84  F021         	call	_checkPassword	;wreg free
 12707                           
 12708                           ;lab7.c: 514: if(valid == 4)
 12709  0043FC  0E04               	movlw	4
 12710  0043FE  181A               	xorwf	_valid,w,c
 12711  004400  101B               	iorwf	_valid+1,w,c
 12712  004402  A4D8               	btfss	status,2,c
 12713  004404  D008               	goto	l4000
 12714                           
 12715                           ;lab7.c: 515: {
 12716                           ;lab7.c: 516: checkStatus();
 12717  004406  EC04  F016         	call	_checkStatus	;wreg free
 12718                           
 12719                           ;lab7.c: 517: PORTBbits.RB3 = 1;
 12720  00440A  8681               	bsf	3969,3,c	;volatile
 12721                           
 12722                           ;lab7.c: 518: resetScreen();
 12723  00440C  EC41  F023         	call	_resetScreen	;wreg free
 12724                           
 12725                           ;lab7.c: 519: mainMenu();
 12726  004410  ECB1  F011         	call	_mainMenu	;wreg free
 12727                           
 12728                           ;lab7.c: 521: }
 12729  004414  0012               	return	
 12730  004416                     l4000:
 12731                           
 12732                           ;lab7.c: 522: else
 12733                           ;lab7.c: 523: {
 12734                           ;lab7.c: 524: printChar("\n\rIncorrect Password Entered!!\n\rTry Again!!");
 12735  004416  0E73               	movlw	low STR_48
 12736  004418  6EE6               	movwf	postinc1,c
 12737  00441A  0E79               	movlw	high STR_48
 12738  00441C  6EE6               	movwf	postinc1,c
 12739  00441E  EC0B  F021         	call	_printChar	;wreg free
 12740                           
 12741                           ;lab7.c: 525: delay();
 12742  004422  ECE8  F022         	call	_delay	;wreg free
 12743                           
 12744                           ;lab7.c: 526: delay();
 12745  004426  ECE8  F022         	call	_delay	;wreg free
 12746                           
 12747                           ;lab7.c: 527: login();
 12748  00442A  DFD8               	call	_login	;wreg free
 12749                           
 12750                           ; _login: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize
      +                           = 0, vargsize = 0
 12751  00442C  0012               	return		;funcret
 12752  00442E                     __end_of_login:
 12753                           	opt stack 0
 12754                           tblptru	equ	0xFF8
 12755                           tblptrh	equ	0xFF7
 12756                           tblptrl	equ	0xFF6
 12757                           tablat	equ	0xFF5
 12758                           prodh	equ	0xFF4
 12759                           prodl	equ	0xFF3
 12760                           intcon	equ	0xFF2
 12761                           intcon2	equ	0xFF1
 12762                           indf0	equ	0xFEF
 12763                           postinc0	equ	0xFEE
 12764                           fsr0h	equ	0xFEA
 12765                           fsr0l	equ	0xFE9
 12766                           wreg	equ	0xFE8
 12767                           postinc1	equ	0xFE6
 12768                           postdec1	equ	0xFE5
 12769                           plusw1	equ	0xFE3
 12770                           fsr1h	equ	0xFE2
 12771                           fsr1l	equ	0xFE1
 12772                           indf2	equ	0xFDF
 12773                           postinc2	equ	0xFDE
 12774                           postdec2	equ	0xFDD
 12775                           fsr2h	equ	0xFDA
 12776                           fsr2l	equ	0xFD9
 12777                           status	equ	0xFD8
 12778                           
 12779 ;; *************** function _resetScreen *****************
 12780 ;; Defined at:
 12781 ;;		line 1343 in file "lab7.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;		None
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;		None
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  1    wreg      void 
 12788 ;; Registers used:
 12789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12795 ;;      Params:         0       0       0       0       0       0       0
 12796 ;;      Locals:         0       0       0       0       0       0       0
 12797 ;;      Temps:          0       0       0       0       0       0       0
 12798 ;;      Totals:         0       0       0       0       0       0       0
 12799 ;;Total ram usage:        0 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; Hardware stack levels required when called:   15
 12802 ;; This function calls:
 12803 ;;		_componentStatus
 12804 ;;		_mainScreen
 12805 ;;		_printChar
 12806 ;; This function is called by:
 12807 ;;		_login
 12808 ;;		_mainMenu
 12809 ;;		_passcodeMenu
 12810 ;;		_setPassword
 12811 ;;		_pirMenu
 12812 ;;		_temperatureMenu
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text42
 12817  004682                     __ptext42:
 12818                           	opt stack 0
 12819  004682                     _resetScreen:
 12820                           	opt stack 14
 12821                           
 12822                           ;lab7.c: 1345: printChar("\033[2J");
 12823                           
 12824                           ;incstack = 0
 12825  004682  0EF6               	movlw	low STR_161
 12826  004684  6EE6               	movwf	postinc1,c
 12827  004686  0E7F               	movlw	high STR_161
 12828  004688  6EE6               	movwf	postinc1,c
 12829  00468A  EC0B  F021         	call	_printChar	;wreg free
 12830                           
 12831                           ;lab7.c: 1346: mainScreen();
 12832  00468E  EC48  F020         	call	_mainScreen	;wreg free
 12833                           
 12834                           ;lab7.c: 1347: componentStatus();
 12835  004692  ECF2  F01A         	call	_componentStatus	;wreg free
 12836  004696  0012               	return		;funcret
 12837  004698                     __end_of_resetScreen:
 12838                           	opt stack 0
 12839                           tblptru	equ	0xFF8
 12840                           tblptrh	equ	0xFF7
 12841                           tblptrl	equ	0xFF6
 12842                           tablat	equ	0xFF5
 12843                           prodh	equ	0xFF4
 12844                           prodl	equ	0xFF3
 12845                           intcon	equ	0xFF2
 12846                           intcon2	equ	0xFF1
 12847                           indf0	equ	0xFEF
 12848                           postinc0	equ	0xFEE
 12849                           fsr0h	equ	0xFEA
 12850                           fsr0l	equ	0xFE9
 12851                           wreg	equ	0xFE8
 12852                           postinc1	equ	0xFE6
 12853                           postdec1	equ	0xFE5
 12854                           plusw1	equ	0xFE3
 12855                           fsr1h	equ	0xFE2
 12856                           fsr1l	equ	0xFE1
 12857                           indf2	equ	0xFDF
 12858                           postinc2	equ	0xFDE
 12859                           postdec2	equ	0xFDD
 12860                           fsr2h	equ	0xFDA
 12861                           fsr2l	equ	0xFD9
 12862                           status	equ	0xFD8
 12863                           
 12864 ;; *************** function _printChar *****************
 12865 ;; Defined at:
 12866 ;;		line 1219 in file "lab7.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;  msg             2  [STACK] PTR unsigned char 
 12869 ;;		 -> STR_161(5), STR_159(3), STR_158(63), STR_157(3), 
 12870 ;;		 -> STR_156(36), STR_154(36), degree(3), currentTemp(6), 
 12871 ;;		 -> STR_153(36), STR_152(36), STR_151(36), STR_150(63), 
 12872 ;;		 -> STR_149(21), STR_148(3), STR_147(2), STR_146(2), 
 12873 ;;		 -> STR_145(2), STR_144(2), STR_143(56), STR_142(3), 
 12874 ;;		 -> STR_141(71), STR_140(28), STR_139(3), STR_138(40), 
 12875 ;;		 -> STR_137(9), STR_136(39), STR_135(7), STR_134(15), 
 12876 ;;		 -> STR_133(3), STR_132(30), STR_131(3), STR_130(45), 
 12877 ;;		 -> STR_129(36), STR_128(43), STR_127(3), STR_126(28), 
 12878 ;;		 -> STR_125(3), STR_124(64), STR_123(28), STR_122(3), 
 12879 ;;		 -> STR_121(32), STR_120(9), STR_119(31), STR_118(7), 
 12880 ;;		 -> STR_117(15), STR_116(3), STR_115(30), STR_114(3), 
 12881 ;;		 -> STR_113(35), STR_112(35), STR_111(3), STR_110(29), 
 12882 ;;		 -> STR_109(3), STR_108(64), STR_107(44), STR_106(34), 
 12883 ;;		 -> STR_105(59), STR_104(30), STR_103(3), STR_102(42), 
 12884 ;;		 -> STR_101(3), STR_100(42), STR_99(3), STR_98(23), 
 12885 ;;		 -> STR_97(28), STR_96(31), STR_95(28), STR_94(3), 
 12886 ;;		 -> STR_93(3), STR_92(60), STR_91(60), STR_90(10), 
 12887 ;;		 -> STR_89(3), STR_88(30), STR_87(3), STR_86(26), 
 12888 ;;		 -> STR_85(3), STR_84(60), STR_83(3), STR_82(47), 
 12889 ;;		 -> STR_81(3), STR_80(20), STR_79(7), STR_78(9), 
 12890 ;;		 -> STR_77(10), STR_76(3), STR_75(32), STR_74(3), 
 12891 ;;		 -> STR_73(60), STR_72(61), STR_71(56), STR_70(47), 
 12892 ;;		 -> STR_69(39), STR_68(31), STR_67(3), STR_66(31), 
 12893 ;;		 -> STR_65(3), STR_64(63), STR_63(3), STR_62(63), 
 12894 ;;		 -> STR_61(63), STR_60(63), STR_59(63), STR_58(63), 
 12895 ;;		 -> STR_57(63), tempThreshold(3), STR_56(20), STR_55(9), 
 12896 ;;		 -> STR_54(7), STR_53(9), STR_52(7), STR_51(9), 
 12897 ;;		 -> STR_50(7), STR_48(44), STR_47(32), STR_46(45), 
 12898 ;;		 -> STR_45(21), STR_44(45), STR_43(45), STR_42(36), 
 12899 ;;		 -> STR_41(3), STR_40(51), STR_39(3), STR_38(44), 
 12900 ;;		 -> STR_37(7), STR_36(31), STR_35(40), STR_34(9), 
 12901 ;;		 -> STR_33(44), STR_32(7), STR_31(15), STR_30(39), 
 12902 ;;		 -> STR_29(52), STR_28(19), STR_27(34), STR_26(15), 
 12903 ;;		 -> STR_25(3), STR_24(65), STR_23(3), STR_22(3), 
 12904 ;;		 -> STR_21(63), STR_20(42), STR_19(62), STR_18(3), 
 12905 ;;		 -> STR_17(39), STR_16(45), STR_15(9), STR_14(36), 
 12906 ;;		 -> STR_13(20), STR_12(45), STR_11(29), STR_10(9), 
 12907 ;;		 -> STR_9(45), STR_8(28), STR_7(7), STR_6(15), 
 12908 ;;		 -> STR_5(29), STR_4(48), STR_3(9), STR_2(9), 
 12909 ;;		 -> STR_1(9), 
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;		None
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  1  [STACK] void 
 12914 ;; Registers used:
 12915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 12916 ;; Tracked objects:
 12917 ;;		On entry : 0/0
 12918 ;;		On exit  : 0/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12921 ;;      Params:         0       0       0       0       0       0       0
 12922 ;;      Locals:         0       0       0       0       0       0       0
 12923 ;;      Temps:          0       0       0       0       0       0       0
 12924 ;;      Totals:         0       0       0       0       0       0       0
 12925 ;;Total ram usage:        0 bytes
 12926 ;; Hardware stack levels used:    1
 12927 ;; Hardware stack levels required when called:   10
 12928 ;; This function calls:
 12929 ;;		Nothing
 12930 ;; This function is called by:
 12931 ;;		_My_ISR_High
 12932 ;;		_resetPIR
 12933 ;;		_My_ISR_Low
 12934 ;;		_login
 12935 ;;		_mainScreen
 12936 ;;		_mainMenu
 12937 ;;		_passcodeMenu
 12938 ;;		_setPassword
 12939 ;;		_pirMenu
 12940 ;;		_temperatureMenu
 12941 ;;		_getTempThreshold
 12942 ;;		_getTempPassword
 12943 ;;		_getInput
 12944 ;;		_componentStatus
 12945 ;;		_resetScreen
 12946 ;; This function uses a reentrant model
 12947 ;;
 12948                           
 12949                           	psect	text43
 12950  004216                     __ptext43:
 12951                           	opt stack 0
 12952  004216                     _printChar:
 12953                           	opt stack 2
 12954                           
 12955                           ;lab7.c: 1221: while(*msg)
 12956                           
 12957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
 12958                           ;incstack = 0
 12959  004216  D025               	goto	l2108
 12960  004218                     l582:
 12961  004218  A2AC               	btfss	4012,1,c	;volatile
 12962  00421A  D7FE               	goto	l582
 12963                           
 12964                           ;lab7.c: 1224: TXREG = *msg;
 12965                           ;stkvar	printChar@msg @ sp[(0)+-2]
 12966  00421C  0EFE               	movlw	-2
 12967  00421E  CFE3 FFF6          	movff	plusw1,tblptrl
 12968  004222  0EFF               	movlw	-1
 12969  004224  CFE3 FFF7          	movff	plusw1,tblptrh
 12970  004228  0E05               	movlw	(high __ramtop+-1)
 12971  00422A  64F7               	cpfsgt	tblptrh,c
 12972  00422C  D003               	bra	u1057
 12973  00422E  0008               	tblrd		*
 12974  004230  50F5               	movf	tablat,w,c
 12975  004232  D005               	bra	u1050
 12976  004234                     u1057:
 12977  004234  CFF6 FFE9          	movff	tblptrl,fsr0l
 12978  004238  CFF7 FFEA          	movff	tblptrh,fsr0h
 12979  00423C  50EF               	movf	indf0,w,c
 12980  00423E                     u1050:
 12981  00423E  6EAD               	movwf	4013,c	;volatile
 12982  004240                     l585:
 12983  004240  B2AC               	btfsc	4012,1,c	;volatile
 12984  004242  D7FE               	goto	l585
 12985                           
 12986                           ;lab7.c: 1226: msg++;
 12987                           ;stkvar	printChar@msg @ sp[(0)+-2]
 12988  004244  0EFE               	movlw	-2
 12989  004246  50E3               	movf	plusw1,w,c
 12990  004248  0F01               	addlw	1
 12991  00424A  6E52               	movwf	btemp,c
 12992  00424C  0EFE               	movlw	-2
 12993  00424E  C052  FFE3         	movff	btemp,plusw1
 12994  004252  6A52               	clrf	btemp,c
 12995  004254  0EFF               	movlw	-1
 12996  004256  50E3               	movf	plusw1,w,c
 12997  004258  2052               	addwfc	btemp,w,c
 12998  00425A  6E52               	movwf	btemp,c
 12999  00425C  0EFF               	movlw	-1
 13000  00425E  C052  FFE3         	movff	btemp,plusw1
 13001  004262                     l2108:
 13002                           
 13003                           ;stkvar	printChar@msg @ sp[(0)+-2]
 13004  004262  0EFE               	movlw	-2
 13005  004264  CFE3 FFF6          	movff	plusw1,tblptrl
 13006  004268  0EFF               	movlw	-1
 13007  00426A  CFE3 FFF7          	movff	plusw1,tblptrh
 13008  00426E  0E05               	movlw	(high __ramtop+-1)
 13009  004270  64F7               	cpfsgt	tblptrh,c
 13010  004272  D003               	bra	u1077
 13011  004274  0008               	tblrd		*
 13012  004276  50F5               	movf	tablat,w,c
 13013  004278  D005               	bra	u1070
 13014  00427A                     u1077:
 13015  00427A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13016  00427E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13017  004282  50EF               	movf	indf0,w,c
 13018  004284                     u1070:
 13019  004284  0900               	iorlw	0
 13020  004286  A4D8               	btfss	status,2,c
 13021  004288  D7C7               	goto	l582
 13022                           
 13023                           ; _printChar: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13024  00428A  52E5               	movf	postdec1,f,c
 13025  00428C  52E5               	movf	postdec1,f,c
 13026  00428E  0012               	return		;funcret
 13027  004290                     __end_of_printChar:
 13028                           	opt stack 0
 13029                           tblptru	equ	0xFF8
 13030                           tblptrh	equ	0xFF7
 13031                           tblptrl	equ	0xFF6
 13032                           tablat	equ	0xFF5
 13033                           prodh	equ	0xFF4
 13034                           prodl	equ	0xFF3
 13035                           intcon	equ	0xFF2
 13036                           intcon2	equ	0xFF1
 13037                           indf0	equ	0xFEF
 13038                           postinc0	equ	0xFEE
 13039                           fsr0h	equ	0xFEA
 13040                           fsr0l	equ	0xFE9
 13041                           wreg	equ	0xFE8
 13042                           postinc1	equ	0xFE6
 13043                           postdec1	equ	0xFE5
 13044                           plusw1	equ	0xFE3
 13045                           fsr1h	equ	0xFE2
 13046                           fsr1l	equ	0xFE1
 13047                           indf2	equ	0xFDF
 13048                           postinc2	equ	0xFDE
 13049                           postdec2	equ	0xFDD
 13050                           fsr2h	equ	0xFDA
 13051                           fsr2l	equ	0xFD9
 13052                           status	equ	0xFD8
 13053                           
 13054 ;; *************** function _componentStatus *****************
 13055 ;; Defined at:
 13056 ;;		line 1240 in file "lab7.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;		None
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;  arr             2   22[COMRAM] unsigned char [2]
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13070 ;;      Params:         0       0       0       0       0       0       0
 13071 ;;      Locals:         2       0       0       0       0       0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0
 13073 ;;      Totals:         2       0       0       0       0       0       0
 13074 ;;Total ram usage:        2 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:   14
 13077 ;; This function calls:
 13078 ;;		_printChar
 13079 ;;		_sprintf
 13080 ;; This function is called by:
 13081 ;;		_setPassword
 13082 ;;		_resetScreen
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           	psect	text44
 13087  0035E4                     __ptext44:
 13088                           	opt stack 0
 13089  0035E4                     _componentStatus:
 13090                           	opt stack 14
 13091                           
 13092                           ;lab7.c: 1242: printChar("\n\r");
 13093                           
 13094                           ;incstack = 0
 13095  0035E4  0EEC               	movlw	low (STR_17+36)
 13096  0035E6  6EE6               	movwf	postinc1,c
 13097  0035E8  0E7A               	movlw	high (STR_17+36)
 13098  0035EA  6EE6               	movwf	postinc1,c
 13099  0035EC  EC0B  F021         	call	_printChar	;wreg free
 13100                           
 13101                           ;lab7.c: 1243: printChar("\n\rComponent Statuses");
 13102  0035F0  0E70               	movlw	low STR_149
 13103  0035F2  6EE6               	movwf	postinc1,c
 13104  0035F4  0E7F               	movlw	high STR_149
 13105  0035F6  6EE6               	movwf	postinc1,c
 13106  0035F8  EC0B  F021         	call	_printChar	;wreg free
 13107                           
 13108                           ;lab7.c: 1244: printChar("\n\r**********************************************************
      +                          **");
 13109  0035FC  0ECC               	movlw	low STR_57
 13110  0035FE  6EE6               	movwf	postinc1,c
 13111  003600  0E75               	movlw	high STR_57
 13112  003602  6EE6               	movwf	postinc1,c
 13113  003604  EC0B  F021         	call	_printChar	;wreg free
 13114                           
 13115                           ;lab7.c: 1245: printChar("\n\rPIR Sensor Alarm State:          ");
 13116  003608  0E88               	movlw	low STR_151
 13117  00360A  6EE6               	movwf	postinc1,c
 13118  00360C  0E7B               	movlw	high STR_151
 13119  00360E  6EE6               	movwf	postinc1,c
 13120  003610  EC0B  F021         	call	_printChar	;wreg free
 13121                           
 13122                           ;lab7.c: 1246: printChar(pirState);
 13123  003614  C045  FFE6         	movff	_pirState,postinc1
 13124  003618  C046  FFE6         	movff	_pirState+1,postinc1
 13125  00361C  EC0B  F021         	call	_printChar	;wreg free
 13126                           
 13127                           ;lab7.c: 1247: printChar("\n\rTemperature Alarm State:         ");
 13128  003620  0EAC               	movlw	low STR_152
 13129  003622  6EE6               	movwf	postinc1,c
 13130  003624  0E7B               	movlw	high STR_152
 13131  003626  6EE6               	movwf	postinc1,c
 13132  003628  EC0B  F021         	call	_printChar	;wreg free
 13133                           
 13134                           ;lab7.c: 1248: printChar(tempState);
 13135  00362C  C047  FFE6         	movff	_tempState,postinc1
 13136  003630  C048  FFE6         	movff	_tempState+1,postinc1
 13137  003634  EC0B  F021         	call	_printChar	;wreg free
 13138                           
 13139                           ;lab7.c: 1249: printChar("\n\rCurrent Temperature Reading:     ");
 13140  003638  0EF4               	movlw	low STR_153
 13141  00363A  6EE6               	movwf	postinc1,c
 13142  00363C  0E7B               	movlw	high STR_153
 13143  00363E  6EE6               	movwf	postinc1,c
 13144  003640  EC0B  F021         	call	_printChar	;wreg free
 13145                           
 13146                           ;lab7.c: 1250: printChar(currentTemp);
 13147  003644  0E1E               	movlw	low _currentTemp
 13148  003646  6EE6               	movwf	postinc1,c
 13149  003648  0E00               	movlw	high _currentTemp
 13150  00364A  6EE6               	movwf	postinc1,c
 13151  00364C  EC0B  F021         	call	_printChar	;wreg free
 13152                           
 13153                           ;lab7.c: 1251: printChar(degree);
 13154  003650  0E4F               	movlw	low _degree
 13155  003652  6EE6               	movwf	postinc1,c
 13156  003654  0E00               	movlw	high _degree
 13157  003656  6EE6               	movwf	postinc1,c
 13158  003658  EC0B  F021         	call	_printChar	;wreg free
 13159                           
 13160                           ;lab7.c: 1252: printChar("\n\rTemperature Alarm Threshold:     ");
 13161  00365C  0ED0               	movlw	low STR_154
 13162  00365E  6EE6               	movwf	postinc1,c
 13163  003660  0E7B               	movlw	high STR_154
 13164  003662  6EE6               	movwf	postinc1,c
 13165  003664  EC0B  F021         	call	_printChar	;wreg free
 13166                           
 13167                           ;lab7.c: 1254: char arr[sizeof(thresholdTemp)];
 13168                           ;lab7.c: 1255: sprintf(arr, "%d", thresholdTemp);
 13169  003668  C04D  FFE6         	movff	_thresholdTemp,postinc1
 13170  00366C  C04E  FFE6         	movff	_thresholdTemp+1,postinc1
 13171  003670  0EFB               	movlw	low STR_155
 13172  003672  6EE6               	movwf	postinc1,c
 13173  003674  0E7F               	movlw	high STR_155
 13174  003676  6EE6               	movwf	postinc1,c
 13175  003678  0E3D               	movlw	low componentStatus@arr
 13176  00367A  6EE6               	movwf	postinc1,c
 13177  00367C  0E00               	movlw	high componentStatus@arr
 13178  00367E  6EE6               	movwf	postinc1,c
 13179  003680  0E06               	movlw	6
 13180  003682  6EE6               	movwf	postinc1,c
 13181  003684  ECC7  F001         	call	_sprintf	;wreg free
 13182                           
 13183                           ;lab7.c: 1256: for(i=0;i<2;i++){
 13184  003688  0E00               	movlw	0
 13185  00368A  6E0B               	movwf	_i+1,c
 13186  00368C  0E00               	movlw	0
 13187  00368E  6E0A               	movwf	_i,c
 13188  003690                     l1420:
 13189  003690  BE0B               	btfsc	_i+1,7,c
 13190  003692  D006               	goto	l1424
 13191  003694  500B               	movf	_i+1,w,c
 13192  003696  E115               	bnz	l1430
 13193  003698  0E02               	movlw	2
 13194  00369A  5C0A               	subwf	_i,w,c
 13195  00369C  B0D8               	btfsc	status,0,c
 13196  00369E  D011               	goto	l1430
 13197  0036A0                     l1424:
 13198                           
 13199                           ;lab7.c: 1257: tempThreshold[i] = arr[i];
 13200  0036A0  0E3D               	movlw	low componentStatus@arr
 13201  0036A2  240A               	addwf	_i,w,c
 13202  0036A4  6ED9               	movwf	fsr2l,c
 13203  0036A6  0E00               	movlw	high componentStatus@arr
 13204  0036A8  200B               	addwfc	_i+1,w,c
 13205  0036AA  6EDA               	movwf	fsr2h,c
 13206  0036AC  0E24               	movlw	low _tempThreshold
 13207  0036AE  240A               	addwf	_i,w,c
 13208  0036B0  6EE9               	movwf	fsr0l,c
 13209  0036B2  0E00               	movlw	high _tempThreshold
 13210  0036B4  200B               	addwfc	_i+1,w,c
 13211  0036B6  6EEA               	movwf	fsr0h,c
 13212  0036B8  CFDF FFEF          	movff	indf2,indf0
 13213  0036BC  4A0A               	infsnz	_i,f,c
 13214  0036BE  2A0B               	incf	_i+1,f,c
 13215  0036C0  D7E7               	goto	l1420
 13216  0036C2                     l1430:
 13217                           
 13218                           ;lab7.c: 1258: }
 13219                           ;lab7.c: 1259: tempThreshold[2] ='\0' ;
 13220  0036C2  0E00               	movlw	0
 13221  0036C4  6E26               	movwf	_tempThreshold+2,c
 13222                           
 13223                           ;lab7.c: 1260: printChar(tempThreshold);
 13224  0036C6  0E24               	movlw	low _tempThreshold
 13225  0036C8  6EE6               	movwf	postinc1,c
 13226  0036CA  0E00               	movlw	high _tempThreshold
 13227  0036CC  6EE6               	movwf	postinc1,c
 13228  0036CE  EC0B  F021         	call	_printChar	;wreg free
 13229                           
 13230                           ;lab7.c: 1261: printChar(degree);
 13231  0036D2  0E4F               	movlw	low _degree
 13232  0036D4  6EE6               	movwf	postinc1,c
 13233  0036D6  0E00               	movlw	high _degree
 13234  0036D8  6EE6               	movwf	postinc1,c
 13235  0036DA  EC0B  F021         	call	_printChar	;wreg free
 13236                           
 13237                           ;lab7.c: 1262: printChar("\n\rCurrent Input Method:            ");
 13238  0036DE  0E64               	movlw	low STR_156
 13239  0036E0  6EE6               	movwf	postinc1,c
 13240  0036E2  0E7B               	movlw	high STR_156
 13241  0036E4  6EE6               	movwf	postinc1,c
 13242  0036E6  EC0B  F021         	call	_printChar	;wreg free
 13243                           
 13244                           ;lab7.c: 1263: printChar(inputType);
 13245  0036EA  C043  FFE6         	movff	_inputType,postinc1
 13246  0036EE  C044  FFE6         	movff	_inputType+1,postinc1
 13247  0036F2  EC0B  F021         	call	_printChar	;wreg free
 13248                           
 13249                           ;lab7.c: 1264: printChar("\n\r");
 13250  0036F6  0EEC               	movlw	low (STR_17+36)
 13251  0036F8  6EE6               	movwf	postinc1,c
 13252  0036FA  0E7A               	movlw	high (STR_17+36)
 13253  0036FC  6EE6               	movwf	postinc1,c
 13254  0036FE  EC0B  F021         	call	_printChar	;wreg free
 13255                           
 13256                           ;lab7.c: 1265: printChar("\n\r**********************************************************
      +                          **");
 13257  003702  0ECC               	movlw	low STR_57
 13258  003704  6EE6               	movwf	postinc1,c
 13259  003706  0E75               	movlw	high STR_57
 13260  003708  6EE6               	movwf	postinc1,c
 13261  00370A  EC0B  F021         	call	_printChar	;wreg free
 13262                           
 13263                           ;lab7.c: 1266: printChar("\n\r");
 13264  00370E  0EEC               	movlw	low (STR_17+36)
 13265  003710  6EE6               	movwf	postinc1,c
 13266  003712  0E7A               	movlw	high (STR_17+36)
 13267  003714  6EE6               	movwf	postinc1,c
 13268  003716  EC0B  F021         	call	_printChar	;wreg free
 13269  00371A  0012               	return		;funcret
 13270  00371C                     __end_of_componentStatus:
 13271                           	opt stack 0
 13272                           tblptru	equ	0xFF8
 13273                           tblptrh	equ	0xFF7
 13274                           tblptrl	equ	0xFF6
 13275                           tablat	equ	0xFF5
 13276                           prodh	equ	0xFF4
 13277                           prodl	equ	0xFF3
 13278                           intcon	equ	0xFF2
 13279                           intcon2	equ	0xFF1
 13280                           indf0	equ	0xFEF
 13281                           postinc0	equ	0xFEE
 13282                           fsr0h	equ	0xFEA
 13283                           fsr0l	equ	0xFE9
 13284                           wreg	equ	0xFE8
 13285                           postinc1	equ	0xFE6
 13286                           postdec1	equ	0xFE5
 13287                           plusw1	equ	0xFE3
 13288                           fsr1h	equ	0xFE2
 13289                           fsr1l	equ	0xFE1
 13290                           indf2	equ	0xFDF
 13291                           postinc2	equ	0xFDE
 13292                           postdec2	equ	0xFDD
 13293                           fsr2h	equ	0xFDA
 13294                           fsr2l	equ	0xFD9
 13295                           status	equ	0xFD8
 13296                           
 13297 ;; *************** function _sprintf *****************
 13298 ;; Defined at:
 13299 ;;		line 492 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;  sp              2  [STACK] PTR unsigned char 
 13302 ;;		 -> getTemperature@arr(3), componentStatus@arr(2), 
 13303 ;;  f               2  [STACK] PTR const unsigned char 
 13304 ;;		 -> STR_160(6), STR_155(3), 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  val             4  [STACK] unsigned long 
 13307 ;;  tmpval          4  [STACK] struct .
 13308 ;;  fval            3  [STACK] struct .
 13309 ;;  cp              3    0        PTR const unsigned char 
 13310 ;;  prec            2  [STACK] int 
 13311 ;;  exp             2  [STACK] int 
 13312 ;;  width           2  [STACK] int 
 13313 ;;  flag            2  [STACK] unsigned short 
 13314 ;;  ap              2  [STACK] PTR void [1]
 13315 ;;		 -> ?_sprintf(2), 
 13316 ;;  len             2    0        unsigned int 
 13317 ;;  c               1  [STACK] char 
 13318 ;;  d               1    0        unsigned char 
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  2  [STACK] int 
 13321 ;; Registers used:
 13322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13328 ;;      Params:         0       0       0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0
 13330 ;;      Temps:          0       0       0       0       0       0       0
 13331 ;;      Totals:         0       0       0       0       0       0       0
 13332 ;;Total ram usage:        0 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:   13
 13335 ;; This function calls:
 13336 ;;		___awdiv
 13337 ;;		___ftadd
 13338 ;;		___ftge
 13339 ;;		___ftmul
 13340 ;;		___ftneg
 13341 ;;		___ftsub
 13342 ;;		___fttol
 13343 ;;		___lldiv
 13344 ;;		___llmod
 13345 ;;		___lltoft
 13346 ;;		___wmul
 13347 ;;		__div_to_l_
 13348 ;;		__tdiv_to_l_
 13349 ;;		_fround
 13350 ;;		_isdigit
 13351 ;;		_scale
 13352 ;; This function is called by:
 13353 ;;		_componentStatus
 13354 ;;		_getTemperature
 13355 ;; This function uses a reentrant model
 13356 ;;
 13357                           
 13358                           	psect	text45
 13359  00038E                     __ptext45:
 13360                           	opt stack 0
 13361  00038E                     _sprintf:
 13362                           	opt stack 0
 13363                           
 13364                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 4 va
      +                          rgsize = 0, retsize = 0
 13365  00038E  0E16               	movlw	22
 13366  000390  26E1               	addwf	fsr1l,f,c
 13367  000392  0E00               	movlw	0
 13368  000394  22E2               	addwfc	fsr1h,f,c
 13369                           
 13370                           ;doprnt.c: 494: va_list ap;
 13371                           ;doprnt.c: 499: signed char c;
 13372                           ;doprnt.c: 501: int width;
 13373                           ;doprnt.c: 504: int prec;
 13374                           ;doprnt.c: 508: unsigned short flag;
 13375                           ;doprnt.c: 515: char d;
 13376                           ;doprnt.c: 516: double fval;
 13377                           ;doprnt.c: 517: int exp;
 13378                           ;doprnt.c: 523: union {
 13379                           ;doprnt.c: 524: unsigned long vd;
 13380                           ;doprnt.c: 525: double integ;
 13381                           ;doprnt.c: 526: } tmpval;
 13382                           ;doprnt.c: 528: unsigned long val;
 13383                           ;doprnt.c: 529: unsigned len;
 13384                           ;doprnt.c: 530: const char * cp;
 13385                           ;doprnt.c: 533: *ap = __va_start();
 13386                           
 13387                           ;incstack = 0
 13388  000396  0EFE               	movlw	254
 13389  000398  6E53               	movwf	btemp+1,c
 13390  00039A  0EFF               	movlw	255
 13391  00039C  6E54               	movwf	btemp+2,c
 13392                           
 13393                           ;stkvar	?_sprintf @ sp[(-22)+-3]
 13394  00039E  0EE7               	movlw	231
 13395  0003A0  24E1               	addwf	fsr1l,w,c
 13396  0003A2  6E5C               	movwf	btemp+10,c
 13397  0003A4  0EFF               	movlw	255
 13398  0003A6  20E2               	addwfc	fsr1h,w,c
 13399  0003A8  6E5D               	movwf	btemp+11,c
 13400  0003AA  5053               	movf	btemp+1,w,c
 13401  0003AC  265C               	addwf	btemp+10,f,c
 13402  0003AE  5054               	movf	btemp+2,w,c
 13403  0003B0  225D               	addwfc	btemp+11,f,c
 13404                           
 13405                           ;stkvar	sprintf@ap @ sp[(-22)+19]
 13406  0003B2  0EFE               	movlw	-2
 13407  0003B4  C05D  FFE3         	movff	btemp+11,plusw1
 13408  0003B8  0EFD               	movlw	-3
 13409  0003BA  C05C  FFE3         	movff	btemp+10,plusw1
 13410                           
 13411                           ;doprnt.c: 536: while(c = *f++) {
 13412  0003BE  EFB2  F009         	goto	l3002
 13413  0003C2                     l2718:
 13414                           
 13415                           ;doprnt.c: 538: if(c != '%')
 13416                           ;stkvar	sprintf@c @ sp[(-22)+21]
 13417  0003C2  0EFF               	movlw	-1
 13418  0003C4  CFE3 F052          	movff	plusw1,btemp
 13419  0003C8  0E25               	movlw	37
 13420  0003CA  1852               	xorwf	btemp,w,c
 13421  0003CC  B4D8               	btfsc	status,2,c
 13422  0003CE  D01A               	goto	l2724
 13423                           
 13424                           ;doprnt.c: 540: {
 13425                           ;doprnt.c: 541: ((*sp++ = (c)));
 13426                           ;stkvar	sprintf@c @ sp[(-22)+21]
 13427                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 13428  0003D0  0EE7               	movlw	-25
 13429  0003D2  CFE3 FFD9          	movff	plusw1,fsr2l
 13430  0003D6  0EE8               	movlw	-24
 13431  0003D8  CFE3 FFDA          	movff	plusw1,fsr2h
 13432  0003DC  0EFF               	movlw	-1
 13433  0003DE  CFE3 FFDF          	movff	plusw1,indf2
 13434                           
 13435                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 13436  0003E2  0EE7               	movlw	-25
 13437  0003E4  50E3               	movf	plusw1,w,c
 13438  0003E6  0F01               	addlw	1
 13439  0003E8  6E52               	movwf	btemp,c
 13440  0003EA  0EE7               	movlw	-25
 13441  0003EC  C052  FFE3         	movff	btemp,plusw1
 13442  0003F0  6A52               	clrf	btemp,c
 13443  0003F2  0EE8               	movlw	-24
 13444  0003F4  50E3               	movf	plusw1,w,c
 13445  0003F6  2052               	addwfc	btemp,w,c
 13446  0003F8  6E52               	movwf	btemp,c
 13447  0003FA  0EE8               	movlw	-24
 13448  0003FC  C052  FFE3         	movff	btemp,plusw1
 13449                           
 13450                           ;doprnt.c: 542: continue;
 13451  000400  EFB2  F009         	goto	l3002
 13452  000404                     l2724:
 13453                           
 13454                           ;doprnt.c: 543: }
 13455                           ;doprnt.c: 546: width = 0;
 13456                           ;stkvar	sprintf@width @ sp[(-22)+15]
 13457  000404  0EF9               	movlw	-7
 13458  000406  6AE3               	clrf	plusw1,c
 13459  000408  0EFA               	movlw	-6
 13460  00040A  6AE3               	clrf	plusw1,c
 13461                           
 13462                           ;doprnt.c: 548: flag = 0;
 13463                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 13464  00040C  0EFB               	movlw	-5
 13465  00040E  6AE3               	clrf	plusw1,c
 13466  000410  0EFC               	movlw	-4
 13467  000412  6AE3               	clrf	plusw1,c
 13468                           
 13469                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13470                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13471  000414  50E1               	movf	fsr1l,w,c
 13472  000416  0FE5               	addlw	-27
 13473  000418  6ED9               	movwf	fsr2l,c
 13474  00041A  50E2               	movf	fsr1h,w,c
 13475  00041C  6EDA               	movwf	fsr2h,c
 13476  00041E  0EFF               	movlw	255
 13477  000420  22DA               	addwfc	fsr2h,f,c
 13478  000422  CFDE FFF6          	movff	postinc2,tblptrl
 13479  000426  CFDD FFF7          	movff	postdec2,tblptrh
 13480  00042A                     	if	0	;tblptru may be non-zero
 13481  00042A                     	endif
 13482  00042A                     	if	0	;tblptru may be non-zero
 13483  00042A                     	endif
 13484  00042A  0008               	tblrd		*
 13485  00042C  50F5               	movf	tablat,w,c
 13486  00042E  6EE6               	movwf	postinc1,c
 13487  000430  EC7E  F022         	call	_isdigit	;wreg free
 13488  000434  A052               	btfss	btemp,0,c
 13489  000436  D058               	goto	l2738
 13490                           
 13491                           ;doprnt.c: 598: width = 0;
 13492                           ;stkvar	sprintf@width @ sp[(-22)+15]
 13493  000438  0EF9               	movlw	-7
 13494  00043A  6AE3               	clrf	plusw1,c
 13495  00043C  0EFA               	movlw	-6
 13496  00043E  6AE3               	clrf	plusw1,c
 13497  000440                     l2730:
 13498                           
 13499                           ;doprnt.c: 600: width *= 10;
 13500  000440  0E0A               	movlw	10
 13501  000442  6EE6               	movwf	postinc1,c
 13502  000444  0E00               	movlw	0
 13503  000446  6EE6               	movwf	postinc1,c
 13504                           
 13505                           ;stkvar	sprintf@width @ sp[(-24)+15]
 13506  000448  0EF7               	movlw	-9
 13507  00044A  CFE3 FFE6          	movff	plusw1,postinc1
 13508  00044E  CFE3 FFE6          	movff	plusw1,postinc1
 13509  000452  ECB6  F01F         	call	___wmul	;wreg free
 13510                           
 13511                           ;stkvar	sprintf@width @ sp[(-22)+15]
 13512  000456  0EF9               	movlw	-7
 13513  000458  C052  FFE3         	movff	btemp,plusw1
 13514  00045C  0EFA               	movlw	-6
 13515  00045E  C053  FFE3         	movff	btemp+1,plusw1
 13516                           
 13517                           ;doprnt.c: 601: width += *f++ - '0';
 13518  000462  0ED0               	movlw	208
 13519  000464  6E53               	movwf	btemp+1,c
 13520  000466  0EFF               	movlw	255
 13521  000468  6E54               	movwf	btemp+2,c
 13522                           
 13523                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13524  00046A  50E1               	movf	fsr1l,w,c
 13525  00046C  0FE5               	addlw	-27
 13526  00046E  6ED9               	movwf	fsr2l,c
 13527  000470  50E2               	movf	fsr1h,w,c
 13528  000472  6EDA               	movwf	fsr2h,c
 13529  000474  0EFF               	movlw	255
 13530  000476  22DA               	addwfc	fsr2h,f,c
 13531  000478  CFDE FFF6          	movff	postinc2,tblptrl
 13532  00047C  CFDD FFF7          	movff	postdec2,tblptrh
 13533  000480                     	if	0	;tblptru may be non-zero
 13534  000480                     	endif
 13535  000480                     	if	0	;tblptru may be non-zero
 13536  000480                     	endif
 13537  000480  0008               	tblrd		*
 13538  000482  50F5               	movf	tablat,w,c
 13539  000484  6E5C               	movwf	btemp+10,c
 13540  000486  6A5D               	clrf	btemp+11,c
 13541  000488  5053               	movf	btemp+1,w,c
 13542  00048A  265C               	addwf	btemp+10,f,c
 13543  00048C  5054               	movf	btemp+2,w,c
 13544  00048E  225D               	addwfc	btemp+11,f,c
 13545                           
 13546                           ;stkvar	sprintf@width @ sp[(-22)+15]
 13547  000490  50E1               	movf	fsr1l,w,c
 13548  000492  0FF9               	addlw	-7
 13549  000494  6ED9               	movwf	fsr2l,c
 13550  000496  50E2               	movf	fsr1h,w,c
 13551  000498  6EDA               	movwf	fsr2h,c
 13552  00049A  0EFF               	movlw	255
 13553  00049C  22DA               	addwfc	fsr2h,f,c
 13554  00049E  505C               	movf	btemp+10,w,c
 13555  0004A0  26DE               	addwf	postinc2,f,c
 13556  0004A2  505D               	movf	btemp+11,w,c
 13557  0004A4  22DD               	addwfc	postdec2,f,c
 13558                           
 13559                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13560  0004A6  0EE5               	movlw	-27
 13561  0004A8  50E3               	movf	plusw1,w,c
 13562  0004AA  0F01               	addlw	1
 13563  0004AC  6E52               	movwf	btemp,c
 13564  0004AE  0EE5               	movlw	-27
 13565  0004B0  C052  FFE3         	movff	btemp,plusw1
 13566  0004B4  6A52               	clrf	btemp,c
 13567  0004B6  0EE6               	movlw	-26
 13568  0004B8  50E3               	movf	plusw1,w,c
 13569  0004BA  2052               	addwfc	btemp,w,c
 13570  0004BC  6E52               	movwf	btemp,c
 13571  0004BE  0EE6               	movlw	-26
 13572  0004C0  C052  FFE3         	movff	btemp,plusw1
 13573                           
 13574                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13575                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13576  0004C4  50E1               	movf	fsr1l,w,c
 13577  0004C6  0FE5               	addlw	-27
 13578  0004C8  6ED9               	movwf	fsr2l,c
 13579  0004CA  50E2               	movf	fsr1h,w,c
 13580  0004CC  6EDA               	movwf	fsr2h,c
 13581  0004CE  0EFF               	movlw	255
 13582  0004D0  22DA               	addwfc	fsr2h,f,c
 13583  0004D2  CFDE FFF6          	movff	postinc2,tblptrl
 13584  0004D6  CFDD FFF7          	movff	postdec2,tblptrh
 13585  0004DA                     	if	0	;tblptru may be non-zero
 13586  0004DA                     	endif
 13587  0004DA                     	if	0	;tblptru may be non-zero
 13588  0004DA                     	endif
 13589  0004DA  0008               	tblrd		*
 13590  0004DC  50F5               	movf	tablat,w,c
 13591  0004DE  6EE6               	movwf	postinc1,c
 13592  0004E0  EC7E  F022         	call	_isdigit	;wreg free
 13593  0004E4  B052               	btfsc	btemp,0,c
 13594  0004E6  D7AC               	goto	l2730
 13595  0004E8                     l2738:
 13596                           
 13597                           ;doprnt.c: 608: }
 13598                           ;doprnt.c: 611: if(*f == '.') {
 13599                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13600  0004E8  50E1               	movf	fsr1l,w,c
 13601  0004EA  0FE5               	addlw	-27
 13602  0004EC  6ED9               	movwf	fsr2l,c
 13603  0004EE  50E2               	movf	fsr1h,w,c
 13604  0004F0  6EDA               	movwf	fsr2h,c
 13605  0004F2  0EFF               	movlw	255
 13606  0004F4  22DA               	addwfc	fsr2h,f,c
 13607  0004F6  CFDE FFF6          	movff	postinc2,tblptrl
 13608  0004FA  CFDD FFF7          	movff	postdec2,tblptrh
 13609  0004FE                     	if	0	;tblptru may be non-zero
 13610  0004FE                     	endif
 13611  0004FE                     	if	0	;tblptru may be non-zero
 13612  0004FE                     	endif
 13613  0004FE  0008               	tblrd		*
 13614  000500  50F5               	movf	tablat,w,c
 13615  000502  0A2E               	xorlw	46
 13616  000504  A4D8               	btfss	status,2,c
 13617  000506  D061               	goto	l2752
 13618                           
 13619                           ;doprnt.c: 612: flag |= 0x4000;
 13620                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 13621  000508  0EFC               	movlw	-4
 13622  00050A  8CE3               	bsf	plusw1,6,c
 13623                           
 13624                           ;doprnt.c: 613: f++;
 13625                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13626  00050C  0EE5               	movlw	-27
 13627  00050E  50E3               	movf	plusw1,w,c
 13628  000510  0F01               	addlw	1
 13629  000512  6E52               	movwf	btemp,c
 13630  000514  0EE5               	movlw	-27
 13631  000516  C052  FFE3         	movff	btemp,plusw1
 13632  00051A  6A52               	clrf	btemp,c
 13633  00051C  0EE6               	movlw	-26
 13634  00051E  50E3               	movf	plusw1,w,c
 13635  000520  2052               	addwfc	btemp,w,c
 13636  000522  6E52               	movwf	btemp,c
 13637  000524  0EE6               	movlw	-26
 13638  000526  C052  FFE3         	movff	btemp,plusw1
 13639                           
 13640                           ;doprnt.c: 620: {
 13641                           ;doprnt.c: 621: prec = 0;
 13642                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 13643  00052A  0EF5               	movlw	-11
 13644  00052C  6AE3               	clrf	plusw1,c
 13645  00052E  0EF6               	movlw	-10
 13646  000530  6AE3               	clrf	plusw1,c
 13647                           
 13648                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 13649  000532  D038               	goto	l2750
 13650  000534                     l2746:
 13651                           
 13652                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 13653  000534  0E0A               	movlw	10
 13654  000536  6EE6               	movwf	postinc1,c
 13655  000538  0E00               	movlw	0
 13656  00053A  6EE6               	movwf	postinc1,c
 13657                           
 13658                           ;stkvar	sprintf@prec @ sp[(-24)+11]
 13659  00053C  0EF3               	movlw	-13
 13660  00053E  CFE3 FFE6          	movff	plusw1,postinc1
 13661  000542  CFE3 FFE6          	movff	plusw1,postinc1
 13662  000546  ECB6  F01F         	call	___wmul	;wreg free
 13663                           
 13664                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13665  00054A  50E1               	movf	fsr1l,w,c
 13666  00054C  0FE5               	addlw	-27
 13667  00054E  6ED9               	movwf	fsr2l,c
 13668  000550  50E2               	movf	fsr1h,w,c
 13669  000552  6EDA               	movwf	fsr2h,c
 13670  000554  0EFF               	movlw	255
 13671  000556  22DA               	addwfc	fsr2h,f,c
 13672  000558  CFDE FFF6          	movff	postinc2,tblptrl
 13673  00055C  CFDD FFF7          	movff	postdec2,tblptrh
 13674  000560                     	if	0	;tblptru may be non-zero
 13675  000560                     	endif
 13676  000560                     	if	0	;tblptru may be non-zero
 13677  000560                     	endif
 13678  000560  0008               	tblrd		*
 13679  000562  50F5               	movf	tablat,w,c
 13680  000564  2652               	addwf	btemp,f,c
 13681  000566  0E00               	movlw	0
 13682  000568  2253               	addwfc	btemp+1,f,c
 13683  00056A  0ED0               	movlw	208
 13684  00056C  6E5C               	movwf	btemp+10,c
 13685  00056E  0EFF               	movlw	255
 13686  000570  6E5D               	movwf	btemp+11,c
 13687  000572  505C               	movf	btemp+10,w,c
 13688  000574  2652               	addwf	btemp,f,c
 13689  000576  505D               	movf	btemp+11,w,c
 13690  000578  2253               	addwfc	btemp+1,f,c
 13691                           
 13692                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 13693  00057A  0EF5               	movlw	-11
 13694  00057C  C052  FFE3         	movff	btemp,plusw1
 13695  000580  0EF6               	movlw	-10
 13696  000582  C053  FFE3         	movff	btemp+1,plusw1
 13697                           
 13698                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13699  000586  0EE5               	movlw	-27
 13700  000588  50E3               	movf	plusw1,w,c
 13701  00058A  0F01               	addlw	1
 13702  00058C  6E52               	movwf	btemp,c
 13703  00058E  0EE5               	movlw	-27
 13704  000590  C052  FFE3         	movff	btemp,plusw1
 13705  000594  6A52               	clrf	btemp,c
 13706  000596  0EE6               	movlw	-26
 13707  000598  50E3               	movf	plusw1,w,c
 13708  00059A  2052               	addwfc	btemp,w,c
 13709  00059C  6E52               	movwf	btemp,c
 13710  00059E  0EE6               	movlw	-26
 13711  0005A0  C052  FFE3         	movff	btemp,plusw1
 13712  0005A4                     l2750:
 13713                           
 13714                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13715  0005A4  50E1               	movf	fsr1l,w,c
 13716  0005A6  0FE5               	addlw	-27
 13717  0005A8  6ED9               	movwf	fsr2l,c
 13718  0005AA  50E2               	movf	fsr1h,w,c
 13719  0005AC  6EDA               	movwf	fsr2h,c
 13720  0005AE  0EFF               	movlw	255
 13721  0005B0  22DA               	addwfc	fsr2h,f,c
 13722  0005B2  CFDE FFF6          	movff	postinc2,tblptrl
 13723  0005B6  CFDD FFF7          	movff	postdec2,tblptrh
 13724  0005BA                     	if	0	;tblptru may be non-zero
 13725  0005BA                     	endif
 13726  0005BA                     	if	0	;tblptru may be non-zero
 13727  0005BA                     	endif
 13728  0005BA  0008               	tblrd		*
 13729  0005BC  50F5               	movf	tablat,w,c
 13730  0005BE  6EE6               	movwf	postinc1,c
 13731  0005C0  EC7E  F022         	call	_isdigit	;wreg free
 13732  0005C4  A052               	btfss	btemp,0,c
 13733  0005C6  D00B               	goto	l2758
 13734  0005C8  D7B5               	goto	l2746
 13735  0005CA                     l2752:
 13736                           
 13737                           ;doprnt.c: 626: prec = 0;
 13738                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 13739  0005CA  0EF5               	movlw	-11
 13740  0005CC  6AE3               	clrf	plusw1,c
 13741  0005CE  0EF6               	movlw	-10
 13742  0005D0  6AE3               	clrf	plusw1,c
 13743                           
 13744                           ;doprnt.c: 628: flag |= 0x1000;
 13745                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 13746  0005D2  0EFC               	movlw	-4
 13747  0005D4  88E3               	bsf	plusw1,4,c
 13748  0005D6  D003               	goto	l2758
 13749  0005D8                     l2754:
 13750                           
 13751                           ;doprnt.c: 663: flag |= 0x400;
 13752                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 13753  0005D8  0EFC               	movlw	-4
 13754  0005DA  84E3               	bsf	plusw1,2,c
 13755                           
 13756                           ;doprnt.c: 664: break;
 13757  0005DC  D027               	goto	l2760
 13758  0005DE                     l2758:
 13759                           
 13760                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 13761  0005DE  50E1               	movf	fsr1l,w,c
 13762  0005E0  0FE5               	addlw	-27
 13763  0005E2  6ED9               	movwf	fsr2l,c
 13764  0005E4  50E2               	movf	fsr1h,w,c
 13765  0005E6  6EDA               	movwf	fsr2h,c
 13766  0005E8  0EFF               	movlw	255
 13767  0005EA  22DA               	addwfc	fsr2h,f,c
 13768  0005EC  CFDF F053          	movff	indf2,btemp+1
 13769  0005F0  0E01               	movlw	1
 13770  0005F2  26DE               	addwf	postinc2,f,c
 13771  0005F4  CFDF F054          	movff	indf2,btemp+2
 13772  0005F8  0E00               	movlw	0
 13773  0005FA  22DD               	addwfc	postdec2,f,c
 13774  0005FC  C053  FFF6         	movff	btemp+1,tblptrl
 13775  000600  C054  FFF7         	movff	btemp+2,tblptrh
 13776  000604                     	if	0	;tblptru may be non-zero
 13777  000604                     	endif
 13778  000604                     	if	0	;tblptru may be non-zero
 13779  000604                     	endif
 13780                           
 13781                           ;stkvar	sprintf@c @ sp[(-22)+21]
 13782  000604  0008               	tblrd		*
 13783  000606  0EFF               	movlw	-1
 13784  000608  CFF5 FFE3          	movff	tablat,plusw1
 13785  00060C  0EFF               	movlw	-1
 13786  00060E  50E3               	movf	plusw1,w,c
 13787                           
 13788                           ; Switch size 1, requested type "space"
 13789                           ; Number of cases is 4, Range of values is 0 to 105
 13790                           ; switch strategies available:
 13791                           ; Name         Instructions Cycles
 13792                           ; simple_byte           13     7 (average)
 13793                           ;	Chosen strategy is simple_byte
 13794  000610  0A00               	xorlw	0	; case 0
 13795  000612  B4D8               	btfsc	status,2,c
 13796  000614  EFCE  F009         	goto	l3004
 13797  000618  0A64               	xorlw	100	; case 100
 13798  00061A  B4D8               	btfsc	status,2,c
 13799  00061C  D007               	goto	l2760
 13800  00061E  0A02               	xorlw	2	; case 102
 13801  000620  B4D8               	btfsc	status,2,c
 13802  000622  D7DA               	goto	l2754
 13803  000624  0A0F               	xorlw	15	; case 105
 13804  000626  A4D8               	btfss	status,2,c
 13805  000628  EFB2  F009         	goto	l3002
 13806  00062C                     l2760:
 13807                           
 13808                           ;doprnt.c: 825: if(flag & (0x700)) {
 13809                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 13810  00062C  50E1               	movf	fsr1l,w,c
 13811  00062E  0FFB               	addlw	-5
 13812  000630  6ED9               	movwf	fsr2l,c
 13813  000632  50E2               	movf	fsr1h,w,c
 13814  000634  6EDA               	movwf	fsr2h,c
 13815  000636  0EFF               	movlw	255
 13816  000638  22DA               	addwfc	fsr2h,f,c
 13817  00063A  52DE               	movf	postinc2,f,c
 13818  00063C  0E07               	movlw	7
 13819  00063E  14DD               	andwf	postdec2,w,c
 13820  000640  B4D8               	btfsc	status,2,c
 13821  000642  EFC4  F007         	goto	l2924
 13822                           
 13823                           ;doprnt.c: 827: if(flag & 0x1000)
 13824                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 13825  000646  0EFC               	movlw	-4
 13826  000648  A8E3               	btfss	plusw1,4,c
 13827  00064A  D00A               	goto	l2766
 13828                           
 13829                           ;doprnt.c: 829: prec = 6;
 13830  00064C  0E06               	movlw	6
 13831  00064E  6E53               	movwf	btemp+1,c
 13832  000650  0E00               	movlw	0
 13833  000652  6E54               	movwf	btemp+2,c
 13834                           
 13835                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 13836  000654  0EF5               	movlw	-11
 13837  000656  C053  FFE3         	movff	btemp+1,plusw1
 13838  00065A  0EF6               	movlw	-10
 13839  00065C  C054  FFE3         	movff	btemp+2,plusw1
 13840  000660                     l2766:
 13841                           
 13842                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13843                           ;stkvar	sprintf@ap @ sp[(-22)+19]
 13844  000660  0EFD               	movlw	-3
 13845  000662  CFE3 F052          	movff	plusw1,btemp
 13846  000666  0E03               	movlw	3
 13847  000668  5E52               	subwf	btemp,f,c
 13848  00066A  0EFD               	movlw	-3
 13849  00066C  C052  FFE3         	movff	btemp,plusw1
 13850  000670  0EFE               	movlw	-2
 13851  000672  CFE3 F052          	movff	plusw1,btemp
 13852  000676  0E00               	movlw	0
 13853  000678  5A52               	subwfb	btemp,f,c
 13854  00067A  0EFE               	movlw	-2
 13855  00067C  C052  FFE3         	movff	btemp,plusw1
 13856  000680  0EFD               	movlw	-3
 13857  000682  CFE3 FFD9          	movff	plusw1,fsr2l
 13858  000686  0EFE               	movlw	-2
 13859  000688  CFE3 FFDA          	movff	plusw1,fsr2h
 13860  00068C  CFDE F05B          	movff	postinc2,btemp+9
 13861  000690  CFDE F05C          	movff	postinc2,btemp+10
 13862  000694  CFDE F05D          	movff	postinc2,btemp+11
 13863                           
 13864                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 13865  000698  0EF2               	movlw	-14
 13866  00069A  C05B  FFE3         	movff	btemp+9,plusw1
 13867  00069E  0EF3               	movlw	-13
 13868  0006A0  C05C  FFE3         	movff	btemp+10,plusw1
 13869  0006A4  0EF4               	movlw	-12
 13870  0006A6  C05D  FFE3         	movff	btemp+11,plusw1
 13871                           
 13872                           ;doprnt.c: 831: if(fval < 0.0) {
 13873                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 13874  0006AA  0EF4               	movlw	-12
 13875  0006AC  AEE3               	btfss	plusw1,7,c
 13876  0006AE  D019               	goto	l2774
 13877                           
 13878                           ;doprnt.c: 832: fval = -fval;
 13879                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 13880  0006B0  0EF2               	movlw	-14
 13881  0006B2  CFE3 FFE6          	movff	plusw1,postinc1
 13882  0006B6  CFE3 FFE6          	movff	plusw1,postinc1
 13883  0006BA  CFE3 FFE6          	movff	plusw1,postinc1
 13884  0006BE  ECCF  F022         	call	___ftneg	;wreg free
 13885                           
 13886                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 13887  0006C2  0EF2               	movlw	-14
 13888  0006C4  C052  FFE3         	movff	btemp,plusw1
 13889  0006C8  0EF3               	movlw	-13
 13890  0006CA  C053  FFE3         	movff	btemp+1,plusw1
 13891  0006CE  0EF4               	movlw	-12
 13892  0006D0  C054  FFE3         	movff	btemp+2,plusw1
 13893                           
 13894                           ;doprnt.c: 833: flag |= 0x03;
 13895                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 13896  0006D4  0EFB               	movlw	-5
 13897  0006D6  50E3               	movf	plusw1,w,c
 13898  0006D8  0903               	iorlw	3
 13899  0006DA  6E52               	movwf	btemp,c
 13900  0006DC  0EFB               	movlw	-5
 13901  0006DE  C052  FFE3         	movff	btemp,plusw1
 13902  0006E2                     l2774:
 13903                           
 13904                           ;doprnt.c: 834: }
 13905                           ;doprnt.c: 835: exp = 0;
 13906                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 13907  0006E2  0EF7               	movlw	-9
 13908  0006E4  6AE3               	clrf	plusw1,c
 13909  0006E6  0EF8               	movlw	-8
 13910  0006E8  6AE3               	clrf	plusw1,c
 13911                           
 13912                           ;doprnt.c: 836: if( fval!=0) {
 13913                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 13914  0006EA  0EF2               	movlw	-14
 13915  0006EC  50E3               	movf	plusw1,w,c
 13916  0006EE  E107               	bnz	u2210
 13917  0006F0  0EF3               	movlw	-13
 13918  0006F2  50E3               	movf	plusw1,w,c
 13919  0006F4  E104               	bnz	u2210
 13920  0006F6  0EF4               	movlw	-12
 13921  0006F8  50E3               	movf	plusw1,w,c
 13922  0006FA  B4D8               	btfsc	status,2,c
 13923  0006FC  D0CA               	goto	l670
 13924  0006FE                     u2210:
 13925                           
 13926                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 13927  0006FE  0E82               	movlw	130
 13928  000700  6E53               	movwf	btemp+1,c
 13929  000702  0EFF               	movlw	255
 13930  000704  6E54               	movwf	btemp+2,c
 13931                           
 13932                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 13933  000706  0EF2               	movlw	242
 13934  000708  24E1               	addwf	fsr1l,w,c
 13935  00070A  6ED9               	movwf	fsr2l,c
 13936  00070C  0EFF               	movlw	255
 13937  00070E  20E2               	addwfc	fsr1h,w,c
 13938  000710  6EDA               	movwf	fsr2h,c
 13939  000712  CFDE F05A          	movff	postinc2,btemp+8
 13940  000716  CFDE F05B          	movff	postinc2,btemp+9
 13941  00071A  CFDE F05C          	movff	postinc2,btemp+10
 13942  00071E  CFDE F05D          	movff	postinc2,btemp+11
 13943  000722  0E10               	movlw	16
 13944  000724  D005               	goto	u2220
 13945  000726                     u2225:
 13946  000726  90D8               	bcf	status,0,c
 13947  000728  325D               	rrcf	btemp+11,f,c
 13948  00072A  325C               	rrcf	btemp+10,f,c
 13949  00072C  325B               	rrcf	btemp+9,f,c
 13950  00072E  325A               	rrcf	btemp+8,f,c
 13951  000730                     u2220:
 13952  000730  2EE8               	decfsz	wreg,f,c
 13953  000732  D7F9               	goto	u2225
 13954  000734  C05A  F058         	movff	btemp+8,btemp+6
 13955  000738  C05B  F059         	movff	btemp+9,btemp+7
 13956  00073C  0EFF               	movlw	255
 13957  00073E  1658               	andwf	btemp+6,f,c
 13958  000740  0E00               	movlw	0
 13959  000742  1659               	andwf	btemp+7,f,c
 13960  000744  5053               	movf	btemp+1,w,c
 13961  000746  2658               	addwf	btemp+6,f,c
 13962  000748  5054               	movf	btemp+2,w,c
 13963  00074A  2259               	addwfc	btemp+7,f,c
 13964                           
 13965                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 13966  00074C  0EF7               	movlw	-9
 13967  00074E  C058  FFE3         	movff	btemp+6,plusw1
 13968  000752  0EF8               	movlw	-8
 13969  000754  C059  FFE3         	movff	btemp+7,plusw1
 13970                           
 13971                           ;doprnt.c: 838: exp--;
 13972                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 13973  000758  50E1               	movf	fsr1l,w,c
 13974  00075A  0FF7               	addlw	-9
 13975  00075C  6ED9               	movwf	fsr2l,c
 13976  00075E  50E2               	movf	fsr1h,w,c
 13977  000760  6EDA               	movwf	fsr2h,c
 13978  000762  0EFF               	movlw	255
 13979  000764  22DA               	addwfc	fsr2h,f,c
 13980  000766  06DE               	decf	postinc2,f,c
 13981  000768  0E00               	movlw	0
 13982  00076A  5ADD               	subwfb	postdec2,f,c
 13983                           
 13984                           ;doprnt.c: 839: exp *= 3;
 13985  00076C  0E03               	movlw	3
 13986  00076E  6EE6               	movwf	postinc1,c
 13987  000770  0E00               	movlw	0
 13988  000772  6EE6               	movwf	postinc1,c
 13989                           
 13990                           ;stkvar	sprintf@exp @ sp[(-24)+13]
 13991  000774  0EF5               	movlw	-11
 13992  000776  CFE3 FFE6          	movff	plusw1,postinc1
 13993  00077A  CFE3 FFE6          	movff	plusw1,postinc1
 13994  00077E  ECB6  F01F         	call	___wmul	;wreg free
 13995                           
 13996                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 13997  000782  0EF7               	movlw	-9
 13998  000784  C052  FFE3         	movff	btemp,plusw1
 13999  000788  0EF8               	movlw	-8
 14000  00078A  C053  FFE3         	movff	btemp+1,plusw1
 14001                           
 14002                           ;doprnt.c: 840: exp /= 10;
 14003  00078E  0E0A               	movlw	10
 14004  000790  6EE6               	movwf	postinc1,c
 14005  000792  0E00               	movlw	0
 14006  000794  6EE6               	movwf	postinc1,c
 14007                           
 14008                           ;stkvar	sprintf@exp @ sp[(-24)+13]
 14009  000796  0EF5               	movlw	-11
 14010  000798  CFE3 FFE6          	movff	plusw1,postinc1
 14011  00079C  CFE3 FFE6          	movff	plusw1,postinc1
 14012  0007A0  EC28  F01C         	call	___awdiv	;wreg free
 14013                           
 14014                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14015  0007A4  0EF7               	movlw	-9
 14016  0007A6  C052  FFE3         	movff	btemp,plusw1
 14017  0007AA  0EF8               	movlw	-8
 14018  0007AC  C053  FFE3         	movff	btemp+1,plusw1
 14019                           
 14020                           ;doprnt.c: 841: if(exp < 0)
 14021                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14022  0007B0  0EF8               	movlw	-8
 14023  0007B2  AEE3               	btfss	plusw1,7,c
 14024  0007B4  D00A               	goto	l2790
 14025                           
 14026                           ;doprnt.c: 842: exp--;
 14027                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14028  0007B6  50E1               	movf	fsr1l,w,c
 14029  0007B8  0FF7               	addlw	-9
 14030  0007BA  6ED9               	movwf	fsr2l,c
 14031  0007BC  50E2               	movf	fsr1h,w,c
 14032  0007BE  6EDA               	movwf	fsr2h,c
 14033  0007C0  0EFF               	movlw	255
 14034  0007C2  22DA               	addwfc	fsr2h,f,c
 14035  0007C4  06DE               	decf	postinc2,f,c
 14036  0007C6  0E00               	movlw	0
 14037  0007C8  5ADD               	subwfb	postdec2,f,c
 14038  0007CA                     l2790:
 14039                           
 14040                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 14041                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14042  0007CA  0EF7               	movlw	-9
 14043  0007CC  50E3               	movf	plusw1,w,c
 14044  0007CE  0800               	sublw	0
 14045  0007D0  6EE6               	movwf	postinc1,c
 14046  0007D2  ECE0  F009         	call	_scale	;wreg free
 14047                           
 14048                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14049  0007D6  0EEE               	movlw	-18
 14050  0007D8  C052  FFE3         	movff	btemp,plusw1
 14051  0007DC  0EEF               	movlw	-17
 14052  0007DE  C053  FFE3         	movff	btemp+1,plusw1
 14053  0007E2  0EF0               	movlw	-16
 14054  0007E4  C054  FFE3         	movff	btemp+2,plusw1
 14055                           
 14056                           ;doprnt.c: 847: tmpval.integ *= fval;
 14057                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14058  0007E8  0EF2               	movlw	-14
 14059  0007EA  CFE3 FFE6          	movff	plusw1,postinc1
 14060  0007EE  CFE3 FFE6          	movff	plusw1,postinc1
 14061  0007F2  CFE3 FFE6          	movff	plusw1,postinc1
 14062                           
 14063                           ;stkvar	sprintf@tmpval @ sp[(-25)+4]
 14064  0007F6  0EEB               	movlw	-21
 14065  0007F8  CFE3 FFE6          	movff	plusw1,postinc1
 14066  0007FC  CFE3 FFE6          	movff	plusw1,postinc1
 14067  000800  CFE3 FFE6          	movff	plusw1,postinc1
 14068  000804  ECB6  F00E         	call	___ftmul	;wreg free
 14069                           
 14070                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14071  000808  0EEE               	movlw	-18
 14072  00080A  C052  FFE3         	movff	btemp,plusw1
 14073  00080E  0EEF               	movlw	-17
 14074  000810  C053  FFE3         	movff	btemp+1,plusw1
 14075  000814  0EF0               	movlw	-16
 14076  000816  C054  FFE3         	movff	btemp+2,plusw1
 14077                           
 14078                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 14079  00081A  0E00               	movlw	0
 14080  00081C  6EE6               	movwf	postinc1,c
 14081  00081E  0E80               	movlw	128
 14082  000820  6EE6               	movwf	postinc1,c
 14083  000822  0E3F               	movlw	63
 14084  000824  6EE6               	movwf	postinc1,c
 14085                           
 14086                           ;stkvar	sprintf@tmpval @ sp[(-25)+4]
 14087  000826  0EEB               	movlw	-21
 14088  000828  CFE3 FFE6          	movff	plusw1,postinc1
 14089  00082C  CFE3 FFE6          	movff	plusw1,postinc1
 14090  000830  CFE3 FFE6          	movff	plusw1,postinc1
 14091  000834  EC10  F01F         	call	___ftge	;wreg free
 14092  000838  B052               	btfsc	btemp,0,c
 14093  00083A  D00B               	goto	l2798
 14094                           
 14095                           ;doprnt.c: 849: exp--;
 14096                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14097  00083C  50E1               	movf	fsr1l,w,c
 14098  00083E  0FF7               	addlw	-9
 14099  000840  6ED9               	movwf	fsr2l,c
 14100  000842  50E2               	movf	fsr1h,w,c
 14101  000844  6EDA               	movwf	fsr2h,c
 14102  000846  0EFF               	movlw	255
 14103  000848  22DA               	addwfc	fsr2h,f,c
 14104  00084A  06DE               	decf	postinc2,f,c
 14105  00084C  0E00               	movlw	0
 14106  00084E  5ADD               	subwfb	postdec2,f,c
 14107  000850  D020               	goto	l670
 14108  000852                     l2798:
 14109                           
 14110                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 14111  000852  0E00               	movlw	0
 14112  000854  6EE6               	movwf	postinc1,c
 14113  000856  0E20               	movlw	32
 14114  000858  6EE6               	movwf	postinc1,c
 14115  00085A  0E41               	movlw	65
 14116  00085C  6EE6               	movwf	postinc1,c
 14117                           
 14118                           ;stkvar	sprintf@tmpval @ sp[(-25)+4]
 14119  00085E  0EEB               	movlw	-21
 14120  000860  CFE3 FFE6          	movff	plusw1,postinc1
 14121  000864  CFE3 FFE6          	movff	plusw1,postinc1
 14122  000868  CFE3 FFE6          	movff	plusw1,postinc1
 14123  00086C  EC10  F01F         	call	___ftge	;wreg free
 14124  000870  A052               	btfss	btemp,0,c
 14125  000872  D00F               	goto	l670
 14126                           
 14127                           ;doprnt.c: 851: exp++;
 14128                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14129  000874  0EF7               	movlw	-9
 14130  000876  50E3               	movf	plusw1,w,c
 14131  000878  0F01               	addlw	1
 14132  00087A  6E52               	movwf	btemp,c
 14133  00087C  0EF7               	movlw	-9
 14134  00087E  C052  FFE3         	movff	btemp,plusw1
 14135  000882  6A52               	clrf	btemp,c
 14136  000884  0EF8               	movlw	-8
 14137  000886  50E3               	movf	plusw1,w,c
 14138  000888  2052               	addwfc	btemp,w,c
 14139  00088A  6E52               	movwf	btemp,c
 14140  00088C  0EF8               	movlw	-8
 14141  00088E  C052  FFE3         	movff	btemp,plusw1
 14142  000892                     l670:
 14143                           
 14144                           ;doprnt.c: 852: }
 14145                           ;doprnt.c: 1112: if(prec <= 12)
 14146                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 14147  000892  0EF6               	movlw	-10
 14148  000894  BEE3               	btfsc	plusw1,7,c
 14149  000896  D00A               	goto	l2802
 14150  000898  0EF6               	movlw	-10
 14151  00089A  50E3               	movf	plusw1,w,c
 14152  00089C  E124               	bnz	l2804
 14153  00089E  0EF5               	movlw	-11
 14154  0008A0  CFE3 F052          	movff	plusw1,btemp
 14155  0008A4  0E0D               	movlw	13
 14156  0008A6  5E52               	subwf	btemp,f,c
 14157  0008A8  B0D8               	btfsc	status,0,c
 14158  0008AA  D01D               	goto	l2804
 14159  0008AC                     l2802:
 14160                           
 14161                           ;doprnt.c: 1113: fval += fround(prec);
 14162                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 14163  0008AC  0EF5               	movlw	-11
 14164  0008AE  50E3               	movf	plusw1,w,c
 14165  0008B0  6EE6               	movwf	postinc1,c
 14166  0008B2  EC5B  F014         	call	_fround	;wreg free
 14167  0008B6  C052  FFE6         	movff	btemp,postinc1
 14168  0008BA  C053  FFE6         	movff	btemp+1,postinc1
 14169  0008BE  C054  FFE6         	movff	btemp+2,postinc1
 14170                           
 14171                           ;stkvar	sprintf@fval @ sp[(-25)+8]
 14172  0008C2  0EEF               	movlw	-17
 14173  0008C4  CFE3 FFE6          	movff	plusw1,postinc1
 14174  0008C8  CFE3 FFE6          	movff	plusw1,postinc1
 14175  0008CC  CFE3 FFE6          	movff	plusw1,postinc1
 14176  0008D0  EC00  F00C         	call	___ftadd	;wreg free
 14177                           
 14178                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14179  0008D4  0EF2               	movlw	-14
 14180  0008D6  C052  FFE3         	movff	btemp,plusw1
 14181  0008DA  0EF3               	movlw	-13
 14182  0008DC  C053  FFE3         	movff	btemp+1,plusw1
 14183  0008E0  0EF4               	movlw	-12
 14184  0008E2  C054  FFE3         	movff	btemp+2,plusw1
 14185  0008E6                     l2804:
 14186                           
 14187                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14188                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14189  0008E6  0EF8               	movlw	-8
 14190  0008E8  BEE3               	btfsc	plusw1,7,c
 14191  0008EA  D00A               	goto	l2806
 14192  0008EC  0EF8               	movlw	-8
 14193  0008EE  50E3               	movf	plusw1,w,c
 14194  0008F0  E141               	bnz	l2812
 14195  0008F2  0EF7               	movlw	-9
 14196  0008F4  CFE3 F052          	movff	plusw1,btemp
 14197  0008F8  0E0A               	movlw	10
 14198  0008FA  5E52               	subwf	btemp,f,c
 14199  0008FC  B0D8               	btfsc	status,0,c
 14200  0008FE  D03A               	goto	l2812
 14201  000900                     l2806:
 14202                           
 14203                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14204  000900  0EF2               	movlw	-14
 14205  000902  50E3               	movf	plusw1,w,c
 14206  000904  E107               	bnz	u2280
 14207  000906  0EF3               	movlw	-13
 14208  000908  50E3               	movf	plusw1,w,c
 14209  00090A  E104               	bnz	u2280
 14210  00090C  0EF4               	movlw	-12
 14211  00090E  50E3               	movf	plusw1,w,c
 14212  000910  B4D8               	btfsc	status,2,c
 14213  000912  D08F               	goto	l2826
 14214  000914                     u2280:
 14215                           
 14216                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14217  000914  0EF2               	movlw	-14
 14218  000916  CFE3 FFE6          	movff	plusw1,postinc1
 14219  00091A  CFE3 FFE6          	movff	plusw1,postinc1
 14220  00091E  CFE3 FFE6          	movff	plusw1,postinc1
 14221  000922  EC4F  F018         	call	___fttol	;wreg free
 14222  000926  C052  F056         	movff	btemp,btemp+4
 14223  00092A  C053  F057         	movff	btemp+1,btemp+5
 14224  00092E  C054  F058         	movff	btemp+2,btemp+6
 14225  000932  C055  F059         	movff	btemp+3,btemp+7
 14226  000936  0E00               	movlw	0
 14227  000938  6E5A               	movwf	btemp+8,c
 14228  00093A  6A5B               	clrf	btemp+9,c
 14229  00093C  6A5C               	clrf	btemp+10,c
 14230  00093E  6A5D               	clrf	btemp+11,c
 14231  000940  505D               	movf	btemp+11,w,c
 14232  000942  1859               	xorwf	btemp+7,w,c
 14233  000944  E108               	bnz	u2295
 14234  000946  505C               	movf	btemp+10,w,c
 14235  000948  1858               	xorwf	btemp+6,w,c
 14236  00094A  E105               	bnz	u2295
 14237  00094C  505B               	movf	btemp+9,w,c
 14238  00094E  1857               	xorwf	btemp+5,w,c
 14239  000950  E102               	bnz	u2295
 14240  000952  505A               	movf	btemp+8,w,c
 14241  000954  1856               	xorwf	btemp+4,w,c
 14242  000956                     u2295:
 14243  000956  A4D8               	btfss	status,2,c
 14244  000958  D06C               	goto	l2826
 14245                           
 14246                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14247  00095A  0EF8               	movlw	-8
 14248  00095C  BEE3               	btfsc	plusw1,7,c
 14249  00095E  D069               	goto	l2826
 14250  000960  0EF8               	movlw	-8
 14251  000962  50E3               	movf	plusw1,w,c
 14252  000964  E107               	bnz	u2300
 14253  000966  0EF7               	movlw	-9
 14254  000968  CFE3 F052          	movff	plusw1,btemp
 14255  00096C  0E02               	movlw	2
 14256  00096E  5E52               	subwf	btemp,f,c
 14257  000970  A0D8               	btfss	status,0,c
 14258  000972  D05F               	goto	l2826
 14259  000974                     u2300:
 14260  000974                     l2812:
 14261                           
 14262                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14263  000974  0E70               	movlw	112
 14264  000976  6EE6               	movwf	postinc1,c
 14265  000978  0E89               	movlw	137
 14266  00097A  6EE6               	movwf	postinc1,c
 14267  00097C  0E40               	movlw	64
 14268  00097E  6EE6               	movwf	postinc1,c
 14269                           
 14270                           ;stkvar	sprintf@tmpval @ sp[(-25)+4]
 14271  000980  0EEB               	movlw	-21
 14272  000982  CFE3 FFE6          	movff	plusw1,postinc1
 14273  000986  CFE3 FFE6          	movff	plusw1,postinc1
 14274  00098A  CFE3 FFE6          	movff	plusw1,postinc1
 14275  00098E  EC10  F01F         	call	___ftge	;wreg free
 14276  000992  B052               	btfsc	btemp,0,c
 14277  000994  D009               	goto	l2816
 14278                           
 14279                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14280                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14281  000996  50E1               	movf	fsr1l,w,c
 14282  000998  0FF7               	addlw	-9
 14283  00099A  6ED9               	movwf	fsr2l,c
 14284  00099C  50E2               	movf	fsr1h,w,c
 14285  00099E  6EDA               	movwf	fsr2h,c
 14286  0009A0  0EFF               	movlw	255
 14287  0009A2  22DA               	addwfc	fsr2h,f,c
 14288  0009A4  0EF7               	movlw	247
 14289  0009A6  D008               	goto	L24
 14290  0009A8                     l2816:
 14291                           
 14292                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14293                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14294  0009A8  50E1               	movf	fsr1l,w,c
 14295  0009AA  0FF7               	addlw	-9
 14296  0009AC  6ED9               	movwf	fsr2l,c
 14297  0009AE  50E2               	movf	fsr1h,w,c
 14298  0009B0  6EDA               	movwf	fsr2h,c
 14299  0009B2  0EFF               	movlw	255
 14300  0009B4  22DA               	addwfc	fsr2h,f,c
 14301  0009B6  0EF8               	movlw	248
 14302  0009B8                     L24:
 14303  0009B8  26DE               	addwf	postinc2,f,c
 14304  0009BA  0EFF               	movlw	255
 14305  0009BC  22DD               	addwfc	postdec2,f,c
 14306                           
 14307                           ;doprnt.c: 1124: }
 14308                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 14309                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14310  0009BE  0EF7               	movlw	-9
 14311  0009C0  50E3               	movf	plusw1,w,c
 14312  0009C2  6EE6               	movwf	postinc1,c
 14313  0009C4  ECE0  F009         	call	_scale	;wreg free
 14314                           
 14315                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14316  0009C8  0EEE               	movlw	-18
 14317  0009CA  C052  FFE3         	movff	btemp,plusw1
 14318  0009CE  0EEF               	movlw	-17
 14319  0009D0  C053  FFE3         	movff	btemp+1,plusw1
 14320  0009D4  0EF0               	movlw	-16
 14321  0009D6  C054  FFE3         	movff	btemp+2,plusw1
 14322                           
 14323                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14324                           
 14325                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 14326  0009DA  0EEE               	movlw	-18
 14327  0009DC  CFE3 FFE6          	movff	plusw1,postinc1
 14328  0009E0  CFE3 FFE6          	movff	plusw1,postinc1
 14329  0009E4  CFE3 FFE6          	movff	plusw1,postinc1
 14330                           
 14331                           ;stkvar	sprintf@fval @ sp[(-25)+8]
 14332  0009E8  0EEF               	movlw	-17
 14333  0009EA  CFE3 FFE6          	movff	plusw1,postinc1
 14334  0009EE  CFE3 FFE6          	movff	plusw1,postinc1
 14335  0009F2  CFE3 FFE6          	movff	plusw1,postinc1
 14336  0009F6  ECC0  F010         	call	__tdiv_to_l_	;wreg free
 14337                           
 14338                           ;stkvar	sprintf@val @ sp[(-22)+0]
 14339  0009FA  0EEA               	movlw	-22
 14340  0009FC  C052  FFE3         	movff	btemp,plusw1
 14341  000A00  0EEB               	movlw	-21
 14342  000A02  C053  FFE3         	movff	btemp+1,plusw1
 14343  000A06  0EEC               	movlw	-20
 14344  000A08  C054  FFE3         	movff	btemp+2,plusw1
 14345  000A0C  0EED               	movlw	-19
 14346  000A0E  C055  FFE3         	movff	btemp+3,plusw1
 14347                           
 14348                           ;doprnt.c: 1129: fval = 0.0;
 14349  000A12  0E00               	movlw	0
 14350  000A14  6E5B               	movwf	btemp+9,c
 14351  000A16  0E00               	movlw	0
 14352  000A18  6E5C               	movwf	btemp+10,c
 14353  000A1A  0E00               	movlw	0
 14354  000A1C  6E5D               	movwf	btemp+11,c
 14355                           
 14356                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14357  000A1E  0EF2               	movlw	-14
 14358  000A20  C05B  FFE3         	movff	btemp+9,plusw1
 14359  000A24  0EF3               	movlw	-13
 14360  000A26  C05C  FFE3         	movff	btemp+10,plusw1
 14361  000A2A  0EF4               	movlw	-12
 14362  000A2C  C05D  FFE3         	movff	btemp+11,plusw1
 14363                           
 14364                           ;doprnt.c: 1130: } else {
 14365  000A30  D03C               	goto	l2832
 14366  000A32                     l2826:
 14367                           
 14368                           ;doprnt.c: 1131: val = (unsigned long)fval;
 14369                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14370  000A32  0EF2               	movlw	-14
 14371  000A34  CFE3 FFE6          	movff	plusw1,postinc1
 14372  000A38  CFE3 FFE6          	movff	plusw1,postinc1
 14373  000A3C  CFE3 FFE6          	movff	plusw1,postinc1
 14374  000A40  EC4F  F018         	call	___fttol	;wreg free
 14375                           
 14376                           ;stkvar	sprintf@val @ sp[(-22)+0]
 14377  000A44  0EEA               	movlw	-22
 14378  000A46  C052  FFE3         	movff	btemp,plusw1
 14379  000A4A  0EEB               	movlw	-21
 14380  000A4C  C053  FFE3         	movff	btemp+1,plusw1
 14381  000A50  0EEC               	movlw	-20
 14382  000A52  C054  FFE3         	movff	btemp+2,plusw1
 14383  000A56  0EED               	movlw	-19
 14384  000A58  C055  FFE3         	movff	btemp+3,plusw1
 14385                           
 14386                           ;doprnt.c: 1132: fval -= (double)val;
 14387                           ;stkvar	sprintf@val @ sp[(-22)+0]
 14388  000A5C  0EEA               	movlw	-22
 14389  000A5E  CFE3 FFE6          	movff	plusw1,postinc1
 14390  000A62  CFE3 FFE6          	movff	plusw1,postinc1
 14391  000A66  CFE3 FFE6          	movff	plusw1,postinc1
 14392  000A6A  CFE3 FFE6          	movff	plusw1,postinc1
 14393  000A6E  ECBB  F021         	call	___lltoft	;wreg free
 14394  000A72  C052  FFE6         	movff	btemp,postinc1
 14395  000A76  C053  FFE6         	movff	btemp+1,postinc1
 14396  000A7A  C054  FFE6         	movff	btemp+2,postinc1
 14397                           
 14398                           ;stkvar	sprintf@fval @ sp[(-25)+8]
 14399  000A7E  0EEF               	movlw	-17
 14400  000A80  CFE3 FFE6          	movff	plusw1,postinc1
 14401  000A84  CFE3 FFE6          	movff	plusw1,postinc1
 14402  000A88  CFE3 FFE6          	movff	plusw1,postinc1
 14403  000A8C  EC5D  F022         	call	___ftsub	;wreg free
 14404                           
 14405                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14406  000A90  0EF2               	movlw	-14
 14407  000A92  C052  FFE3         	movff	btemp,plusw1
 14408  000A96  0EF3               	movlw	-13
 14409  000A98  C053  FFE3         	movff	btemp+1,plusw1
 14410  000A9C  0EF4               	movlw	-12
 14411  000A9E  C054  FFE3         	movff	btemp+2,plusw1
 14412                           
 14413                           ;doprnt.c: 1133: exp = 0;
 14414                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14415  000AA2  0EF7               	movlw	-9
 14416  000AA4  6AE3               	clrf	plusw1,c
 14417  000AA6  0EF8               	movlw	-8
 14418  000AA8  6AE3               	clrf	plusw1,c
 14419  000AAA                     l2832:
 14420                           
 14421                           ;doprnt.c: 1134: }
 14422                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14423                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14424  000AAA  0EFF               	movlw	-1
 14425  000AAC  6AE3               	clrf	plusw1,c
 14426  000AAE  2AE3               	incf	plusw1,f,c
 14427  000AB0                     l2838:
 14428                           
 14429                           ;doprnt.c: 1137: if(val < dpowers[c])
 14430                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14431  000AB0  0EFF               	movlw	-1
 14432  000AB2  50E3               	movf	plusw1,w,c
 14433  000AB4  0D04               	mullw	4
 14434  000AB6  0E13               	movlw	low _dpowers
 14435  000AB8  24F3               	addwf	prodl,w,c
 14436  000ABA  6EF6               	movwf	tblptrl,c
 14437  000ABC  0E73               	movlw	high _dpowers
 14438  000ABE  20F4               	addwfc	prodh,w,c
 14439  000AC0  6EF7               	movwf	tblptrh,c
 14440  000AC2                     	if	0	;There are less than 3 active tblptr bytes
 14441  000AC2                     	endif
 14442                           
 14443                           ;stkvar	sprintf@val @ sp[(-22)+0]
 14444  000AC2  0EEA               	movlw	-22
 14445  000AC4  CFE3 F052          	movff	plusw1,btemp
 14446  000AC8  0009               	tblrd		*+
 14447  000ACA  50F5               	movf	tablat,w,c
 14448  000ACC  5C52               	subwf	btemp,w,c
 14449  000ACE  0EEB               	movlw	-21
 14450  000AD0  CFE3 F052          	movff	plusw1,btemp
 14451  000AD4  0009               	tblrd		*+
 14452  000AD6  50F5               	movf	tablat,w,c
 14453  000AD8  5852               	subwfb	btemp,w,c
 14454  000ADA  0EEC               	movlw	-20
 14455  000ADC  CFE3 F052          	movff	plusw1,btemp
 14456  000AE0  0009               	tblrd		*+
 14457  000AE2  50F5               	movf	tablat,w,c
 14458  000AE4  5852               	subwfb	btemp,w,c
 14459  000AE6  0EED               	movlw	-19
 14460  000AE8  CFE3 F052          	movff	plusw1,btemp
 14461  000AEC  0009               	tblrd		*+
 14462  000AEE  50F5               	movf	tablat,w,c
 14463  000AF0  5852               	subwfb	btemp,w,c
 14464  000AF2  A0D8               	btfss	status,0,c
 14465  000AF4  D009               	goto	l2846
 14466                           
 14467                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14468  000AF6  0EFF               	movlw	-1
 14469  000AF8  2AE3               	incf	plusw1,f,c
 14470                           
 14471                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14472  000AFA  0EFF               	movlw	-1
 14473  000AFC  CFE3 F052          	movff	plusw1,btemp
 14474  000B00  0E0A               	movlw	10
 14475  000B02  1852               	xorwf	btemp,w,c
 14476  000B04  A4D8               	btfss	status,2,c
 14477  000B06  D7D4               	goto	l2838
 14478  000B08                     l2846:
 14479                           
 14480                           ;doprnt.c: 1142: width -= prec + c + exp;
 14481                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14482                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 14483                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14484  000B08  0EFF               	movlw	-1
 14485  000B0A  50E3               	movf	plusw1,w,c
 14486  000B0C  6E53               	movwf	btemp+1,c
 14487  000B0E  6A54               	clrf	btemp+2,c
 14488  000B10  BE53               	btfsc	btemp+1,7,c
 14489  000B12  0654               	decf	btemp+2,f,c
 14490  000B14  0EF5               	movlw	-11
 14491  000B16  50E3               	movf	plusw1,w,c
 14492  000B18  2653               	addwf	btemp+1,f,c
 14493  000B1A  0EF6               	movlw	-10
 14494  000B1C  50E3               	movf	plusw1,w,c
 14495  000B1E  2254               	addwfc	btemp+2,f,c
 14496  000B20  0EF7               	movlw	-9
 14497  000B22  50E3               	movf	plusw1,w,c
 14498  000B24  2653               	addwf	btemp+1,f,c
 14499  000B26  0EF8               	movlw	-8
 14500  000B28  50E3               	movf	plusw1,w,c
 14501  000B2A  2254               	addwfc	btemp+2,f,c
 14502                           
 14503                           ;stkvar	sprintf@width @ sp[(-22)+15]
 14504  000B2C  0EF9               	movlw	-7
 14505  000B2E  CFE3 F052          	movff	plusw1,btemp
 14506  000B32  5053               	movf	btemp+1,w,c
 14507  000B34  5E52               	subwf	btemp,f,c
 14508  000B36  0EF9               	movlw	-7
 14509  000B38  C052  FFE3         	movff	btemp,plusw1
 14510  000B3C  0EFA               	movlw	-6
 14511  000B3E  CFE3 F052          	movff	plusw1,btemp
 14512  000B42  5054               	movf	btemp+2,w,c
 14513  000B44  5A52               	subwfb	btemp,f,c
 14514  000B46  0EFA               	movlw	-6
 14515  000B48  C052  FFE3         	movff	btemp,plusw1
 14516                           
 14517                           ;doprnt.c: 1143: if(
 14518                           ;doprnt.c: 1147: prec)
 14519                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 14520  000B4C  0EF5               	movlw	-11
 14521  000B4E  CFE3 F052          	movff	plusw1,btemp
 14522  000B52  0EF6               	movlw	-10
 14523  000B54  50E3               	movf	plusw1,w,c
 14524  000B56  1052               	iorwf	btemp,w,c
 14525  000B58  B4D8               	btfsc	status,2,c
 14526  000B5A  D00A               	goto	l2852
 14527                           
 14528                           ;doprnt.c: 1148: width--;
 14529                           ;stkvar	sprintf@width @ sp[(-22)+15]
 14530  000B5C  50E1               	movf	fsr1l,w,c
 14531  000B5E  0FF9               	addlw	-7
 14532  000B60  6ED9               	movwf	fsr2l,c
 14533  000B62  50E2               	movf	fsr1h,w,c
 14534  000B64  6EDA               	movwf	fsr2h,c
 14535  000B66  0EFF               	movlw	255
 14536  000B68  22DA               	addwfc	fsr2h,f,c
 14537  000B6A  06DE               	decf	postinc2,f,c
 14538  000B6C  0E00               	movlw	0
 14539  000B6E  5ADD               	subwfb	postdec2,f,c
 14540  000B70                     l2852:
 14541                           
 14542                           ;doprnt.c: 1149: if(flag & 0x03)
 14543                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 14544  000B70  0EFB               	movlw	-5
 14545  000B72  CFE3 F05D          	movff	plusw1,btemp+11
 14546  000B76  0E03               	movlw	3
 14547  000B78  165D               	andwf	btemp+11,f,c
 14548  000B7A  B4D8               	btfsc	status,2,c
 14549  000B7C  D023               	goto	l2862
 14550  000B7E                     l2854:
 14551                           
 14552                           ;doprnt.c: 1150: width--;
 14553                           ;stkvar	sprintf@width @ sp[(-22)+15]
 14554  000B7E  50E1               	movf	fsr1l,w,c
 14555  000B80  0FF9               	addlw	-7
 14556  000B82  6ED9               	movwf	fsr2l,c
 14557  000B84  50E2               	movf	fsr1h,w,c
 14558  000B86  6EDA               	movwf	fsr2h,c
 14559  000B88  0EFF               	movlw	255
 14560  000B8A  22DA               	addwfc	fsr2h,f,c
 14561  000B8C  06DE               	decf	postinc2,f,c
 14562  000B8E  0E00               	movlw	0
 14563  000B90  5ADD               	subwfb	postdec2,f,c
 14564  000B92  D018               	goto	l2862
 14565  000B94                     l2856:
 14566                           
 14567                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 14568                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14569  000B94  0EE7               	movlw	-25
 14570  000B96  CFE3 FFD9          	movff	plusw1,fsr2l
 14571  000B9A  0EE8               	movlw	-24
 14572  000B9C  CFE3 FFDA          	movff	plusw1,fsr2h
 14573  000BA0  0E20               	movlw	32
 14574  000BA2  6EDF               	movwf	indf2,c
 14575                           
 14576                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14577  000BA4  0EE7               	movlw	-25
 14578  000BA6  50E3               	movf	plusw1,w,c
 14579  000BA8  0F01               	addlw	1
 14580  000BAA  6E52               	movwf	btemp,c
 14581  000BAC  0EE7               	movlw	-25
 14582  000BAE  C052  FFE3         	movff	btemp,plusw1
 14583  000BB2  6A52               	clrf	btemp,c
 14584  000BB4  0EE8               	movlw	-24
 14585  000BB6  50E3               	movf	plusw1,w,c
 14586  000BB8  2052               	addwfc	btemp,w,c
 14587  000BBA  6E52               	movwf	btemp,c
 14588  000BBC  0EE8               	movlw	-24
 14589  000BBE  C052  FFE3         	movff	btemp,plusw1
 14590  000BC2  D7DD               	goto	l2854
 14591  000BC4                     l2862:
 14592                           
 14593                           ;stkvar	sprintf@width @ sp[(-22)+15]
 14594  000BC4  0EFA               	movlw	-6
 14595  000BC6  BEE3               	btfsc	plusw1,7,c
 14596  000BC8  D007               	goto	l2864
 14597  000BCA  0EFA               	movlw	-6
 14598  000BCC  50E3               	movf	plusw1,w,c
 14599  000BCE  E1E2               	bnz	l2856
 14600  000BD0  0EF9               	movlw	-7
 14601  000BD2  04E3               	decf	plusw1,w,c
 14602  000BD4  B0D8               	btfsc	status,0,c
 14603  000BD6  D7DE               	goto	l2856
 14604  000BD8                     l2864:
 14605                           
 14606                           ;doprnt.c: 1183: }
 14607                           ;doprnt.c: 1188: if(flag & 0x03)
 14608                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 14609  000BD8  0EFB               	movlw	-5
 14610  000BDA  CFE3 F05D          	movff	plusw1,btemp+11
 14611  000BDE  0E03               	movlw	3
 14612  000BE0  165D               	andwf	btemp+11,f,c
 14613  000BE2  B4D8               	btfsc	status,2,c
 14614  000BE4  D06D               	goto	l2878
 14615                           
 14616                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 14617                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14618  000BE6  0EE7               	movlw	-25
 14619  000BE8  CFE3 FFD9          	movff	plusw1,fsr2l
 14620  000BEC  0EE8               	movlw	-24
 14621  000BEE  CFE3 FFDA          	movff	plusw1,fsr2h
 14622  000BF2  0E2D               	movlw	45
 14623  000BF4  6EDF               	movwf	indf2,c
 14624                           
 14625                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14626  000BF6  0EE7               	movlw	-25
 14627  000BF8  50E3               	movf	plusw1,w,c
 14628  000BFA  0F01               	addlw	1
 14629  000BFC  6E52               	movwf	btemp,c
 14630  000BFE  0EE7               	movlw	-25
 14631  000C00  C052  FFE3         	movff	btemp,plusw1
 14632  000C04  6A52               	clrf	btemp,c
 14633  000C06  0EE8               	movlw	-24
 14634  000C08  50E3               	movf	plusw1,w,c
 14635  000C0A  2052               	addwfc	btemp,w,c
 14636  000C0C  6E52               	movwf	btemp,c
 14637  000C0E  0EE8               	movlw	-24
 14638  000C10  C052  FFE3         	movff	btemp,plusw1
 14639  000C14  D055               	goto	l2878
 14640  000C16                     l2870:
 14641                           
 14642                           ;doprnt.c: 1200: {
 14643                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14644                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14645  000C16  0EFF               	movlw	-1
 14646  000C18  50E3               	movf	plusw1,w,c
 14647  000C1A  0D04               	mullw	4
 14648  000C1C  0E13               	movlw	low _dpowers
 14649  000C1E  24F3               	addwf	prodl,w,c
 14650  000C20  6EF6               	movwf	tblptrl,c
 14651  000C22  0E73               	movlw	high _dpowers
 14652  000C24  20F4               	addwfc	prodh,w,c
 14653  000C26  6EF7               	movwf	tblptrh,c
 14654  000C28                     	if	0	;There are less than 3 active tblptr bytes
 14655  000C28                     	endif
 14656  000C28  0009               	tblrd		*+
 14657  000C2A  CFF5 FFE6          	movff	tablat,postinc1
 14658  000C2E  0009               	tblrd		*+
 14659  000C30  CFF5 FFE6          	movff	tablat,postinc1
 14660  000C34  0009               	tblrd		*+
 14661  000C36  CFF5 FFE6          	movff	tablat,postinc1
 14662  000C3A  0009               	tblrd		*+
 14663  000C3C  CFF5 FFE6          	movff	tablat,postinc1
 14664                           
 14665                           ;stkvar	sprintf@val @ sp[(-26)+0]
 14666  000C40  0EE6               	movlw	-26
 14667  000C42  CFE3 FFE6          	movff	plusw1,postinc1
 14668  000C46  CFE3 FFE6          	movff	plusw1,postinc1
 14669  000C4A  CFE3 FFE6          	movff	plusw1,postinc1
 14670  000C4E  CFE3 FFE6          	movff	plusw1,postinc1
 14671  000C52  EC4D  F01D         	call	___lldiv	;wreg free
 14672                           
 14673                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14674  000C56  0EEE               	movlw	-18
 14675  000C58  C052  FFE3         	movff	btemp,plusw1
 14676  000C5C  0EEF               	movlw	-17
 14677  000C5E  C053  FFE3         	movff	btemp+1,plusw1
 14678  000C62  0EF0               	movlw	-16
 14679  000C64  C054  FFE3         	movff	btemp+2,plusw1
 14680  000C68  0EF1               	movlw	-15
 14681  000C6A  C055  FFE3         	movff	btemp+3,plusw1
 14682                           
 14683                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14684  000C6E  0E0A               	movlw	10
 14685  000C70  6EE6               	movwf	postinc1,c
 14686  000C72  0E00               	movlw	0
 14687  000C74  6EE6               	movwf	postinc1,c
 14688  000C76  0E00               	movlw	0
 14689  000C78  6EE6               	movwf	postinc1,c
 14690  000C7A  0E00               	movlw	0
 14691  000C7C  6EE6               	movwf	postinc1,c
 14692                           
 14693                           ;stkvar	sprintf@tmpval @ sp[(-26)+4]
 14694  000C7E  0EEA               	movlw	-22
 14695  000C80  CFE3 FFE6          	movff	plusw1,postinc1
 14696  000C84  CFE3 FFE6          	movff	plusw1,postinc1
 14697  000C88  CFE3 FFE6          	movff	plusw1,postinc1
 14698  000C8C  CFE3 FFE6          	movff	plusw1,postinc1
 14699  000C90  EC4E  F01E         	call	___llmod	;wreg free
 14700                           
 14701                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14702  000C94  0EEE               	movlw	-18
 14703  000C96  C052  FFE3         	movff	btemp,plusw1
 14704  000C9A  0EEF               	movlw	-17
 14705  000C9C  C053  FFE3         	movff	btemp+1,plusw1
 14706  000CA0  0EF0               	movlw	-16
 14707  000CA2  C054  FFE3         	movff	btemp+2,plusw1
 14708  000CA6  0EF1               	movlw	-15
 14709  000CA8  C055  FFE3         	movff	btemp+3,plusw1
 14710                           
 14711                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 14712                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14713  000CAC  0EE7               	movlw	-25
 14714  000CAE  CFE3 FFD9          	movff	plusw1,fsr2l
 14715  000CB2  0EE8               	movlw	-24
 14716  000CB4  CFE3 FFDA          	movff	plusw1,fsr2h
 14717                           
 14718                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14719  000CB8  0EEE               	movlw	-18
 14720  000CBA  50E3               	movf	plusw1,w,c
 14721  000CBC  0F30               	addlw	48
 14722  000CBE  D79A               	goto	L25
 14723  000CC0                     l2878:
 14724                           
 14725                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14726  000CC0  0EFF               	movlw	-1
 14727  000CC2  CFE3 F052          	movff	plusw1,btemp
 14728  000CC6  0EFF               	movlw	-1
 14729  000CC8  2652               	addwf	btemp,f,c
 14730  000CCA  0EFF               	movlw	-1
 14731  000CCC  C052  FFE3         	movff	btemp,plusw1
 14732  000CD0  0EFF               	movlw	-1
 14733  000CD2  28E3               	incf	plusw1,w,c
 14734  000CD4  B4D8               	btfsc	status,2,c
 14735  000CD6  D022               	goto	l2886
 14736  000CD8  D79E               	goto	l2870
 14737  000CDA                     l2880:
 14738                           
 14739                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 14740                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14741  000CDA  0EE7               	movlw	-25
 14742  000CDC  CFE3 FFD9          	movff	plusw1,fsr2l
 14743  000CE0  0EE8               	movlw	-24
 14744  000CE2  CFE3 FFDA          	movff	plusw1,fsr2h
 14745  000CE6  0E30               	movlw	48
 14746  000CE8  6EDF               	movwf	indf2,c
 14747                           
 14748                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14749  000CEA  0EE7               	movlw	-25
 14750  000CEC  50E3               	movf	plusw1,w,c
 14751  000CEE  0F01               	addlw	1
 14752  000CF0  6E52               	movwf	btemp,c
 14753  000CF2  0EE7               	movlw	-25
 14754  000CF4  C052  FFE3         	movff	btemp,plusw1
 14755  000CF8  6A52               	clrf	btemp,c
 14756  000CFA  0EE8               	movlw	-24
 14757  000CFC  50E3               	movf	plusw1,w,c
 14758  000CFE  2052               	addwfc	btemp,w,c
 14759  000D00  6E52               	movwf	btemp,c
 14760  000D02  0EE8               	movlw	-24
 14761  000D04  C052  FFE3         	movff	btemp,plusw1
 14762                           
 14763                           ;doprnt.c: 1209: exp--;
 14764                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14765  000D08  50E1               	movf	fsr1l,w,c
 14766  000D0A  0FF7               	addlw	-9
 14767  000D0C  6ED9               	movwf	fsr2l,c
 14768  000D0E  50E2               	movf	fsr1h,w,c
 14769  000D10  6EDA               	movwf	fsr2h,c
 14770  000D12  0EFF               	movlw	255
 14771  000D14  22DA               	addwfc	fsr2h,f,c
 14772  000D16  06DE               	decf	postinc2,f,c
 14773  000D18  0E00               	movlw	0
 14774  000D1A  5ADD               	subwfb	postdec2,f,c
 14775  000D1C                     l2886:
 14776                           
 14777                           ;stkvar	sprintf@exp @ sp[(-22)+13]
 14778  000D1C  0EF8               	movlw	-8
 14779  000D1E  BEE3               	btfsc	plusw1,7,c
 14780  000D20  D007               	goto	l2888
 14781  000D22  0EF8               	movlw	-8
 14782  000D24  50E3               	movf	plusw1,w,c
 14783  000D26  E1D9               	bnz	l2880
 14784  000D28  0EF7               	movlw	-9
 14785  000D2A  04E3               	decf	plusw1,w,c
 14786  000D2C  B0D8               	btfsc	status,0,c
 14787  000D2E  D7D5               	goto	l2880
 14788  000D30                     l2888:
 14789                           
 14790                           ;doprnt.c: 1210: }
 14791                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14792                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 14793  000D30  0EF6               	movlw	-10
 14794  000D32  BEE3               	btfsc	plusw1,7,c
 14795  000D34  D00E               	goto	l2892
 14796  000D36  0EF6               	movlw	-10
 14797  000D38  50E3               	movf	plusw1,w,c
 14798  000D3A  E107               	bnz	u2400
 14799  000D3C  0EF5               	movlw	-11
 14800  000D3E  CFE3 F052          	movff	plusw1,btemp
 14801  000D42  0E09               	movlw	9
 14802  000D44  5E52               	subwf	btemp,f,c
 14803  000D46  A0D8               	btfss	status,0,c
 14804  000D48  D004               	goto	l2892
 14805  000D4A                     u2400:
 14806                           
 14807                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14808                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14809  000D4A  0EFF               	movlw	-1
 14810  000D4C  6AE3               	clrf	plusw1,c
 14811  000D4E  86E3               	bsf	plusw1,3,c
 14812  000D50  D006               	goto	l2894
 14813  000D52                     l2892:
 14814                           
 14815                           ;doprnt.c: 1213: else
 14816                           ;doprnt.c: 1214: c = prec;
 14817                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 14818                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14819  000D52  0EF5               	movlw	-11
 14820  000D54  CFE3 F052          	movff	plusw1,btemp
 14821  000D58  0EFF               	movlw	-1
 14822  000D5A  C052  FFE3         	movff	btemp,plusw1
 14823  000D5E                     l2894:
 14824                           
 14825                           ;doprnt.c: 1215: prec -= c;
 14826                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14827  000D5E  0EFF               	movlw	-1
 14828  000D60  50E3               	movf	plusw1,w,c
 14829  000D62  6E53               	movwf	btemp+1,c
 14830  000D64  6A54               	clrf	btemp+2,c
 14831  000D66  BE53               	btfsc	btemp+1,7,c
 14832  000D68  0654               	decf	btemp+2,f,c
 14833                           
 14834                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 14835  000D6A  0EF5               	movlw	-11
 14836  000D6C  CFE3 F052          	movff	plusw1,btemp
 14837  000D70  5053               	movf	btemp+1,w,c
 14838  000D72  5E52               	subwf	btemp,f,c
 14839  000D74  0EF5               	movlw	-11
 14840  000D76  C052  FFE3         	movff	btemp,plusw1
 14841  000D7A  0EF6               	movlw	-10
 14842  000D7C  CFE3 F052          	movff	plusw1,btemp
 14843  000D80  5054               	movf	btemp+2,w,c
 14844  000D82  5A52               	subwfb	btemp,f,c
 14845  000D84  0EF6               	movlw	-10
 14846  000D86  C052  FFE3         	movff	btemp,plusw1
 14847                           
 14848                           ;doprnt.c: 1219: if(c)
 14849                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14850  000D8A  0EFF               	movlw	-1
 14851  000D8C  50E3               	movf	plusw1,w,c
 14852  000D8E  B4D8               	btfsc	status,2,c
 14853  000D90  D017               	goto	l2902
 14854                           
 14855                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 14856                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14857  000D92  0EE7               	movlw	-25
 14858  000D94  CFE3 FFD9          	movff	plusw1,fsr2l
 14859  000D98  0EE8               	movlw	-24
 14860  000D9A  CFE3 FFDA          	movff	plusw1,fsr2h
 14861  000D9E  0E2E               	movlw	46
 14862  000DA0  6EDF               	movwf	indf2,c
 14863                           
 14864                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14865  000DA2  0EE7               	movlw	-25
 14866  000DA4  50E3               	movf	plusw1,w,c
 14867  000DA6  0F01               	addlw	1
 14868  000DA8  6E52               	movwf	btemp,c
 14869  000DAA  0EE7               	movlw	-25
 14870  000DAC  C052  FFE3         	movff	btemp,plusw1
 14871  000DB0  6A52               	clrf	btemp,c
 14872  000DB2  0EE8               	movlw	-24
 14873  000DB4  50E3               	movf	plusw1,w,c
 14874  000DB6  2052               	addwfc	btemp,w,c
 14875  000DB8  6E52               	movwf	btemp,c
 14876  000DBA  0EE8               	movlw	-24
 14877  000DBC  C052  FFE3         	movff	btemp,plusw1
 14878  000DC0                     l2902:
 14879                           
 14880                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14881                           ;stkvar	sprintf@fval @ sp[(-22)+8]
 14882  000DC0  0EF2               	movlw	-14
 14883  000DC2  CFE3 FFE6          	movff	plusw1,postinc1
 14884  000DC6  CFE3 FFE6          	movff	plusw1,postinc1
 14885  000DCA  CFE3 FFE6          	movff	plusw1,postinc1
 14886                           
 14887                           ;stkvar	sprintf@c @ sp[(-25)+21]
 14888  000DCE  0EFC               	movlw	-4
 14889  000DD0  50E3               	movf	plusw1,w,c
 14890  000DD2  6EE6               	movwf	postinc1,c
 14891  000DD4  ECE0  F009         	call	_scale	;wreg free
 14892  000DD8  C052  FFE6         	movff	btemp,postinc1
 14893  000DDC  C053  FFE6         	movff	btemp+1,postinc1
 14894  000DE0  C054  FFE6         	movff	btemp+2,postinc1
 14895  000DE4  ECB6  F00E         	call	___ftmul	;wreg free
 14896  000DE8  C052  FFE6         	movff	btemp,postinc1
 14897  000DEC  C053  FFE6         	movff	btemp+1,postinc1
 14898  000DF0  C054  FFE6         	movff	btemp+2,postinc1
 14899  000DF4  EC4F  F018         	call	___fttol	;wreg free
 14900  000DF8  D084               	goto	L26
 14901  000DFA                     l2904:
 14902                           
 14903                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 14904                           ;stkvar	sprintf@c @ sp[(-22)+21]
 14905  000DFA  0EFF               	movlw	-1
 14906  000DFC  50E3               	movf	plusw1,w,c
 14907  000DFE  0D04               	mullw	4
 14908  000E00  0E13               	movlw	low _dpowers
 14909  000E02  24F3               	addwf	prodl,w,c
 14910  000E04  6EF6               	movwf	tblptrl,c
 14911  000E06  0E73               	movlw	high _dpowers
 14912  000E08  20F4               	addwfc	prodh,w,c
 14913  000E0A  6EF7               	movwf	tblptrh,c
 14914  000E0C                     	if	0	;There are less than 3 active tblptr bytes
 14915  000E0C                     	endif
 14916  000E0C  0009               	tblrd		*+
 14917  000E0E  CFF5 FFE6          	movff	tablat,postinc1
 14918  000E12  0009               	tblrd		*+
 14919  000E14  CFF5 FFE6          	movff	tablat,postinc1
 14920  000E18  0009               	tblrd		*+
 14921  000E1A  CFF5 FFE6          	movff	tablat,postinc1
 14922  000E1E  0009               	tblrd		*+
 14923  000E20  CFF5 FFE6          	movff	tablat,postinc1
 14924                           
 14925                           ;stkvar	sprintf@val @ sp[(-26)+0]
 14926  000E24  0EE6               	movlw	-26
 14927  000E26  CFE3 FFE6          	movff	plusw1,postinc1
 14928  000E2A  CFE3 FFE6          	movff	plusw1,postinc1
 14929  000E2E  CFE3 FFE6          	movff	plusw1,postinc1
 14930  000E32  CFE3 FFE6          	movff	plusw1,postinc1
 14931  000E36  EC4D  F01D         	call	___lldiv	;wreg free
 14932                           
 14933                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14934  000E3A  0EEE               	movlw	-18
 14935  000E3C  C052  FFE3         	movff	btemp,plusw1
 14936  000E40  0EEF               	movlw	-17
 14937  000E42  C053  FFE3         	movff	btemp+1,plusw1
 14938  000E46  0EF0               	movlw	-16
 14939  000E48  C054  FFE3         	movff	btemp+2,plusw1
 14940  000E4C  0EF1               	movlw	-15
 14941  000E4E  C055  FFE3         	movff	btemp+3,plusw1
 14942                           
 14943                           ;doprnt.c: 1230: tmpval.vd %= 10;
 14944  000E52  0E0A               	movlw	10
 14945  000E54  6EE6               	movwf	postinc1,c
 14946  000E56  0E00               	movlw	0
 14947  000E58  6EE6               	movwf	postinc1,c
 14948  000E5A  0E00               	movlw	0
 14949  000E5C  6EE6               	movwf	postinc1,c
 14950  000E5E  0E00               	movlw	0
 14951  000E60  6EE6               	movwf	postinc1,c
 14952                           
 14953                           ;stkvar	sprintf@tmpval @ sp[(-26)+4]
 14954  000E62  0EEA               	movlw	-22
 14955  000E64  CFE3 FFE6          	movff	plusw1,postinc1
 14956  000E68  CFE3 FFE6          	movff	plusw1,postinc1
 14957  000E6C  CFE3 FFE6          	movff	plusw1,postinc1
 14958  000E70  CFE3 FFE6          	movff	plusw1,postinc1
 14959  000E74  EC4E  F01E         	call	___llmod	;wreg free
 14960                           
 14961                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14962  000E78  0EEE               	movlw	-18
 14963  000E7A  C052  FFE3         	movff	btemp,plusw1
 14964  000E7E  0EEF               	movlw	-17
 14965  000E80  C053  FFE3         	movff	btemp+1,plusw1
 14966  000E84  0EF0               	movlw	-16
 14967  000E86  C054  FFE3         	movff	btemp+2,plusw1
 14968  000E8A  0EF1               	movlw	-15
 14969  000E8C  C055  FFE3         	movff	btemp+3,plusw1
 14970                           
 14971                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 14972                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14973  000E90  0EE7               	movlw	-25
 14974  000E92  CFE3 FFD9          	movff	plusw1,fsr2l
 14975  000E96  0EE8               	movlw	-24
 14976  000E98  CFE3 FFDA          	movff	plusw1,fsr2h
 14977                           
 14978                           ;stkvar	sprintf@tmpval @ sp[(-22)+4]
 14979  000E9C  0EEE               	movlw	-18
 14980  000E9E  50E3               	movf	plusw1,w,c
 14981  000EA0  0F30               	addlw	48
 14982  000EA2  6EDF               	movwf	indf2,c
 14983                           
 14984                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 14985  000EA4  0EE7               	movlw	-25
 14986  000EA6  50E3               	movf	plusw1,w,c
 14987  000EA8  0F01               	addlw	1
 14988  000EAA  6E52               	movwf	btemp,c
 14989  000EAC  0EE7               	movlw	-25
 14990  000EAE  C052  FFE3         	movff	btemp,plusw1
 14991  000EB2  6A52               	clrf	btemp,c
 14992  000EB4  0EE8               	movlw	-24
 14993  000EB6  50E3               	movf	plusw1,w,c
 14994  000EB8  2052               	addwfc	btemp,w,c
 14995  000EBA  6E52               	movwf	btemp,c
 14996  000EBC  0EE8               	movlw	-24
 14997  000EBE  C052  FFE3         	movff	btemp,plusw1
 14998                           
 14999                           ;doprnt.c: 1232: val %= dpowers[c];
 15000                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15001  000EC2  0EFF               	movlw	-1
 15002  000EC4  50E3               	movf	plusw1,w,c
 15003  000EC6  0D04               	mullw	4
 15004  000EC8  0E13               	movlw	low _dpowers
 15005  000ECA  24F3               	addwf	prodl,w,c
 15006  000ECC  6EF6               	movwf	tblptrl,c
 15007  000ECE  0E73               	movlw	high _dpowers
 15008  000ED0  20F4               	addwfc	prodh,w,c
 15009  000ED2  6EF7               	movwf	tblptrh,c
 15010  000ED4                     	if	0	;There are less than 3 active tblptr bytes
 15011  000ED4                     	endif
 15012  000ED4  0009               	tblrd		*+
 15013  000ED6  CFF5 FFE6          	movff	tablat,postinc1
 15014  000EDA  0009               	tblrd		*+
 15015  000EDC  CFF5 FFE6          	movff	tablat,postinc1
 15016  000EE0  0009               	tblrd		*+
 15017  000EE2  CFF5 FFE6          	movff	tablat,postinc1
 15018  000EE6  0009               	tblrd		*+
 15019  000EE8  CFF5 FFE6          	movff	tablat,postinc1
 15020                           
 15021                           ;stkvar	sprintf@val @ sp[(-26)+0]
 15022  000EEC  0EE6               	movlw	-26
 15023  000EEE  CFE3 FFE6          	movff	plusw1,postinc1
 15024  000EF2  CFE3 FFE6          	movff	plusw1,postinc1
 15025  000EF6  CFE3 FFE6          	movff	plusw1,postinc1
 15026  000EFA  CFE3 FFE6          	movff	plusw1,postinc1
 15027  000EFE  EC4E  F01E         	call	___llmod	;wreg free
 15028  000F02                     L26:
 15029                           
 15030                           ;stkvar	sprintf@val @ sp[(-22)+0]
 15031  000F02  0EEA               	movlw	-22
 15032  000F04  C052  FFE3         	movff	btemp,plusw1
 15033  000F08  0EEB               	movlw	-21
 15034  000F0A  C053  FFE3         	movff	btemp+1,plusw1
 15035  000F0E  0EEC               	movlw	-20
 15036  000F10  C054  FFE3         	movff	btemp+2,plusw1
 15037  000F14  0EED               	movlw	-19
 15038  000F16  C055  FFE3         	movff	btemp+3,plusw1
 15039                           
 15040                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15041  000F1A  0EFF               	movlw	-1
 15042  000F1C  CFE3 F052          	movff	plusw1,btemp
 15043  000F20  0EFF               	movlw	-1
 15044  000F22  2652               	addwf	btemp,f,c
 15045  000F24  0EFF               	movlw	-1
 15046  000F26  C052  FFE3         	movff	btemp,plusw1
 15047  000F2A  0EFF               	movlw	-1
 15048  000F2C  28E3               	incf	plusw1,w,c
 15049  000F2E  B4D8               	btfsc	status,2,c
 15050  000F30  D022               	goto	l2922
 15051  000F32  D763               	goto	l2904
 15052  000F34                     l2916:
 15053                           
 15054                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 15055                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15056  000F34  0EE7               	movlw	-25
 15057  000F36  CFE3 FFD9          	movff	plusw1,fsr2l
 15058  000F3A  0EE8               	movlw	-24
 15059  000F3C  CFE3 FFDA          	movff	plusw1,fsr2h
 15060  000F40  0E30               	movlw	48
 15061  000F42  6EDF               	movwf	indf2,c
 15062                           
 15063                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15064  000F44  0EE7               	movlw	-25
 15065  000F46  50E3               	movf	plusw1,w,c
 15066  000F48  0F01               	addlw	1
 15067  000F4A  6E52               	movwf	btemp,c
 15068  000F4C  0EE7               	movlw	-25
 15069  000F4E  C052  FFE3         	movff	btemp,plusw1
 15070  000F52  6A52               	clrf	btemp,c
 15071  000F54  0EE8               	movlw	-24
 15072  000F56  50E3               	movf	plusw1,w,c
 15073  000F58  2052               	addwfc	btemp,w,c
 15074  000F5A  6E52               	movwf	btemp,c
 15075  000F5C  0EE8               	movlw	-24
 15076  000F5E  C052  FFE3         	movff	btemp,plusw1
 15077                           
 15078                           ;doprnt.c: 1237: prec--;
 15079                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15080  000F62  50E1               	movf	fsr1l,w,c
 15081  000F64  0FF5               	addlw	-11
 15082  000F66  6ED9               	movwf	fsr2l,c
 15083  000F68  50E2               	movf	fsr1h,w,c
 15084  000F6A  6EDA               	movwf	fsr2h,c
 15085  000F6C  0EFF               	movlw	255
 15086  000F6E  22DA               	addwfc	fsr2h,f,c
 15087  000F70  06DE               	decf	postinc2,f,c
 15088  000F72  0E00               	movlw	0
 15089  000F74  5ADD               	subwfb	postdec2,f,c
 15090  000F76                     l2922:
 15091                           
 15092                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15093  000F76  0EF5               	movlw	-11
 15094  000F78  CFE3 F052          	movff	plusw1,btemp
 15095  000F7C  0EF6               	movlw	-10
 15096  000F7E  50E3               	movf	plusw1,w,c
 15097  000F80  1052               	iorwf	btemp,w,c
 15098  000F82  B4D8               	btfsc	status,2,c
 15099  000F84  D1EF               	goto	l3002
 15100  000F86  D7D6               	goto	l2916
 15101  000F88                     l2924:
 15102                           
 15103                           ;doprnt.c: 1246: }
 15104                           ;doprnt.c: 1253: {
 15105                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 15106                           ;stkvar	sprintf@ap @ sp[(-22)+19]
 15107  000F88  0EFD               	movlw	-3
 15108  000F8A  CFE3 F052          	movff	plusw1,btemp
 15109  000F8E  0E02               	movlw	2
 15110  000F90  5E52               	subwf	btemp,f,c
 15111  000F92  0EFD               	movlw	-3
 15112  000F94  C052  FFE3         	movff	btemp,plusw1
 15113  000F98  0EFE               	movlw	-2
 15114  000F9A  CFE3 F052          	movff	plusw1,btemp
 15115  000F9E  0E00               	movlw	0
 15116  000FA0  5A52               	subwfb	btemp,f,c
 15117  000FA2  0EFE               	movlw	-2
 15118  000FA4  C052  FFE3         	movff	btemp,plusw1
 15119  000FA8  0EFD               	movlw	-3
 15120  000FAA  CFE3 FFD9          	movff	plusw1,fsr2l
 15121  000FAE  0EFE               	movlw	-2
 15122  000FB0  CFE3 FFDA          	movff	plusw1,fsr2h
 15123  000FB4  CFDE F053          	movff	postinc2,btemp+1
 15124  000FB8  CFDD F054          	movff	postdec2,btemp+2
 15125                           
 15126                           ;stkvar	sprintf@val @ sp[(-22)+0]
 15127  000FBC  0EEA               	movlw	-22
 15128  000FBE  C053  FFE3         	movff	btemp+1,plusw1
 15129  000FC2  0EEB               	movlw	-21
 15130  000FC4  C054  FFE3         	movff	btemp+2,plusw1
 15131  000FC8  6A52               	clrf	btemp,c
 15132  000FCA  BEE3               	btfsc	plusw1,7,c
 15133  000FCC  6852               	setf	btemp,c
 15134  000FCE  0EEC               	movlw	-20
 15135  000FD0  C052  FFE3         	movff	btemp,plusw1
 15136  000FD4  0EED               	movlw	-19
 15137  000FD6  C052  FFE3         	movff	btemp,plusw1
 15138                           
 15139                           ;doprnt.c: 1261: if((long)val < 0) {
 15140                           ;stkvar	sprintf@val @ sp[(-22)+0]
 15141  000FDA  0EED               	movlw	-19
 15142  000FDC  AEE3               	btfss	plusw1,7,c
 15143  000FDE  D018               	goto	l2932
 15144                           
 15145                           ;doprnt.c: 1262: flag |= 0x03;
 15146                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 15147  000FE0  0EFB               	movlw	-5
 15148  000FE2  50E3               	movf	plusw1,w,c
 15149  000FE4  0903               	iorlw	3
 15150  000FE6  6E52               	movwf	btemp,c
 15151  000FE8  0EFB               	movlw	-5
 15152  000FEA  C052  FFE3         	movff	btemp,plusw1
 15153                           
 15154                           ;doprnt.c: 1263: val = -val;
 15155                           ;stkvar	sprintf@val @ sp[(-22)+0]
 15156                           ;stkvar	sprintf@val @ sp[(-22)+0]
 15157  000FEE  0EEA               	movlw	-22
 15158  000FF0  6CE3               	negf	plusw1,c
 15159  000FF2  0EEB               	movlw	-21
 15160  000FF4  1EE3               	comf	plusw1,f,c
 15161  000FF6  0EEC               	movlw	-20
 15162  000FF8  1EE3               	comf	plusw1,f,c
 15163  000FFA  0EED               	movlw	-19
 15164  000FFC  1EE3               	comf	plusw1,f,c
 15165  000FFE  E308               	bnc	u2450
 15166  001000  0EEB               	movlw	-21
 15167  001002  2AE3               	incf	plusw1,f,c
 15168  001004  E305               	bnc	u2450
 15169  001006  0EEC               	movlw	-20
 15170  001008  2AE3               	incf	plusw1,f,c
 15171  00100A  E302               	bnc	u2450
 15172  00100C  0EED               	movlw	-19
 15173  00100E  2AE3               	incf	plusw1,f,c
 15174  001010                     u2450:
 15175  001010                     l2932:
 15176                           
 15177                           ;doprnt.c: 1264: }
 15178                           ;doprnt.c: 1266: }
 15179                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 15180                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15181  001010  0EF5               	movlw	-11
 15182  001012  CFE3 F052          	movff	plusw1,btemp
 15183  001016  0EF6               	movlw	-10
 15184  001018  50E3               	movf	plusw1,w,c
 15185  00101A  1052               	iorwf	btemp,w,c
 15186  00101C  A4D8               	btfss	status,2,c
 15187  00101E  D01C               	goto	l2938
 15188                           
 15189                           ;stkvar	sprintf@val @ sp[(-22)+0]
 15190  001020  0EEA               	movlw	-22
 15191  001022  50E3               	movf	plusw1,w,c
 15192  001024  E119               	bnz	l2938
 15193  001026  0EEB               	movlw	-21
 15194  001028  50E3               	movf	plusw1,w,c
 15195  00102A  E116               	bnz	l2938
 15196  00102C  0EEC               	movlw	-20
 15197  00102E  50E3               	movf	plusw1,w,c
 15198  001030  E113               	bnz	l2938
 15199  001032  0EED               	movlw	-19
 15200  001034  50E3               	movf	plusw1,w,c
 15201  001036  A4D8               	btfss	status,2,c
 15202  001038  D00F               	goto	l2938
 15203                           
 15204                           ;doprnt.c: 1291: prec++;
 15205                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15206  00103A  0EF5               	movlw	-11
 15207  00103C  50E3               	movf	plusw1,w,c
 15208  00103E  0F01               	addlw	1
 15209  001040  6E52               	movwf	btemp,c
 15210  001042  0EF5               	movlw	-11
 15211  001044  C052  FFE3         	movff	btemp,plusw1
 15212  001048  6A52               	clrf	btemp,c
 15213  00104A  0EF6               	movlw	-10
 15214  00104C  50E3               	movf	plusw1,w,c
 15215  00104E  2052               	addwfc	btemp,w,c
 15216  001050  6E52               	movwf	btemp,c
 15217  001052  0EF6               	movlw	-10
 15218  001054  C052  FFE3         	movff	btemp,plusw1
 15219  001058                     l2938:
 15220                           
 15221                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15222                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15223  001058  0EFF               	movlw	-1
 15224  00105A  6AE3               	clrf	plusw1,c
 15225  00105C  2AE3               	incf	plusw1,f,c
 15226  00105E                     l2944:
 15227                           
 15228                           ;doprnt.c: 1306: if(val < dpowers[c])
 15229                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15230  00105E  0EFF               	movlw	-1
 15231  001060  50E3               	movf	plusw1,w,c
 15232  001062  0D04               	mullw	4
 15233  001064  0E13               	movlw	low _dpowers
 15234  001066  24F3               	addwf	prodl,w,c
 15235  001068  6EF6               	movwf	tblptrl,c
 15236  00106A  0E73               	movlw	high _dpowers
 15237  00106C  20F4               	addwfc	prodh,w,c
 15238  00106E  6EF7               	movwf	tblptrh,c
 15239  001070                     	if	0	;There are less than 3 active tblptr bytes
 15240  001070                     	endif
 15241                           
 15242                           ;stkvar	sprintf@val @ sp[(-22)+0]
 15243  001070  0EEA               	movlw	-22
 15244  001072  CFE3 F052          	movff	plusw1,btemp
 15245  001076  0009               	tblrd		*+
 15246  001078  50F5               	movf	tablat,w,c
 15247  00107A  5C52               	subwf	btemp,w,c
 15248  00107C  0EEB               	movlw	-21
 15249  00107E  CFE3 F052          	movff	plusw1,btemp
 15250  001082  0009               	tblrd		*+
 15251  001084  50F5               	movf	tablat,w,c
 15252  001086  5852               	subwfb	btemp,w,c
 15253  001088  0EEC               	movlw	-20
 15254  00108A  CFE3 F052          	movff	plusw1,btemp
 15255  00108E  0009               	tblrd		*+
 15256  001090  50F5               	movf	tablat,w,c
 15257  001092  5852               	subwfb	btemp,w,c
 15258  001094  0EED               	movlw	-19
 15259  001096  CFE3 F052          	movff	plusw1,btemp
 15260  00109A  0009               	tblrd		*+
 15261  00109C  50F5               	movf	tablat,w,c
 15262  00109E  5852               	subwfb	btemp,w,c
 15263  0010A0  A0D8               	btfss	status,0,c
 15264  0010A2  D009               	goto	l2952
 15265                           
 15266                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15267  0010A4  0EFF               	movlw	-1
 15268  0010A6  2AE3               	incf	plusw1,f,c
 15269                           
 15270                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15271  0010A8  0EFF               	movlw	-1
 15272  0010AA  CFE3 F052          	movff	plusw1,btemp
 15273  0010AE  0E0A               	movlw	10
 15274  0010B0  1852               	xorwf	btemp,w,c
 15275  0010B2  A4D8               	btfss	status,2,c
 15276  0010B4  D7D4               	goto	l2944
 15277  0010B6                     l2952:
 15278                           
 15279                           ;doprnt.c: 1339: if(c < prec)
 15280                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15281  0010B6  0EF5               	movlw	-11
 15282  0010B8  CFE3 F053          	movff	plusw1,btemp+1
 15283  0010BC  0EF6               	movlw	-10
 15284  0010BE  CFE3 F054          	movff	plusw1,btemp+2
 15285                           
 15286                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15287  0010C2  0EFF               	movlw	-1
 15288  0010C4  CFE3 F05D          	movff	plusw1,btemp+11
 15289  0010C8  0E80               	movlw	128
 15290  0010CA  BE5D               	btfsc	btemp+11,7,c
 15291  0010CC  0E7F               	movlw	127
 15292  0010CE  6E52               	movwf	btemp,c
 15293  0010D0  5053               	movf	btemp+1,w,c
 15294  0010D2  5C5D               	subwf	btemp+11,w,c
 15295  0010D4  5054               	movf	btemp+2,w,c
 15296  0010D6  0A80               	xorlw	128
 15297  0010D8  5852               	subwfb	btemp,w,c
 15298  0010DA  B0D8               	btfsc	status,0,c
 15299  0010DC  D007               	goto	l2956
 15300                           
 15301                           ;doprnt.c: 1340: c = prec;
 15302                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15303                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15304  0010DE  0EF5               	movlw	-11
 15305  0010E0  CFE3 F052          	movff	plusw1,btemp
 15306  0010E4  0EFF               	movlw	-1
 15307  0010E6  C052  FFE3         	movff	btemp,plusw1
 15308  0010EA  D020               	goto	l2960
 15309  0010EC                     l2956:
 15310                           
 15311                           ;doprnt.c: 1341: else if(prec < c)
 15312                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15313  0010EC  0EFF               	movlw	-1
 15314  0010EE  CFE3 F05D          	movff	plusw1,btemp+11
 15315                           
 15316                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15317  0010F2  0EF5               	movlw	-11
 15318  0010F4  CFE3 F053          	movff	plusw1,btemp+1
 15319  0010F8  0EF6               	movlw	-10
 15320  0010FA  CFE3 F054          	movff	plusw1,btemp+2
 15321  0010FE  5054               	movf	btemp+2,w,c
 15322  001100  0A80               	xorlw	128
 15323  001102  6E52               	movwf	btemp,c
 15324  001104  505D               	movf	btemp+11,w,c
 15325  001106  5C53               	subwf	btemp+1,w,c
 15326  001108  0E80               	movlw	128
 15327  00110A  BE5D               	btfsc	btemp+11,7,c
 15328  00110C  0E7F               	movlw	127
 15329  00110E  5852               	subwfb	btemp,w,c
 15330  001110  B0D8               	btfsc	status,0,c
 15331  001112  D00C               	goto	l2960
 15332                           
 15333                           ;doprnt.c: 1342: prec = c;
 15334                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15335  001114  0EFF               	movlw	-1
 15336  001116  50E3               	movf	plusw1,w,c
 15337  001118  6E53               	movwf	btemp+1,c
 15338  00111A  6A54               	clrf	btemp+2,c
 15339  00111C  BE53               	btfsc	btemp+1,7,c
 15340  00111E  0654               	decf	btemp+2,f,c
 15341                           
 15342                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15343  001120  0EF5               	movlw	-11
 15344  001122  C053  FFE3         	movff	btemp+1,plusw1
 15345  001126  0EF6               	movlw	-10
 15346  001128  C054  FFE3         	movff	btemp+2,plusw1
 15347  00112C                     l2960:
 15348                           
 15349                           ;doprnt.c: 1345: if(width && flag & 0x03)
 15350                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15351  00112C  0EF9               	movlw	-7
 15352  00112E  CFE3 F052          	movff	plusw1,btemp
 15353  001132  0EFA               	movlw	-6
 15354  001134  50E3               	movf	plusw1,w,c
 15355  001136  1052               	iorwf	btemp,w,c
 15356  001138  B4D8               	btfsc	status,2,c
 15357  00113A  D011               	goto	l2966
 15358                           
 15359                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 15360  00113C  0EFB               	movlw	-5
 15361  00113E  CFE3 F05D          	movff	plusw1,btemp+11
 15362  001142  0E03               	movlw	3
 15363  001144  165D               	andwf	btemp+11,f,c
 15364  001146  B4D8               	btfsc	status,2,c
 15365  001148  D00A               	goto	l2966
 15366                           
 15367                           ;doprnt.c: 1346: width--;
 15368                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15369  00114A  50E1               	movf	fsr1l,w,c
 15370  00114C  0FF9               	addlw	-7
 15371  00114E  6ED9               	movwf	fsr2l,c
 15372  001150  50E2               	movf	fsr1h,w,c
 15373  001152  6EDA               	movwf	fsr2h,c
 15374  001154  0EFF               	movlw	255
 15375  001156  22DA               	addwfc	fsr2h,f,c
 15376  001158  06DE               	decf	postinc2,f,c
 15377  00115A  0E00               	movlw	0
 15378  00115C  5ADD               	subwfb	postdec2,f,c
 15379  00115E                     l2966:
 15380                           
 15381                           ;doprnt.c: 1348: if(flag & 0x4000) {
 15382                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 15383  00115E  0EFC               	movlw	-4
 15384  001160  ACE3               	btfss	plusw1,6,c
 15385  001162  D02A               	goto	l2974
 15386                           
 15387                           ;doprnt.c: 1349: if(width > prec)
 15388                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15389                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15390  001164  50E1               	movf	fsr1l,w,c
 15391  001166  0FF5               	addlw	-11
 15392  001168  6ED9               	movwf	fsr2l,c
 15393  00116A  50E2               	movf	fsr1h,w,c
 15394  00116C  6EDA               	movwf	fsr2h,c
 15395  00116E  0EFF               	movlw	255
 15396  001170  22DA               	addwfc	fsr2h,f,c
 15397  001172  0EF9               	movlw	-7
 15398  001174  50E3               	movf	plusw1,w,c
 15399  001176  5CDE               	subwf	postinc2,w,c
 15400  001178  50DE               	movf	postinc2,w,c
 15401  00117A  0A80               	xorlw	128
 15402  00117C  6E52               	movwf	btemp,c
 15403  00117E  0EFA               	movlw	-6
 15404  001180  50E3               	movf	plusw1,w,c
 15405  001182  0A80               	xorlw	128
 15406  001184  5852               	subwfb	btemp,w,c
 15407  001186  B0D8               	btfsc	status,0,c
 15408  001188  D013               	goto	l2972
 15409                           
 15410                           ;doprnt.c: 1350: width -= prec;
 15411                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15412                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15413  00118A  0EF9               	movlw	-7
 15414  00118C  50E3               	movf	plusw1,w,c
 15415  00118E  6E52               	movwf	btemp,c
 15416  001190  0EF5               	movlw	-11
 15417  001192  50E3               	movf	plusw1,w,c
 15418  001194  5E52               	subwf	btemp,f,c
 15419  001196  0EF9               	movlw	-7
 15420  001198  C052  FFE3         	movff	btemp,plusw1
 15421  00119C  0EFA               	movlw	-6
 15422  00119E  50E3               	movf	plusw1,w,c
 15423  0011A0  6E52               	movwf	btemp,c
 15424  0011A2  0EF6               	movlw	-10
 15425  0011A4  50E3               	movf	plusw1,w,c
 15426  0011A6  5A52               	subwfb	btemp,f,c
 15427  0011A8  0EFA               	movlw	-6
 15428  0011AA  C052  FFE3         	movff	btemp,plusw1
 15429  0011AE  D004               	goto	l2974
 15430  0011B0                     l2972:
 15431                           
 15432                           ;doprnt.c: 1351: else
 15433                           ;doprnt.c: 1352: width = 0;
 15434                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15435  0011B0  0EF9               	movlw	-7
 15436  0011B2  6AE3               	clrf	plusw1,c
 15437  0011B4  0EFA               	movlw	-6
 15438  0011B6  6AE3               	clrf	plusw1,c
 15439  0011B8                     l2974:
 15440                           
 15441                           ;doprnt.c: 1353: }
 15442                           ;doprnt.c: 1381: if(width > c)
 15443                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15444  0011B8  0EF9               	movlw	-7
 15445  0011BA  CFE3 F053          	movff	plusw1,btemp+1
 15446  0011BE  0EFA               	movlw	-6
 15447  0011C0  CFE3 F054          	movff	plusw1,btemp+2
 15448                           
 15449                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15450  0011C4  0EFF               	movlw	-1
 15451  0011C6  CFE3 F05D          	movff	plusw1,btemp+11
 15452  0011CA  0E80               	movlw	128
 15453  0011CC  BE5D               	btfsc	btemp+11,7,c
 15454  0011CE  0E7F               	movlw	127
 15455  0011D0  6E52               	movwf	btemp,c
 15456  0011D2  5053               	movf	btemp+1,w,c
 15457  0011D4  5C5D               	subwf	btemp+11,w,c
 15458  0011D6  5054               	movf	btemp+2,w,c
 15459  0011D8  0A80               	xorlw	128
 15460  0011DA  5852               	subwfb	btemp,w,c
 15461  0011DC  B0D8               	btfsc	status,0,c
 15462  0011DE  D017               	goto	l2978
 15463                           
 15464                           ;doprnt.c: 1382: width -= c;
 15465                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15466  0011E0  0EFF               	movlw	-1
 15467  0011E2  50E3               	movf	plusw1,w,c
 15468  0011E4  6E53               	movwf	btemp+1,c
 15469  0011E6  6A54               	clrf	btemp+2,c
 15470  0011E8  BE53               	btfsc	btemp+1,7,c
 15471  0011EA  0654               	decf	btemp+2,f,c
 15472                           
 15473                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15474  0011EC  0EF9               	movlw	-7
 15475  0011EE  CFE3 F052          	movff	plusw1,btemp
 15476  0011F2  5053               	movf	btemp+1,w,c
 15477  0011F4  5E52               	subwf	btemp,f,c
 15478  0011F6  0EF9               	movlw	-7
 15479  0011F8  C052  FFE3         	movff	btemp,plusw1
 15480  0011FC  0EFA               	movlw	-6
 15481  0011FE  CFE3 F052          	movff	plusw1,btemp
 15482  001202  5054               	movf	btemp+2,w,c
 15483  001204  5A52               	subwfb	btemp,f,c
 15484  001206  0EFA               	movlw	-6
 15485  001208  C052  FFE3         	movff	btemp,plusw1
 15486  00120C  D004               	goto	l2980
 15487  00120E                     l2978:
 15488                           
 15489                           ;doprnt.c: 1383: else
 15490                           ;doprnt.c: 1384: width = 0;
 15491                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15492  00120E  0EF9               	movlw	-7
 15493  001210  6AE3               	clrf	plusw1,c
 15494  001212  0EFA               	movlw	-6
 15495  001214  6AE3               	clrf	plusw1,c
 15496  001216                     l2980:
 15497                           
 15498                           ;doprnt.c: 1422: {
 15499                           ;doprnt.c: 1424: if(width
 15500                           ;doprnt.c: 1428: )
 15501                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15502  001216  0EF9               	movlw	-7
 15503  001218  CFE3 F052          	movff	plusw1,btemp
 15504  00121C  0EFA               	movlw	-6
 15505  00121E  50E3               	movf	plusw1,w,c
 15506  001220  1052               	iorwf	btemp,w,c
 15507  001222  B4D8               	btfsc	status,2,c
 15508  001224  D025               	goto	l2988
 15509  001226                     l2982:
 15510                           
 15511                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 15512                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15513  001226  0EE7               	movlw	-25
 15514  001228  CFE3 FFD9          	movff	plusw1,fsr2l
 15515  00122C  0EE8               	movlw	-24
 15516  00122E  CFE3 FFDA          	movff	plusw1,fsr2h
 15517  001232  0E20               	movlw	32
 15518  001234  6EDF               	movwf	indf2,c
 15519                           
 15520                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15521  001236  0EE7               	movlw	-25
 15522  001238  50E3               	movf	plusw1,w,c
 15523  00123A  0F01               	addlw	1
 15524  00123C  6E52               	movwf	btemp,c
 15525  00123E  0EE7               	movlw	-25
 15526  001240  C052  FFE3         	movff	btemp,plusw1
 15527  001244  6A52               	clrf	btemp,c
 15528  001246  0EE8               	movlw	-24
 15529  001248  50E3               	movf	plusw1,w,c
 15530  00124A  2052               	addwfc	btemp,w,c
 15531  00124C  6E52               	movwf	btemp,c
 15532  00124E  0EE8               	movlw	-24
 15533  001250  C052  FFE3         	movff	btemp,plusw1
 15534                           
 15535                           ;doprnt.c: 1431: while(--width);
 15536                           ;stkvar	sprintf@width @ sp[(-22)+15]
 15537  001254  50E1               	movf	fsr1l,w,c
 15538  001256  0FF9               	addlw	-7
 15539  001258  6ED9               	movwf	fsr2l,c
 15540  00125A  50E2               	movf	fsr1h,w,c
 15541  00125C  6EDA               	movwf	fsr2h,c
 15542  00125E  0EFF               	movlw	255
 15543  001260  22DA               	addwfc	fsr2h,f,c
 15544  001262  06DE               	decf	postinc2,f,c
 15545  001264  0E00               	movlw	0
 15546  001266  5ADD               	subwfb	postdec2,f,c
 15547  001268  50DE               	movf	postinc2,w,c
 15548  00126A  10DE               	iorwf	postinc2,w,c
 15549  00126C  A4D8               	btfss	status,2,c
 15550  00126E  D7DB               	goto	l2982
 15551  001270                     l2988:
 15552                           
 15553                           ;doprnt.c: 1438: if(flag & 0x03)
 15554                           ;stkvar	sprintf@flag @ sp[(-22)+17]
 15555  001270  0EFB               	movlw	-5
 15556  001272  CFE3 F05D          	movff	plusw1,btemp+11
 15557  001276  0E03               	movlw	3
 15558  001278  165D               	andwf	btemp+11,f,c
 15559  00127A  B4D8               	btfsc	status,2,c
 15560  00127C  D064               	goto	l3000
 15561                           
 15562                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 15563                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15564  00127E  0EE7               	movlw	-25
 15565  001280  CFE3 FFD9          	movff	plusw1,fsr2l
 15566  001284  0EE8               	movlw	-24
 15567  001286  CFE3 FFDA          	movff	plusw1,fsr2h
 15568  00128A  0E2D               	movlw	45
 15569  00128C  6EDF               	movwf	indf2,c
 15570  00128E                     l2992:
 15571                           
 15572                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15573  00128E  0EE7               	movlw	-25
 15574  001290  50E3               	movf	plusw1,w,c
 15575  001292  0F01               	addlw	1
 15576  001294  6E52               	movwf	btemp,c
 15577  001296  0EE7               	movlw	-25
 15578  001298  C052  FFE3         	movff	btemp,plusw1
 15579  00129C  6A52               	clrf	btemp,c
 15580  00129E  0EE8               	movlw	-24
 15581  0012A0  50E3               	movf	plusw1,w,c
 15582  0012A2  2052               	addwfc	btemp,w,c
 15583  0012A4  6E52               	movwf	btemp,c
 15584  0012A6  0EE8               	movlw	-24
 15585  0012A8  C052  FFE3         	movff	btemp,plusw1
 15586  0012AC  D04C               	goto	l3000
 15587  0012AE                     l2994:
 15588                           
 15589                           ;doprnt.c: 1478: {
 15590                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15591  0012AE  0E0A               	movlw	10
 15592  0012B0  6EE6               	movwf	postinc1,c
 15593  0012B2  0E00               	movlw	0
 15594  0012B4  6EE6               	movwf	postinc1,c
 15595  0012B6  0E00               	movlw	0
 15596  0012B8  6EE6               	movwf	postinc1,c
 15597  0012BA  0E00               	movlw	0
 15598  0012BC  6EE6               	movwf	postinc1,c
 15599                           
 15600                           ;stkvar	sprintf@prec @ sp[(-26)+11]
 15601  0012BE  0EF1               	movlw	-15
 15602  0012C0  CFE3 F053          	movff	plusw1,btemp+1
 15603  0012C4  0EF2               	movlw	-14
 15604  0012C6  CFE3 F054          	movff	plusw1,btemp+2
 15605  0012CA  90D8               	bcf	status,0,c
 15606  0012CC  3653               	rlcf	btemp+1,f,c
 15607  0012CE  3654               	rlcf	btemp+2,f,c
 15608  0012D0  90D8               	bcf	status,0,c
 15609  0012D2  3653               	rlcf	btemp+1,f,c
 15610  0012D4  3654               	rlcf	btemp+2,f,c
 15611  0012D6  0E13               	movlw	low _dpowers
 15612  0012D8  2453               	addwf	btemp+1,w,c
 15613  0012DA  6EF6               	movwf	tblptrl,c
 15614  0012DC  0E73               	movlw	high _dpowers
 15615  0012DE  2054               	addwfc	btemp+2,w,c
 15616  0012E0  6EF7               	movwf	tblptrh,c
 15617  0012E2                     	if	0	;There are less than 3 active tblptr bytes
 15618  0012E2                     	endif
 15619  0012E2  0009               	tblrd		*+
 15620  0012E4  CFF5 FFE6          	movff	tablat,postinc1
 15621  0012E8  0009               	tblrd		*+
 15622  0012EA  CFF5 FFE6          	movff	tablat,postinc1
 15623  0012EE  0009               	tblrd		*+
 15624  0012F0  CFF5 FFE6          	movff	tablat,postinc1
 15625  0012F4  0009               	tblrd		*+
 15626  0012F6  CFF5 FFE6          	movff	tablat,postinc1
 15627                           
 15628                           ;stkvar	sprintf@val @ sp[(-30)+0]
 15629  0012FA  0EE2               	movlw	-30
 15630  0012FC  CFE3 FFE6          	movff	plusw1,postinc1
 15631  001300  CFE3 FFE6          	movff	plusw1,postinc1
 15632  001304  CFE3 FFE6          	movff	plusw1,postinc1
 15633  001308  CFE3 FFE6          	movff	plusw1,postinc1
 15634  00130C  EC4D  F01D         	call	___lldiv	;wreg free
 15635  001310  C052  FFE6         	movff	btemp,postinc1
 15636  001314  C053  FFE6         	movff	btemp+1,postinc1
 15637  001318  C054  FFE6         	movff	btemp+2,postinc1
 15638  00131C  C055  FFE6         	movff	btemp+3,postinc1
 15639  001320  EC4E  F01E         	call	___llmod	;wreg free
 15640  001324  C052  F05D         	movff	btemp,btemp+11
 15641  001328  0E30               	movlw	48
 15642  00132A  265D               	addwf	btemp+11,f,c
 15643                           
 15644                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15645  00132C  0EFF               	movlw	-1
 15646  00132E  C05D  FFE3         	movff	btemp+11,plusw1
 15647                           
 15648                           ;doprnt.c: 1523: }
 15649                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15650                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15651                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15652  001332  0EE7               	movlw	-25
 15653  001334  CFE3 FFD9          	movff	plusw1,fsr2l
 15654  001338  0EE8               	movlw	-24
 15655  00133A  CFE3 FFDA          	movff	plusw1,fsr2h
 15656  00133E  0EFF               	movlw	-1
 15657  001340  CFE3 FFDF          	movff	plusw1,indf2
 15658  001344  D7A4               	goto	l2992
 15659  001346                     l3000:
 15660                           
 15661                           ;stkvar	sprintf@prec @ sp[(-22)+11]
 15662  001346  50E1               	movf	fsr1l,w,c
 15663  001348  0FF5               	addlw	-11
 15664  00134A  6ED9               	movwf	fsr2l,c
 15665  00134C  50E2               	movf	fsr1h,w,c
 15666  00134E  6EDA               	movwf	fsr2h,c
 15667  001350  0EFF               	movlw	255
 15668  001352  22DA               	addwfc	fsr2h,f,c
 15669  001354  06DE               	decf	postinc2,f,c
 15670  001356  0E00               	movlw	0
 15671  001358  5ADD               	subwfb	postdec2,f,c
 15672  00135A  28DE               	incf	postinc2,w,c
 15673  00135C  E1A8               	bnz	l2994
 15674  00135E  28DE               	incf	postinc2,w,c
 15675  001360  A4D8               	btfss	status,2,c
 15676  001362  D7A5               	goto	l2994
 15677  001364                     l3002:
 15678                           
 15679                           ;stkvar	sprintf@f @ sp[(-22)+-5]
 15680  001364  50E1               	movf	fsr1l,w,c
 15681  001366  0FE5               	addlw	-27
 15682  001368  6ED9               	movwf	fsr2l,c
 15683  00136A  50E2               	movf	fsr1h,w,c
 15684  00136C  6EDA               	movwf	fsr2h,c
 15685  00136E  0EFF               	movlw	255
 15686  001370  22DA               	addwfc	fsr2h,f,c
 15687  001372  CFDF F053          	movff	indf2,btemp+1
 15688  001376  0E01               	movlw	1
 15689  001378  26DE               	addwf	postinc2,f,c
 15690  00137A  CFDF F054          	movff	indf2,btemp+2
 15691  00137E  0E00               	movlw	0
 15692  001380  22DD               	addwfc	postdec2,f,c
 15693  001382  C053  FFF6         	movff	btemp+1,tblptrl
 15694  001386  C054  FFF7         	movff	btemp+2,tblptrh
 15695  00138A                     	if	0	;tblptru may be non-zero
 15696  00138A                     	endif
 15697  00138A                     	if	0	;tblptru may be non-zero
 15698  00138A                     	endif
 15699                           
 15700                           ;stkvar	sprintf@c @ sp[(-22)+21]
 15701  00138A  0008               	tblrd		*
 15702  00138C  0EFF               	movlw	-1
 15703  00138E  CFF5 FFE3          	movff	tablat,plusw1
 15704  001392  0EFF               	movlw	-1
 15705  001394  50E3               	movf	plusw1,w,c
 15706  001396  A4D8               	btfss	status,2,c
 15707  001398  EFE1  F001         	goto	l2718
 15708  00139C                     l3004:
 15709                           
 15710                           ;doprnt.c: 1538: *sp = 0;
 15711                           ;stkvar	sprintf@sp @ sp[(-22)+-3]
 15712  00139C  0EE7               	movlw	-25
 15713  00139E  CFE3 FFD9          	movff	plusw1,fsr2l
 15714  0013A2  0EE8               	movlw	-24
 15715  0013A4  CFE3 FFDA          	movff	plusw1,fsr2h
 15716  0013A8  0E00               	movlw	0
 15717  0013AA  6EDF               	movwf	indf2,c
 15718                           
 15719                           ; _sprintf: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, args
      +                          ize = 4, vargsize = 0
 15720  0013AC  0EEA               	movlw	234
 15721  0013AE  26E1               	addwf	fsr1l,f,c
 15722  0013B0  0EFF               	movlw	255
 15723  0013B2  22E2               	addwfc	fsr1h,f,c
 15724  0013B4  52E5               	movf	postdec1,f,c
 15725  0013B6  50E7               	movf	indf1,w,c
 15726  0013B8  5EE1               	subwf	fsr1l,f,c
 15727  0013BA  0E00               	movlw	0
 15728  0013BC  5AE2               	subwfb	fsr1h,f,c
 15729  0013BE  0012               	return		;funcret
 15730  0013C0                     __end_of_sprintf:
 15731                           	opt stack 0
 15732                           tblptru	equ	0xFF8
 15733                           tblptrh	equ	0xFF7
 15734                           tblptrl	equ	0xFF6
 15735                           tablat	equ	0xFF5
 15736                           prodh	equ	0xFF4
 15737                           prodl	equ	0xFF3
 15738                           intcon	equ	0xFF2
 15739                           intcon2	equ	0xFF1
 15740                           indf0	equ	0xFEF
 15741                           postinc0	equ	0xFEE
 15742                           fsr0h	equ	0xFEA
 15743                           fsr0l	equ	0xFE9
 15744                           wreg	equ	0xFE8
 15745                           indf1	equ	0xFE7
 15746                           postinc1	equ	0xFE6
 15747                           postdec1	equ	0xFE5
 15748                           plusw1	equ	0xFE3
 15749                           fsr1h	equ	0xFE2
 15750                           fsr1l	equ	0xFE1
 15751                           indf2	equ	0xFDF
 15752                           postinc2	equ	0xFDE
 15753                           postdec2	equ	0xFDD
 15754                           fsr2h	equ	0xFDA
 15755                           fsr2l	equ	0xFD9
 15756                           status	equ	0xFD8
 15757                           
 15758 ;; *************** function ___ftmul *****************
 15759 ;; Defined at:
 15760 ;;		line 62 in file "/Applications/microchip/xc8/v1.38/sources/common/ftmul.c"
 15761 ;; Parameters:    Size  Location     Type
 15762 ;;  f1              3  [STACK] float 
 15763 ;;  f2              3  [STACK] float 
 15764 ;; Auto vars:     Size  Location     Type
 15765 ;;  f3_as_produc    3  [STACK] unsigned um
 15766 ;;  sign            1  [STACK] unsigned char 
 15767 ;;  cntr            1  [STACK] unsigned char 
 15768 ;;  exp             1  [STACK] unsigned char 
 15769 ;; Return value:  Size  Location     Type
 15770 ;;                  3  [STACK] float 
 15771 ;; Registers used:
 15772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
 15773 ;; Tracked objects:
 15774 ;;		On entry : 0/0
 15775 ;;		On exit  : 0/0
 15776 ;;		Unchanged: 0/0
 15777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15778 ;;      Params:         0       0       0       0       0       0       0
 15779 ;;      Locals:         0       0       0       0       0       0       0
 15780 ;;      Temps:          0       0       0       0       0       0       0
 15781 ;;      Totals:         0       0       0       0       0       0       0
 15782 ;;Total ram usage:        0 bytes
 15783 ;; Hardware stack levels used:    1
 15784 ;; Hardware stack levels required when called:   11
 15785 ;; This function calls:
 15786 ;;		___ftpack
 15787 ;; This function is called by:
 15788 ;;		_getTemperature
 15789 ;;		_fround
 15790 ;;		_scale
 15791 ;;		_sprintf
 15792 ;; This function uses a reentrant model
 15793 ;;
 15794                           
 15795                           	psect	text46
 15796  001D6C                     __ptext46:
 15797                           	opt stack 0
 15798  001D6C                     ___ftmul:
 15799                           	opt stack 0
 15800                           
 15801                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 15802  001D6C  0E06               	movlw	6
 15803  001D6E  26E1               	addwf	fsr1l,f,c
 15804  001D70  0E00               	movlw	0
 15805  001D72  22E2               	addwfc	fsr1h,f,c
 15806                           
 15807                           ;incstack = 0
 15808  001D74  0E0F               	movlw	15
 15809  001D76  6E5D               	movwf	btemp+11,c
 15810                           
 15811                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
 15812  001D78  0EF7               	movlw	-9
 15813  001D7A  CFE3 F058          	movff	plusw1,btemp+6
 15814  001D7E  0EF8               	movlw	-8
 15815  001D80  CFE3 F059          	movff	plusw1,btemp+7
 15816  001D84  0EF9               	movlw	-7
 15817  001D86  CFE3 F05A          	movff	plusw1,btemp+8
 15818  001D8A  285D               	incf	btemp+11,w,c
 15819  001D8C  6E52               	movwf	btemp,c
 15820  001D8E  D004               	goto	u750
 15821  001D90                     u755:
 15822  001D90  90D8               	bcf	status,0,c
 15823  001D92  325A               	rrcf	btemp+8,f,c
 15824  001D94  3259               	rrcf	btemp+7,f,c
 15825  001D96  3258               	rrcf	btemp+6,f,c
 15826  001D98                     u750:
 15827  001D98  2E52               	decfsz	btemp,f,c
 15828  001D9A  D7FA               	goto	u755
 15829  001D9C  5058               	movf	btemp+6,w,c
 15830  001D9E  6E5D               	movwf	btemp+11,c
 15831                           
 15832                           ;stkvar	___ftmul@exp @ sp[(-6)+5]
 15833  001DA0  0EFF               	movlw	-1
 15834  001DA2  C05D  FFE3         	movff	btemp+11,plusw1
 15835  001DA6  0EFF               	movlw	-1
 15836  001DA8  50E3               	movf	plusw1,w,c
 15837  001DAA  B4D8               	btfsc	status,2,c
 15838  001DAC  D01D               	goto	l1910
 15839  001DAE  0E0F               	movlw	15
 15840  001DB0  6E5D               	movwf	btemp+11,c
 15841                           
 15842                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
 15843  001DB2  0EF4               	movlw	-12
 15844  001DB4  CFE3 F058          	movff	plusw1,btemp+6
 15845  001DB8  0EF5               	movlw	-11
 15846  001DBA  CFE3 F059          	movff	plusw1,btemp+7
 15847  001DBE  0EF6               	movlw	-10
 15848  001DC0  CFE3 F05A          	movff	plusw1,btemp+8
 15849  001DC4  285D               	incf	btemp+11,w,c
 15850  001DC6  6E52               	movwf	btemp,c
 15851  001DC8  D004               	goto	u770
 15852  001DCA                     u775:
 15853  001DCA  90D8               	bcf	status,0,c
 15854  001DCC  325A               	rrcf	btemp+8,f,c
 15855  001DCE  3259               	rrcf	btemp+7,f,c
 15856  001DD0  3258               	rrcf	btemp+6,f,c
 15857  001DD2                     u770:
 15858  001DD2  2E52               	decfsz	btemp,f,c
 15859  001DD4  D7FA               	goto	u775
 15860  001DD6  5058               	movf	btemp+6,w,c
 15861  001DD8  6E5D               	movwf	btemp+11,c
 15862                           
 15863                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
 15864  001DDA  0EFD               	movlw	-3
 15865  001DDC  C05D  FFE3         	movff	btemp+11,plusw1
 15866  001DE0  0EFD               	movlw	-3
 15867  001DE2  50E3               	movf	plusw1,w,c
 15868  001DE4  A4D8               	btfss	status,2,c
 15869  001DE6  D007               	goto	l1914
 15870  001DE8                     l1910:
 15871  001DE8  0E00               	movlw	0
 15872  001DEA  6E52               	movwf	btemp,c
 15873  001DEC  0E00               	movlw	0
 15874  001DEE  6E53               	movwf	btemp+1,c
 15875  001DF0  0E00               	movlw	0
 15876  001DF2  6E54               	movwf	btemp+2,c
 15877  001DF4  D0C3               	goto	l1076
 15878  001DF6                     l1914:
 15879  001DF6  0E7B               	movlw	123
 15880  001DF8  6E5D               	movwf	btemp+11,c
 15881                           
 15882                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
 15883  001DFA  0EFD               	movlw	-3
 15884  001DFC  50E3               	movf	plusw1,w,c
 15885  001DFE  245D               	addwf	btemp+11,w,c
 15886  001E00  6E5C               	movwf	btemp+10,c
 15887                           
 15888                           ;stkvar	___ftmul@exp @ sp[(-6)+5]
 15889  001E02  50E1               	movf	fsr1l,w,c
 15890  001E04  0FFF               	addlw	-1
 15891  001E06  6ED9               	movwf	fsr2l,c
 15892  001E08  50E2               	movf	fsr1h,w,c
 15893  001E0A  6EDA               	movwf	fsr2h,c
 15894  001E0C  0EFF               	movlw	255
 15895  001E0E  22DA               	addwfc	fsr2h,f,c
 15896  001E10  505C               	movf	btemp+10,w,c
 15897  001E12  26DF               	addwf	indf2,f,c
 15898                           
 15899                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
 15900  001E14  0EF9               	movlw	249
 15901  001E16  24E1               	addwf	fsr1l,w,c
 15902  001E18  6ED9               	movwf	fsr2l,c
 15903  001E1A  0EFF               	movlw	255
 15904  001E1C  20E2               	addwfc	fsr1h,w,c
 15905  001E1E  6EDA               	movwf	fsr2h,c
 15906  001E20  50DF               	movf	indf2,w,c
 15907  001E22  6E5D               	movwf	btemp+11,c
 15908                           
 15909                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
 15910  001E24  0EFD               	movlw	-3
 15911  001E26  C05D  FFE3         	movff	btemp+11,plusw1
 15912                           
 15913                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
 15914  001E2A  0EF6               	movlw	246
 15915  001E2C  24E1               	addwf	fsr1l,w,c
 15916  001E2E  6ED9               	movwf	fsr2l,c
 15917  001E30  0EFF               	movlw	255
 15918  001E32  20E2               	addwfc	fsr1h,w,c
 15919  001E34  6EDA               	movwf	fsr2h,c
 15920  001E36  50DF               	movf	indf2,w,c
 15921  001E38  6E5D               	movwf	btemp+11,c
 15922                           
 15923                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
 15924  001E3A  50E1               	movf	fsr1l,w,c
 15925  001E3C  0FFD               	addlw	-3
 15926  001E3E  6ED9               	movwf	fsr2l,c
 15927  001E40  50E2               	movf	fsr1h,w,c
 15928  001E42  6EDA               	movwf	fsr2h,c
 15929  001E44  0EFF               	movlw	255
 15930  001E46  22DA               	addwfc	fsr2h,f,c
 15931  001E48  505D               	movf	btemp+11,w,c
 15932  001E4A  1ADF               	xorwf	indf2,f,c
 15933                           
 15934                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
 15935  001E4C  0EFD               	movlw	-3
 15936  001E4E  CFE3 F052          	movff	plusw1,btemp
 15937  001E52  0E80               	movlw	128
 15938  001E54  1652               	andwf	btemp,f,c
 15939  001E56  0EFD               	movlw	-3
 15940  001E58  C052  FFE3         	movff	btemp,plusw1
 15941                           
 15942                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
 15943  001E5C  0EF8               	movlw	-8
 15944  001E5E  8EE3               	bsf	plusw1,7,c
 15945                           
 15946                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
 15947  001E60  0EF5               	movlw	-11
 15948  001E62  8EE3               	bsf	plusw1,7,c
 15949                           
 15950                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
 15951  001E64  0EF6               	movlw	-10
 15952  001E66  6AE3               	clrf	plusw1,c
 15953                           
 15954                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
 15955  001E68  0EFA               	movlw	-6
 15956  001E6A  6AE3               	clrf	plusw1,c
 15957  001E6C  0EFB               	movlw	-5
 15958  001E6E  6AE3               	clrf	plusw1,c
 15959  001E70  0EFC               	movlw	-4
 15960  001E72  6AE3               	clrf	plusw1,c
 15961  001E74  0E07               	movlw	7
 15962  001E76  6E5D               	movwf	btemp+11,c
 15963                           
 15964                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
 15965  001E78  0EFE               	movlw	-2
 15966  001E7A  C05D  FFE3         	movff	btemp+11,plusw1
 15967  001E7E                     l1932:
 15968                           
 15969                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
 15970  001E7E  0EF7               	movlw	-9
 15971  001E80  A0E3               	btfss	plusw1,0,c
 15972  001E82  D01B               	goto	l1936
 15973                           
 15974                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
 15975                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
 15976  001E84  0EFA               	movlw	-6
 15977  001E86  50E3               	movf	plusw1,w,c
 15978  001E88  6E52               	movwf	btemp,c
 15979  001E8A  0EF4               	movlw	-12
 15980  001E8C  50E3               	movf	plusw1,w,c
 15981  001E8E  2652               	addwf	btemp,f,c
 15982  001E90  0EFA               	movlw	-6
 15983  001E92  C052  FFE3         	movff	btemp,plusw1
 15984  001E96  0EFB               	movlw	-5
 15985  001E98  50E3               	movf	plusw1,w,c
 15986  001E9A  6E52               	movwf	btemp,c
 15987  001E9C  0EF5               	movlw	-11
 15988  001E9E  50E3               	movf	plusw1,w,c
 15989  001EA0  2252               	addwfc	btemp,f,c
 15990  001EA2  0EFB               	movlw	-5
 15991  001EA4  C052  FFE3         	movff	btemp,plusw1
 15992  001EA8  0EFC               	movlw	-4
 15993  001EAA  50E3               	movf	plusw1,w,c
 15994  001EAC  6E52               	movwf	btemp,c
 15995  001EAE  0EF6               	movlw	-10
 15996  001EB0  50E3               	movf	plusw1,w,c
 15997  001EB2  2252               	addwfc	btemp,f,c
 15998  001EB4  0EFC               	movlw	-4
 15999  001EB6  C052  FFE3         	movff	btemp,plusw1
 16000  001EBA                     l1936:
 16001                           
 16002                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
 16003  001EBA  90D8               	bcf	status,0,c
 16004  001EBC  0EF9               	movlw	-7
 16005  001EBE  32E3               	rrcf	plusw1,f,c
 16006  001EC0  0EF8               	movlw	-8
 16007  001EC2  32E3               	rrcf	plusw1,f,c
 16008  001EC4  0EF7               	movlw	-9
 16009  001EC6  32E3               	rrcf	plusw1,f,c
 16010                           
 16011                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
 16012  001EC8  90D8               	bcf	status,0,c
 16013  001ECA  0EF4               	movlw	-12
 16014  001ECC  36E3               	rlcf	plusw1,f,c
 16015  001ECE  0EF5               	movlw	-11
 16016  001ED0  36E3               	rlcf	plusw1,f,c
 16017  001ED2  0EF6               	movlw	-10
 16018  001ED4  36E3               	rlcf	plusw1,f,c
 16019                           
 16020                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
 16021  001ED6  0EFE               	movlw	-2
 16022  001ED8  50E3               	movf	plusw1,w,c
 16023  001EDA  6E52               	movwf	btemp,c
 16024  001EDC  0E01               	movlw	1
 16025  001EDE  5E52               	subwf	btemp,f,c
 16026  001EE0  0EFE               	movlw	-2
 16027  001EE2  C052  FFE3         	movff	btemp,plusw1
 16028  001EE6  A4D8               	btfss	status,2,c
 16029  001EE8  D7CA               	goto	l1932
 16030                           
 16031                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
 16032  001EEA  0EFE               	movlw	-2
 16033  001EEC  6AE3               	clrf	plusw1,c
 16034  001EEE  80E3               	bsf	plusw1,0,c
 16035  001EF0  86E3               	bsf	plusw1,3,c	;indir
 16036  001EF2                     l1081:
 16037                           
 16038                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
 16039  001EF2  0EF7               	movlw	-9
 16040  001EF4  A0E3               	btfss	plusw1,0,c
 16041  001EF6  D01B               	goto	l1944
 16042                           
 16043                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
 16044                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
 16045  001EF8  0EFA               	movlw	-6
 16046  001EFA  50E3               	movf	plusw1,w,c
 16047  001EFC  6E52               	movwf	btemp,c
 16048  001EFE  0EF4               	movlw	-12
 16049  001F00  50E3               	movf	plusw1,w,c
 16050  001F02  2652               	addwf	btemp,f,c
 16051  001F04  0EFA               	movlw	-6
 16052  001F06  C052  FFE3         	movff	btemp,plusw1
 16053  001F0A  0EFB               	movlw	-5
 16054  001F0C  50E3               	movf	plusw1,w,c
 16055  001F0E  6E52               	movwf	btemp,c
 16056  001F10  0EF5               	movlw	-11
 16057  001F12  50E3               	movf	plusw1,w,c
 16058  001F14  2252               	addwfc	btemp,f,c
 16059  001F16  0EFB               	movlw	-5
 16060  001F18  C052  FFE3         	movff	btemp,plusw1
 16061  001F1C  0EFC               	movlw	-4
 16062  001F1E  50E3               	movf	plusw1,w,c
 16063  001F20  6E52               	movwf	btemp,c
 16064  001F22  0EF6               	movlw	-10
 16065  001F24  50E3               	movf	plusw1,w,c
 16066  001F26  2252               	addwfc	btemp,f,c
 16067  001F28  0EFC               	movlw	-4
 16068  001F2A  C052  FFE3         	movff	btemp,plusw1
 16069  001F2E                     l1944:
 16070                           
 16071                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
 16072  001F2E  90D8               	bcf	status,0,c
 16073  001F30  0EF9               	movlw	-7
 16074  001F32  32E3               	rrcf	plusw1,f,c
 16075  001F34  0EF8               	movlw	-8
 16076  001F36  32E3               	rrcf	plusw1,f,c
 16077  001F38  0EF7               	movlw	-9
 16078  001F3A  32E3               	rrcf	plusw1,f,c
 16079                           
 16080                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
 16081  001F3C  90D8               	bcf	status,0,c
 16082  001F3E  0EFC               	movlw	-4
 16083  001F40  32E3               	rrcf	plusw1,f,c
 16084  001F42  0EFB               	movlw	-5
 16085  001F44  32E3               	rrcf	plusw1,f,c
 16086  001F46  0EFA               	movlw	-6
 16087  001F48  32E3               	rrcf	plusw1,f,c
 16088                           
 16089                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
 16090  001F4A  0EFE               	movlw	-2
 16091  001F4C  50E3               	movf	plusw1,w,c
 16092  001F4E  6E52               	movwf	btemp,c
 16093  001F50  0E01               	movlw	1
 16094  001F52  5E52               	subwf	btemp,f,c
 16095  001F54  0EFE               	movlw	-2
 16096  001F56  C052  FFE3         	movff	btemp,plusw1
 16097  001F5A  A4D8               	btfss	status,2,c
 16098  001F5C  D7CA               	goto	l1081
 16099                           
 16100                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
 16101  001F5E  0EFD               	movlw	-3
 16102  001F60  50E3               	movf	plusw1,w,c
 16103  001F62  6EE6               	movwf	postinc1,c
 16104                           
 16105                           ;stkvar	___ftmul@exp @ sp[(-7)+5]
 16106  001F64  0EFE               	movlw	-2
 16107  001F66  50E3               	movf	plusw1,w,c
 16108  001F68  6EE6               	movwf	postinc1,c
 16109                           
 16110                           ;stkvar	___ftmul@f3_as_product @ sp[(-8)+0]
 16111  001F6A  0EF8               	movlw	-8
 16112  001F6C  CFE3 FFE6          	movff	plusw1,postinc1
 16113  001F70  CFE3 FFE6          	movff	plusw1,postinc1
 16114  001F74  CFE3 FFE6          	movff	plusw1,postinc1
 16115  001F78  ECC1  F01C         	call	___ftpack	;wreg free
 16116  001F7C                     l1076:
 16117                           
 16118                           ; ___ftmul: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16119  001F7C  0EF4               	movlw	244
 16120  001F7E  26E1               	addwf	fsr1l,f,c
 16121  001F80  0EFF               	movlw	255
 16122  001F82  22E2               	addwfc	fsr1h,f,c
 16123  001F84  0012               	return		;funcret
 16124  001F86                     __end_of___ftmul:
 16125                           	opt stack 0
 16126                           tblptru	equ	0xFF8
 16127                           tblptrh	equ	0xFF7
 16128                           tblptrl	equ	0xFF6
 16129                           tablat	equ	0xFF5
 16130                           prodh	equ	0xFF4
 16131                           prodl	equ	0xFF3
 16132                           intcon	equ	0xFF2
 16133                           intcon2	equ	0xFF1
 16134                           indf0	equ	0xFEF
 16135                           postinc0	equ	0xFEE
 16136                           fsr0h	equ	0xFEA
 16137                           fsr0l	equ	0xFE9
 16138                           wreg	equ	0xFE8
 16139                           indf1	equ	0xFE7
 16140                           postinc1	equ	0xFE6
 16141                           postdec1	equ	0xFE5
 16142                           plusw1	equ	0xFE3
 16143                           fsr1h	equ	0xFE2
 16144                           fsr1l	equ	0xFE1
 16145                           indf2	equ	0xFDF
 16146                           postinc2	equ	0xFDE
 16147                           postdec2	equ	0xFDD
 16148                           fsr2h	equ	0xFDA
 16149                           fsr2l	equ	0xFD9
 16150                           status	equ	0xFD8
 16151                           
 16152 ;; *************** function ___ftpack *****************
 16153 ;; Defined at:
 16154 ;;		line 62 in file "/Applications/microchip/xc8/v1.38/sources/common/float.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;  arg             3  [STACK] unsigned um
 16157 ;;  exp             1  [STACK] unsigned char 
 16158 ;;  sign            1  [STACK] unsigned char 
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;		None
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  3  [STACK] float 
 16163 ;; Registers used:
 16164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+9, btemp+10, btemp+11
 16165 ;; Tracked objects:
 16166 ;;		On entry : 0/0
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16170 ;;      Params:         0       0       0       0       0       0       0
 16171 ;;      Locals:         0       0       0       0       0       0       0
 16172 ;;      Temps:          0       0       0       0       0       0       0
 16173 ;;      Totals:         0       0       0       0       0       0       0
 16174 ;;Total ram usage:        0 bytes
 16175 ;; Hardware stack levels used:    1
 16176 ;; Hardware stack levels required when called:   10
 16177 ;; This function calls:
 16178 ;;		Nothing
 16179 ;; This function is called by:
 16180 ;;		___awtoft
 16181 ;;		___ftadd
 16182 ;;		___ftdiv
 16183 ;;		___ftmul
 16184 ;;		___lltoft
 16185 ;;		___lwtoft
 16186 ;; This function uses a reentrant model
 16187 ;;
 16188                           
 16189                           	psect	text47
 16190  003982                     __ptext47:
 16191                           	opt stack 0
 16192  003982                     ___ftpack:
 16193                           	opt stack 5
 16194                           
 16195                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16196                           
 16197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0
 16198                           ;incstack = 0
 16199  003982  0EFC               	movlw	-4
 16200  003984  50E3               	movf	plusw1,w,c
 16201  003986  B4D8               	btfsc	status,2,c
 16202  003988  D00A               	goto	l1768
 16203                           
 16204                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16205  00398A  0EFD               	movlw	-3
 16206  00398C  50E3               	movf	plusw1,w,c
 16207  00398E  E117               	bnz	l1774
 16208  003990  0EFE               	movlw	-2
 16209  003992  50E3               	movf	plusw1,w,c
 16210  003994  E114               	bnz	l1774
 16211  003996  0EFF               	movlw	-1
 16212  003998  50E3               	movf	plusw1,w,c
 16213  00399A  A4D8               	btfss	status,2,c
 16214  00399C  D010               	goto	l1774
 16215  00399E                     l1768:
 16216  00399E  0E00               	movlw	0
 16217  0039A0  6E52               	movwf	btemp,c
 16218  0039A2  0E00               	movlw	0
 16219  0039A4  6E53               	movwf	btemp+1,c
 16220  0039A6  0E00               	movlw	0
 16221  0039A8  6E54               	movwf	btemp+2,c
 16222  0039AA  D072               	goto	l978
 16223  0039AC                     l1772:
 16224                           
 16225                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16226  0039AC  0EFC               	movlw	-4
 16227  0039AE  2AE3               	incf	plusw1,f,c
 16228                           
 16229                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16230  0039B0  90D8               	bcf	status,0,c
 16231  0039B2  0EFF               	movlw	-1
 16232  0039B4  32E3               	rrcf	plusw1,f,c
 16233  0039B6  0EFE               	movlw	-2
 16234  0039B8  32E3               	rrcf	plusw1,f,c
 16235  0039BA  0EFD               	movlw	-3
 16236  0039BC  32E3               	rrcf	plusw1,f,c
 16237  0039BE                     l1774:
 16238                           
 16239                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16240  0039BE  6A5B               	clrf	btemp+9,c
 16241  0039C0  6A5C               	clrf	btemp+10,c
 16242  0039C2  0EFF               	movlw	-1
 16243  0039C4  CFE3 F05D          	movff	plusw1,btemp+11
 16244  0039C8  0EFE               	movlw	254
 16245  0039CA  165D               	andwf	btemp+11,f,c
 16246  0039CC  B4D8               	btfsc	status,2,c
 16247  0039CE  D015               	goto	l1782
 16248  0039D0  D7ED               	goto	l1772
 16249  0039D2                     l1776:
 16250                           
 16251                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16252  0039D2  0EFC               	movlw	-4
 16253  0039D4  2AE3               	incf	plusw1,f,c
 16254                           
 16255                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16256  0039D6  50E1               	movf	fsr1l,w,c
 16257  0039D8  0FFD               	addlw	-3
 16258  0039DA  6ED9               	movwf	fsr2l,c
 16259  0039DC  50E2               	movf	fsr1h,w,c
 16260  0039DE  6EDA               	movwf	fsr2h,c
 16261  0039E0  0EFF               	movlw	255
 16262  0039E2  22DA               	addwfc	fsr2h,f,c
 16263  0039E4  2ADE               	incf	postinc2,f,c
 16264  0039E6  0E00               	movlw	0
 16265  0039E8  22DE               	addwfc	postinc2,f,c
 16266  0039EA  22DE               	addwfc	postinc2,f,c
 16267                           
 16268                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16269  0039EC  90D8               	bcf	status,0,c
 16270  0039EE  0EFF               	movlw	-1
 16271  0039F0  32E3               	rrcf	plusw1,f,c
 16272  0039F2  0EFE               	movlw	-2
 16273  0039F4  32E3               	rrcf	plusw1,f,c
 16274  0039F6  0EFD               	movlw	-3
 16275  0039F8  32E3               	rrcf	plusw1,f,c
 16276  0039FA                     l1782:
 16277                           
 16278                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16279  0039FA  6A5B               	clrf	btemp+9,c
 16280  0039FC  6A5C               	clrf	btemp+10,c
 16281  0039FE  0EFF               	movlw	-1
 16282  003A00  CFE3 F05D          	movff	plusw1,btemp+11
 16283  003A04  0EFF               	movlw	255
 16284  003A06  165D               	andwf	btemp+11,f,c
 16285  003A08  B4D8               	btfsc	status,2,c
 16286  003A0A  D00A               	goto	l1786
 16287  003A0C  D7E2               	goto	l1776
 16288  003A0E                     l1784:
 16289                           
 16290                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16291  003A0E  0EFC               	movlw	-4
 16292  003A10  06E3               	decf	plusw1,f,c
 16293                           
 16294                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16295  003A12  90D8               	bcf	status,0,c
 16296  003A14  0EFD               	movlw	-3
 16297  003A16  36E3               	rlcf	plusw1,f,c
 16298  003A18  0EFE               	movlw	-2
 16299  003A1A  36E3               	rlcf	plusw1,f,c
 16300  003A1C  0EFF               	movlw	-1
 16301  003A1E  36E3               	rlcf	plusw1,f,c
 16302  003A20                     l1786:
 16303                           
 16304                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16305  003A20  0EFE               	movlw	-2
 16306  003A22  BEE3               	btfsc	plusw1,7,c
 16307  003A24  D006               	goto	l1790
 16308                           
 16309                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16310  003A26  0EFC               	movlw	-4
 16311  003A28  CFE3 F052          	movff	plusw1,btemp
 16312  003A2C  0E02               	movlw	2
 16313  003A2E  6052               	cpfslt	btemp,c
 16314  003A30  D7EE               	goto	l1784
 16315  003A32                     l1790:
 16316                           
 16317                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16318  003A32  0EFC               	movlw	-4
 16319  003A34  B0E3               	btfsc	plusw1,0,c
 16320  003A36  D002               	goto	l1794
 16321                           
 16322                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16323  003A38  0EFE               	movlw	-2
 16324  003A3A  9EE3               	bcf	plusw1,7,c
 16325  003A3C                     l1794:
 16326                           
 16327                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16328  003A3C  50E1               	movf	fsr1l,w,c
 16329  003A3E  0FFC               	addlw	-4
 16330  003A40  6ED9               	movwf	fsr2l,c
 16331  003A42  50E2               	movf	fsr1h,w,c
 16332  003A44  6EDA               	movwf	fsr2h,c
 16333  003A46  0EFF               	movlw	255
 16334  003A48  22DA               	addwfc	fsr2h,f,c
 16335  003A4A  90D8               	bcf	status,0,c
 16336  003A4C  32DF               	rrcf	indf2,f,c
 16337                           
 16338                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 16339  003A4E  0EFC               	movlw	-4
 16340  003A50  50E3               	movf	plusw1,w,c
 16341  003A52  6E5D               	movwf	btemp+11,c
 16342  003A54  6A5C               	clrf	btemp+10,c
 16343  003A56  6A5B               	clrf	btemp+9,c
 16344                           
 16345                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16346  003A58  50E1               	movf	fsr1l,w,c
 16347  003A5A  0FFD               	addlw	-3
 16348  003A5C  6ED9               	movwf	fsr2l,c
 16349  003A5E  50E2               	movf	fsr1h,w,c
 16350  003A60  6EDA               	movwf	fsr2h,c
 16351  003A62  0EFF               	movlw	255
 16352  003A64  22DA               	addwfc	fsr2h,f,c
 16353  003A66  505B               	movf	btemp+9,w,c
 16354  003A68  12DE               	iorwf	postinc2,f,c
 16355  003A6A  505C               	movf	btemp+10,w,c
 16356  003A6C  12DE               	iorwf	postinc2,f,c
 16357  003A6E  505D               	movf	btemp+11,w,c
 16358  003A70  12DE               	iorwf	postinc2,f,c
 16359                           
 16360                           ;stkvar	___ftpack@sign @ sp[(0)+-5]
 16361  003A72  0EFB               	movlw	-5
 16362  003A74  50E3               	movf	plusw1,w,c
 16363  003A76  B4D8               	btfsc	status,2,c
 16364  003A78  D002               	goto	l1802
 16365                           
 16366                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16367  003A7A  0EFF               	movlw	-1
 16368  003A7C  8EE3               	bsf	plusw1,7,c
 16369  003A7E                     l1802:
 16370                           
 16371                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 16372  003A7E  0EFD               	movlw	-3
 16373  003A80  CFE3 F052          	movff	plusw1,btemp
 16374  003A84  0EFE               	movlw	-2
 16375  003A86  CFE3 F053          	movff	plusw1,btemp+1
 16376  003A8A  0EFF               	movlw	-1
 16377  003A8C  CFE3 F054          	movff	plusw1,btemp+2
 16378  003A90                     l978:
 16379                           
 16380                           ; ___ftpack: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 16381  003A90  0EFB               	movlw	251
 16382  003A92  26E1               	addwf	fsr1l,f,c
 16383  003A94  0EFF               	movlw	255
 16384  003A96  22E2               	addwfc	fsr1h,f,c
 16385  003A98  0012               	return		;funcret
 16386  003A9A                     __end_of___ftpack:
 16387                           	opt stack 0
 16388                           tblptru	equ	0xFF8
 16389                           tblptrh	equ	0xFF7
 16390                           tblptrl	equ	0xFF6
 16391                           tablat	equ	0xFF5
 16392                           prodh	equ	0xFF4
 16393                           prodl	equ	0xFF3
 16394                           intcon	equ	0xFF2
 16395                           intcon2	equ	0xFF1
 16396                           indf0	equ	0xFEF
 16397                           postinc0	equ	0xFEE
 16398                           fsr0h	equ	0xFEA
 16399                           fsr0l	equ	0xFE9
 16400                           wreg	equ	0xFE8
 16401                           indf1	equ	0xFE7
 16402                           postinc1	equ	0xFE6
 16403                           postdec1	equ	0xFE5
 16404                           plusw1	equ	0xFE3
 16405                           fsr1h	equ	0xFE2
 16406                           fsr1l	equ	0xFE1
 16407                           indf2	equ	0xFDF
 16408                           postinc2	equ	0xFDE
 16409                           postdec2	equ	0xFDD
 16410                           fsr2h	equ	0xFDA
 16411                           fsr2l	equ	0xFD9
 16412                           status	equ	0xFD8
 16413                           
 16414 ;; *************** function ___ftadd *****************
 16415 ;; Defined at:
 16416 ;;		line 86 in file "/Applications/microchip/xc8/v1.38/sources/common/ftadd.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;  f1              3  [STACK] float 
 16419 ;;  f2              3  [STACK] float 
 16420 ;; Auto vars:     Size  Location     Type
 16421 ;;  exp1            1  [STACK] unsigned char 
 16422 ;;  exp2            1  [STACK] unsigned char 
 16423 ;;  sign            1  [STACK] unsigned char 
 16424 ;; Return value:  Size  Location     Type
 16425 ;;                  3  [STACK] float 
 16426 ;; Registers used:
 16427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
 16428 ;; Tracked objects:
 16429 ;;		On entry : 0/0
 16430 ;;		On exit  : 0/0
 16431 ;;		Unchanged: 0/0
 16432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16433 ;;      Params:         0       0       0       0       0       0       0
 16434 ;;      Locals:         0       0       0       0       0       0       0
 16435 ;;      Temps:          0       0       0       0       0       0       0
 16436 ;;      Totals:         0       0       0       0       0       0       0
 16437 ;;Total ram usage:        0 bytes
 16438 ;; Hardware stack levels used:    1
 16439 ;; Hardware stack levels required when called:   11
 16440 ;; This function calls:
 16441 ;;		___ftpack
 16442 ;; This function is called by:
 16443 ;;		_getTemperature
 16444 ;;		_sprintf
 16445 ;;		___ftsub
 16446 ;; This function uses a reentrant model
 16447 ;;
 16448                           
 16449                           	psect	text48
 16450  001800                     __ptext48:
 16451                           	opt stack 0
 16452  001800                     ___ftadd:
 16453                           	opt stack 0
 16454                           
 16455                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 16456  001800  52E6               	movf	postinc1,f,c
 16457  001802  52E6               	movf	postinc1,f,c
 16458  001804  52E6               	movf	postinc1,f,c
 16459                           
 16460                           ;incstack = 0
 16461  001806  0E0F               	movlw	15
 16462  001808  6E5D               	movwf	btemp+11,c
 16463                           
 16464                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16465  00180A  0EFA               	movlw	-6
 16466  00180C  CFE3 F058          	movff	plusw1,btemp+6
 16467  001810  0EFB               	movlw	-5
 16468  001812  CFE3 F059          	movff	plusw1,btemp+7
 16469  001816  0EFC               	movlw	-4
 16470  001818  CFE3 F05A          	movff	plusw1,btemp+8
 16471  00181C  285D               	incf	btemp+11,w,c
 16472  00181E  6E52               	movwf	btemp,c
 16473  001820  D004               	goto	u540
 16474  001822                     u545:
 16475  001822  90D8               	bcf	status,0,c
 16476  001824  325A               	rrcf	btemp+8,f,c
 16477  001826  3259               	rrcf	btemp+7,f,c
 16478  001828  3258               	rrcf	btemp+6,f,c
 16479  00182A                     u540:
 16480  00182A  2E52               	decfsz	btemp,f,c
 16481  00182C  D7FA               	goto	u545
 16482  00182E  5058               	movf	btemp+6,w,c
 16483  001830  6E5D               	movwf	btemp+11,c
 16484                           
 16485                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16486  001832  0EFD               	movlw	-3
 16487  001834  C05D  FFE3         	movff	btemp+11,plusw1
 16488  001838  0E0F               	movlw	15
 16489  00183A  6E5D               	movwf	btemp+11,c
 16490                           
 16491                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16492  00183C  0EF7               	movlw	-9
 16493  00183E  CFE3 F058          	movff	plusw1,btemp+6
 16494  001842  0EF8               	movlw	-8
 16495  001844  CFE3 F059          	movff	plusw1,btemp+7
 16496  001848  0EF9               	movlw	-7
 16497  00184A  CFE3 F05A          	movff	plusw1,btemp+8
 16498  00184E  285D               	incf	btemp+11,w,c
 16499  001850  6E52               	movwf	btemp,c
 16500  001852  D004               	goto	u550
 16501  001854                     u555:
 16502  001854  90D8               	bcf	status,0,c
 16503  001856  325A               	rrcf	btemp+8,f,c
 16504  001858  3259               	rrcf	btemp+7,f,c
 16505  00185A  3258               	rrcf	btemp+6,f,c
 16506  00185C                     u550:
 16507  00185C  2E52               	decfsz	btemp,f,c
 16508  00185E  D7FA               	goto	u555
 16509  001860  5058               	movf	btemp+6,w,c
 16510  001862  6E5D               	movwf	btemp+11,c
 16511                           
 16512                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16513  001864  0EFE               	movlw	-2
 16514  001866  C05D  FFE3         	movff	btemp+11,plusw1
 16515                           
 16516                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16517  00186A  0EFD               	movlw	-3
 16518  00186C  50E3               	movf	plusw1,w,c
 16519  00186E  B4D8               	btfsc	status,2,c
 16520  001870  D018               	goto	l1826
 16521                           
 16522                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16523                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16524  001872  50E1               	movf	fsr1l,w,c
 16525  001874  0FFD               	addlw	-3
 16526  001876  6ED9               	movwf	fsr2l,c
 16527  001878  50E2               	movf	fsr1h,w,c
 16528  00187A  6EDA               	movwf	fsr2h,c
 16529  00187C  0EFF               	movlw	255
 16530  00187E  22DA               	addwfc	fsr2h,f,c
 16531  001880  0EFE               	movlw	-2
 16532  001882  50E3               	movf	plusw1,w,c
 16533  001884  5CDE               	subwf	postinc2,w,c
 16534  001886  B0D8               	btfsc	status,0,c
 16535  001888  D014               	goto	l1830
 16536                           
 16537                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16538  00188A  0EFD               	movlw	-3
 16539  00188C  CFE3 F05D          	movff	plusw1,btemp+11
 16540                           
 16541                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16542  001890  0EFE               	movlw	-2
 16543  001892  CFE3 F05C          	movff	plusw1,btemp+10
 16544  001896  505D               	movf	btemp+11,w,c
 16545  001898  5C5C               	subwf	btemp+10,w,c
 16546  00189A  6E5D               	movwf	btemp+11,c
 16547  00189C  0E18               	movlw	24
 16548  00189E  645D               	cpfsgt	btemp+11,c
 16549  0018A0  D008               	goto	l1830
 16550  0018A2                     l1826:
 16551                           
 16552                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16553  0018A2  0EF7               	movlw	-9
 16554  0018A4  CFE3 F052          	movff	plusw1,btemp
 16555  0018A8  0EF8               	movlw	-8
 16556  0018AA  CFE3 F053          	movff	plusw1,btemp+1
 16557  0018AE  0EF9               	movlw	-7
 16558  0018B0  D023               	goto	L27
 16559  0018B2                     l1830:
 16560                           
 16561                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16562  0018B2  0EFE               	movlw	-2
 16563  0018B4  50E3               	movf	plusw1,w,c
 16564  0018B6  B4D8               	btfsc	status,2,c
 16565  0018B8  D018               	goto	l1836
 16566                           
 16567                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16568                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16569  0018BA  50E1               	movf	fsr1l,w,c
 16570  0018BC  0FFE               	addlw	-2
 16571  0018BE  6ED9               	movwf	fsr2l,c
 16572  0018C0  50E2               	movf	fsr1h,w,c
 16573  0018C2  6EDA               	movwf	fsr2h,c
 16574  0018C4  0EFF               	movlw	255
 16575  0018C6  22DA               	addwfc	fsr2h,f,c
 16576  0018C8  0EFD               	movlw	-3
 16577  0018CA  50E3               	movf	plusw1,w,c
 16578  0018CC  5CDE               	subwf	postinc2,w,c
 16579  0018CE  B0D8               	btfsc	status,0,c
 16580  0018D0  D016               	goto	l1840
 16581                           
 16582                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16583  0018D2  0EFE               	movlw	-2
 16584  0018D4  CFE3 F05D          	movff	plusw1,btemp+11
 16585                           
 16586                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16587  0018D8  0EFD               	movlw	-3
 16588  0018DA  CFE3 F05C          	movff	plusw1,btemp+10
 16589  0018DE  505D               	movf	btemp+11,w,c
 16590  0018E0  5C5C               	subwf	btemp+10,w,c
 16591  0018E2  6E5D               	movwf	btemp+11,c
 16592  0018E4  0E18               	movlw	24
 16593  0018E6  645D               	cpfsgt	btemp+11,c
 16594  0018E8  D00A               	goto	l1840
 16595  0018EA                     l1836:
 16596                           
 16597                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16598  0018EA  0EFA               	movlw	-6
 16599  0018EC  CFE3 F052          	movff	plusw1,btemp
 16600  0018F0  0EFB               	movlw	-5
 16601  0018F2  CFE3 F053          	movff	plusw1,btemp+1
 16602  0018F6  0EFC               	movlw	-4
 16603  0018F8                     L27:
 16604  0018F8  CFE3 F054          	movff	plusw1,btemp+2
 16605  0018FC  D102               	goto	l1013
 16606  0018FE                     l1840:
 16607                           
 16608                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16609  0018FE  0EFF               	movlw	-1
 16610  001900  6AE3               	clrf	plusw1,c
 16611  001902  82E3               	bsf	plusw1,1,c
 16612  001904  84E3               	bsf	plusw1,2,c	;indir
 16613                           
 16614                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16615  001906  0EFC               	movlw	-4
 16616  001908  AEE3               	btfss	plusw1,7,c
 16617  00190A  D002               	goto	l1017
 16618                           
 16619                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16620  00190C  0EFF               	movlw	-1
 16621  00190E  8EE3               	bsf	plusw1,7,c
 16622  001910                     l1017:
 16623                           
 16624                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16625  001910  0EF9               	movlw	-7
 16626  001912  AEE3               	btfss	plusw1,7,c
 16627  001914  D002               	goto	l1018
 16628                           
 16629                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16630  001916  0EFF               	movlw	-1
 16631  001918  8CE3               	bsf	plusw1,6,c
 16632  00191A                     l1018:
 16633                           
 16634                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16635  00191A  0EFB               	movlw	-5
 16636  00191C  8EE3               	bsf	plusw1,7,c
 16637                           
 16638                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16639  00191E  0EFC               	movlw	-4
 16640  001920  6AE3               	clrf	plusw1,c
 16641                           
 16642                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16643  001922  0EF8               	movlw	-8
 16644  001924  8EE3               	bsf	plusw1,7,c
 16645                           
 16646                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16647  001926  0EF9               	movlw	-7
 16648  001928  6AE3               	clrf	plusw1,c
 16649                           
 16650                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16651                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16652  00192A  50E1               	movf	fsr1l,w,c
 16653  00192C  0FFD               	addlw	-3
 16654  00192E  6ED9               	movwf	fsr2l,c
 16655  001930  50E2               	movf	fsr1h,w,c
 16656  001932  6EDA               	movwf	fsr2h,c
 16657  001934  0EFF               	movlw	255
 16658  001936  22DA               	addwfc	fsr2h,f,c
 16659  001938  0EFE               	movlw	-2
 16660  00193A  50E3               	movf	plusw1,w,c
 16661  00193C  5CDE               	subwf	postinc2,w,c
 16662  00193E  B0D8               	btfsc	status,0,c
 16663  001940  D035               	goto	l1862
 16664  001942                     l1852:
 16665                           
 16666                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16667  001942  90D8               	bcf	status,0,c
 16668  001944  0EF7               	movlw	-9
 16669  001946  36E3               	rlcf	plusw1,f,c
 16670  001948  0EF8               	movlw	-8
 16671  00194A  36E3               	rlcf	plusw1,f,c
 16672  00194C  0EF9               	movlw	-7
 16673  00194E  36E3               	rlcf	plusw1,f,c
 16674                           
 16675                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16676  001950  0EFE               	movlw	-2
 16677  001952  06E3               	decf	plusw1,f,c
 16678                           
 16679                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16680                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16681  001954  50E1               	movf	fsr1l,w,c
 16682  001956  0FFE               	addlw	-2
 16683  001958  6ED9               	movwf	fsr2l,c
 16684  00195A  50E2               	movf	fsr1h,w,c
 16685  00195C  6EDA               	movwf	fsr2h,c
 16686  00195E  0EFF               	movlw	255
 16687  001960  22DA               	addwfc	fsr2h,f,c
 16688  001962  0EFD               	movlw	-3
 16689  001964  50E3               	movf	plusw1,w,c
 16690  001966  18DE               	xorwf	postinc2,w,c
 16691  001968  B4D8               	btfsc	status,2,c
 16692  00196A  D013               	goto	l1860
 16693                           
 16694                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16695  00196C  0EFF               	movlw	-1
 16696  00196E  06E3               	decf	plusw1,f,c
 16697  001970  0EFF               	movlw	-1
 16698  001972  CFE3 F05D          	movff	plusw1,btemp+11
 16699  001976  0E07               	movlw	7
 16700  001978  165D               	andwf	btemp+11,f,c
 16701  00197A  B4D8               	btfsc	status,2,c
 16702  00197C  D00A               	goto	l1860
 16703  00197E  D7E1               	goto	l1852
 16704  001980                     l1858:
 16705                           
 16706                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16707  001980  90D8               	bcf	status,0,c
 16708  001982  0EFC               	movlw	-4
 16709  001984  32E3               	rrcf	plusw1,f,c
 16710  001986  0EFB               	movlw	-5
 16711  001988  32E3               	rrcf	plusw1,f,c
 16712  00198A  0EFA               	movlw	-6
 16713  00198C  32E3               	rrcf	plusw1,f,c
 16714                           
 16715                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16716  00198E  0EFD               	movlw	-3
 16717  001990  2AE3               	incf	plusw1,f,c
 16718  001992                     l1860:
 16719                           
 16720                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16721                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16722  001992  50E1               	movf	fsr1l,w,c
 16723  001994  0FFD               	addlw	-3
 16724  001996  6ED9               	movwf	fsr2l,c
 16725  001998  50E2               	movf	fsr1h,w,c
 16726  00199A  6EDA               	movwf	fsr2h,c
 16727  00199C  0EFF               	movlw	255
 16728  00199E  22DA               	addwfc	fsr2h,f,c
 16729  0019A0  0EFE               	movlw	-2
 16730  0019A2  50E3               	movf	plusw1,w,c
 16731  0019A4  18DE               	xorwf	postinc2,w,c
 16732  0019A6  B4D8               	btfsc	status,2,c
 16733  0019A8  D041               	goto	l1874
 16734  0019AA  D7EA               	goto	l1858
 16735  0019AC                     l1862:
 16736                           
 16737                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16738                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16739  0019AC  50E1               	movf	fsr1l,w,c
 16740  0019AE  0FFE               	addlw	-2
 16741  0019B0  6ED9               	movwf	fsr2l,c
 16742  0019B2  50E2               	movf	fsr1h,w,c
 16743  0019B4  6EDA               	movwf	fsr2h,c
 16744  0019B6  0EFF               	movlw	255
 16745  0019B8  22DA               	addwfc	fsr2h,f,c
 16746  0019BA  0EFD               	movlw	-3
 16747  0019BC  50E3               	movf	plusw1,w,c
 16748  0019BE  5CDE               	subwf	postinc2,w,c
 16749  0019C0  B0D8               	btfsc	status,0,c
 16750  0019C2  D034               	goto	l1874
 16751  0019C4                     l1864:
 16752                           
 16753                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16754  0019C4  90D8               	bcf	status,0,c
 16755  0019C6  0EFA               	movlw	-6
 16756  0019C8  36E3               	rlcf	plusw1,f,c
 16757  0019CA  0EFB               	movlw	-5
 16758  0019CC  36E3               	rlcf	plusw1,f,c
 16759  0019CE  0EFC               	movlw	-4
 16760  0019D0  36E3               	rlcf	plusw1,f,c
 16761                           
 16762                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16763  0019D2  0EFD               	movlw	-3
 16764  0019D4  06E3               	decf	plusw1,f,c
 16765                           
 16766                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16767                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16768  0019D6  50E1               	movf	fsr1l,w,c
 16769  0019D8  0FFE               	addlw	-2
 16770  0019DA  6ED9               	movwf	fsr2l,c
 16771  0019DC  50E2               	movf	fsr1h,w,c
 16772  0019DE  6EDA               	movwf	fsr2h,c
 16773  0019E0  0EFF               	movlw	255
 16774  0019E2  22DA               	addwfc	fsr2h,f,c
 16775  0019E4  0EFD               	movlw	-3
 16776  0019E6  50E3               	movf	plusw1,w,c
 16777  0019E8  18DE               	xorwf	postinc2,w,c
 16778  0019EA  B4D8               	btfsc	status,2,c
 16779  0019EC  D013               	goto	l1872
 16780                           
 16781                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16782  0019EE  0EFF               	movlw	-1
 16783  0019F0  06E3               	decf	plusw1,f,c
 16784  0019F2  0EFF               	movlw	-1
 16785  0019F4  CFE3 F05D          	movff	plusw1,btemp+11
 16786  0019F8  0E07               	movlw	7
 16787  0019FA  165D               	andwf	btemp+11,f,c
 16788  0019FC  B4D8               	btfsc	status,2,c
 16789  0019FE  D00A               	goto	l1872
 16790  001A00  D7E1               	goto	l1864
 16791  001A02                     l1870:
 16792                           
 16793                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16794  001A02  90D8               	bcf	status,0,c
 16795  001A04  0EF9               	movlw	-7
 16796  001A06  32E3               	rrcf	plusw1,f,c
 16797  001A08  0EF8               	movlw	-8
 16798  001A0A  32E3               	rrcf	plusw1,f,c
 16799  001A0C  0EF7               	movlw	-9
 16800  001A0E  32E3               	rrcf	plusw1,f,c
 16801                           
 16802                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16803  001A10  0EFE               	movlw	-2
 16804  001A12  2AE3               	incf	plusw1,f,c
 16805  001A14                     l1872:
 16806                           
 16807                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 16808                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 16809  001A14  50E1               	movf	fsr1l,w,c
 16810  001A16  0FFD               	addlw	-3
 16811  001A18  6ED9               	movwf	fsr2l,c
 16812  001A1A  50E2               	movf	fsr1h,w,c
 16813  001A1C  6EDA               	movwf	fsr2h,c
 16814  001A1E  0EFF               	movlw	255
 16815  001A20  22DA               	addwfc	fsr2h,f,c
 16816  001A22  0EFE               	movlw	-2
 16817  001A24  50E3               	movf	plusw1,w,c
 16818  001A26  18DE               	xorwf	postinc2,w,c
 16819  001A28  A4D8               	btfss	status,2,c
 16820  001A2A  D7EB               	goto	l1870
 16821  001A2C                     l1874:
 16822                           
 16823                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16824  001A2C  0EFF               	movlw	-1
 16825  001A2E  AEE3               	btfss	plusw1,7,c
 16826  001A30  D011               	goto	l1880
 16827                           
 16828                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16829  001A32  0EFA               	movlw	-6
 16830  001A34  1EE3               	comf	plusw1,f,c
 16831  001A36  0EFB               	movlw	-5
 16832  001A38  1EE3               	comf	plusw1,f,c
 16833  001A3A  0EFC               	movlw	-4
 16834  001A3C  1EE3               	comf	plusw1,f,c
 16835                           
 16836                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16837  001A3E  50E1               	movf	fsr1l,w,c
 16838  001A40  0FFA               	addlw	-6
 16839  001A42  6ED9               	movwf	fsr2l,c
 16840  001A44  50E2               	movf	fsr1h,w,c
 16841  001A46  6EDA               	movwf	fsr2h,c
 16842  001A48  0EFF               	movlw	255
 16843  001A4A  22DA               	addwfc	fsr2h,f,c
 16844  001A4C  2ADE               	incf	postinc2,f,c
 16845  001A4E  0E00               	movlw	0
 16846  001A50  22DE               	addwfc	postinc2,f,c
 16847  001A52  22DE               	addwfc	postinc2,f,c
 16848  001A54                     l1880:
 16849                           
 16850                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16851  001A54  0EFF               	movlw	-1
 16852  001A56  ACE3               	btfss	plusw1,6,c
 16853  001A58  D011               	goto	l1886
 16854                           
 16855                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16856  001A5A  0EF7               	movlw	-9
 16857  001A5C  1EE3               	comf	plusw1,f,c
 16858  001A5E  0EF8               	movlw	-8
 16859  001A60  1EE3               	comf	plusw1,f,c
 16860  001A62  0EF9               	movlw	-7
 16861  001A64  1EE3               	comf	plusw1,f,c
 16862                           
 16863                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16864  001A66  50E1               	movf	fsr1l,w,c
 16865  001A68  0FF7               	addlw	-9
 16866  001A6A  6ED9               	movwf	fsr2l,c
 16867  001A6C  50E2               	movf	fsr1h,w,c
 16868  001A6E  6EDA               	movwf	fsr2h,c
 16869  001A70  0EFF               	movlw	255
 16870  001A72  22DA               	addwfc	fsr2h,f,c
 16871  001A74  2ADE               	incf	postinc2,f,c
 16872  001A76  0E00               	movlw	0
 16873  001A78  22DE               	addwfc	postinc2,f,c
 16874  001A7A  22DE               	addwfc	postinc2,f,c
 16875  001A7C                     l1886:
 16876                           
 16877                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16878  001A7C  0EFF               	movlw	-1
 16879  001A7E  6AE3               	clrf	plusw1,c
 16880                           
 16881                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 16882                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16883  001A80  0EF7               	movlw	-9
 16884  001A82  50E3               	movf	plusw1,w,c
 16885  001A84  6E52               	movwf	btemp,c
 16886  001A86  0EFA               	movlw	-6
 16887  001A88  50E3               	movf	plusw1,w,c
 16888  001A8A  2652               	addwf	btemp,f,c
 16889  001A8C  0EF7               	movlw	-9
 16890  001A8E  C052  FFE3         	movff	btemp,plusw1
 16891  001A92  0EF8               	movlw	-8
 16892  001A94  50E3               	movf	plusw1,w,c
 16893  001A96  6E52               	movwf	btemp,c
 16894  001A98  0EFB               	movlw	-5
 16895  001A9A  50E3               	movf	plusw1,w,c
 16896  001A9C  2252               	addwfc	btemp,f,c
 16897  001A9E  0EF8               	movlw	-8
 16898  001AA0  C052  FFE3         	movff	btemp,plusw1
 16899  001AA4  0EF9               	movlw	-7
 16900  001AA6  50E3               	movf	plusw1,w,c
 16901  001AA8  6E52               	movwf	btemp,c
 16902  001AAA  0EFC               	movlw	-4
 16903  001AAC  50E3               	movf	plusw1,w,c
 16904  001AAE  2252               	addwfc	btemp,f,c
 16905  001AB0  0EF9               	movlw	-7
 16906  001AB2  C052  FFE3         	movff	btemp,plusw1
 16907                           
 16908                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16909  001AB6  0EF9               	movlw	-7
 16910  001AB8  AEE3               	btfss	plusw1,7,c
 16911  001ABA  D014               	goto	l1898
 16912                           
 16913                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16914  001ABC  0EF7               	movlw	-9
 16915  001ABE  1EE3               	comf	plusw1,f,c
 16916  001AC0  0EF8               	movlw	-8
 16917  001AC2  1EE3               	comf	plusw1,f,c
 16918  001AC4  0EF9               	movlw	-7
 16919  001AC6  1EE3               	comf	plusw1,f,c
 16920                           
 16921                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 16922  001AC8  50E1               	movf	fsr1l,w,c
 16923  001ACA  0FF7               	addlw	-9
 16924  001ACC  6ED9               	movwf	fsr2l,c
 16925  001ACE  50E2               	movf	fsr1h,w,c
 16926  001AD0  6EDA               	movwf	fsr2h,c
 16927  001AD2  0EFF               	movlw	255
 16928  001AD4  22DA               	addwfc	fsr2h,f,c
 16929  001AD6  2ADE               	incf	postinc2,f,c
 16930  001AD8  0E00               	movlw	0
 16931  001ADA  22DE               	addwfc	postinc2,f,c
 16932  001ADC  22DE               	addwfc	postinc2,f,c
 16933                           
 16934                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16935  001ADE  0EFF               	movlw	-1
 16936  001AE0  6AE3               	clrf	plusw1,c
 16937  001AE2  2AE3               	incf	plusw1,f,c
 16938  001AE4                     l1898:
 16939                           
 16940                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 16941  001AE4  0EFF               	movlw	-1
 16942  001AE6  50E3               	movf	plusw1,w,c
 16943  001AE8  6EE6               	movwf	postinc1,c
 16944                           
 16945                           ;stkvar	___ftadd@exp1 @ sp[(-4)+0]
 16946  001AEA  0EFC               	movlw	-4
 16947  001AEC  50E3               	movf	plusw1,w,c
 16948  001AEE  6EE6               	movwf	postinc1,c
 16949                           
 16950                           ;stkvar	___ftadd@f2 @ sp[(-5)+-6]
 16951  001AF0  0EF5               	movlw	-11
 16952  001AF2  CFE3 FFE6          	movff	plusw1,postinc1
 16953  001AF6  CFE3 FFE6          	movff	plusw1,postinc1
 16954  001AFA  CFE3 FFE6          	movff	plusw1,postinc1
 16955  001AFE  ECC1  F01C         	call	___ftpack	;wreg free
 16956  001B02                     l1013:
 16957                           
 16958                           ; ___ftadd: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16959  001B02  0EF7               	movlw	247
 16960  001B04  26E1               	addwf	fsr1l,f,c
 16961  001B06  0EFF               	movlw	255
 16962  001B08  22E2               	addwfc	fsr1h,f,c
 16963  001B0A  0012               	return		;funcret
 16964  001B0C                     __end_of___ftadd:
 16965                           	opt stack 0
 16966                           tblptru	equ	0xFF8
 16967                           tblptrh	equ	0xFF7
 16968                           tblptrl	equ	0xFF6
 16969                           tablat	equ	0xFF5
 16970                           prodh	equ	0xFF4
 16971                           prodl	equ	0xFF3
 16972                           intcon	equ	0xFF2
 16973                           intcon2	equ	0xFF1
 16974                           indf0	equ	0xFEF
 16975                           postinc0	equ	0xFEE
 16976                           fsr0h	equ	0xFEA
 16977                           fsr0l	equ	0xFE9
 16978                           wreg	equ	0xFE8
 16979                           indf1	equ	0xFE7
 16980                           postinc1	equ	0xFE6
 16981                           postdec1	equ	0xFE5
 16982                           plusw1	equ	0xFE3
 16983                           fsr1h	equ	0xFE2
 16984                           fsr1l	equ	0xFE1
 16985                           indf2	equ	0xFDF
 16986                           postinc2	equ	0xFDE
 16987                           postdec2	equ	0xFDD
 16988                           fsr2h	equ	0xFDA
 16989                           fsr2l	equ	0xFD9
 16990                           status	equ	0xFD8
 16991                           
 16992 ;; *************** function _mainMenu *****************
 16993 ;; Defined at:
 16994 ;;		line 659 in file "lab7.c"
 16995 ;; Parameters:    Size  Location     Type
 16996 ;;		None
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;		None
 16999 ;; Return value:  Size  Location     Type
 17000 ;;                  1  [STACK] void 
 17001 ;; Registers used:
 17002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17008 ;;      Params:         0       0       0       0       0       0       0
 17009 ;;      Locals:         0       0       0       0       0       0       0
 17010 ;;      Temps:          0       0       0       0       0       0       0
 17011 ;;      Totals:         0       0       0       0       0       0       0
 17012 ;;Total ram usage:        0 bytes
 17013 ;; Hardware stack levels used:    1
 17014 ;; Hardware stack levels required when called:   17
 17015 ;; This function calls:
 17016 ;;		_delay
 17017 ;;		_keypadOnly
 17018 ;;		_mainMenu
 17019 ;;		_passcodeMenu
 17020 ;;		_pirMenu
 17021 ;;		_printChar
 17022 ;;		_reception
 17023 ;;		_resetScreen
 17024 ;;		_temperatureMenu
 17025 ;;		_write_EEPROM
 17026 ;; This function is called by:
 17027 ;;		_login
 17028 ;;		_passcodeMenu
 17029 ;;		_setPassword
 17030 ;;		_pirMenu
 17031 ;;		_temperatureMenu
 17032 ;; This function uses a recursive model
 17033 ;;
 17034                           
 17035                           	psect	text49
 17036  002362                     __ptext49:
 17037                           	opt stack 0
 17038  002362                     _mainMenu:
 17039                           	opt stack 12
 17040                           
 17041                           ;lab7.c: 661: printChar("\n\r");
 17042                           
 17043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 17044                           ;incstack = 0
 17045  002362  0EEC               	movlw	low (STR_17+36)
 17046  002364  6EE6               	movwf	postinc1,c
 17047  002366  0E7A               	movlw	high (STR_17+36)
 17048  002368  6EE6               	movwf	postinc1,c
 17049  00236A  EC0B  F021         	call	_printChar	;wreg free
 17050                           
 17051                           ;lab7.c: 662: printChar("\n\r************************MAIN MENU**************************
      +                          *");
 17052  00236E  0E0B               	movlw	low STR_64
 17053  002370  6EE6               	movwf	postinc1,c
 17054  002372  0E76               	movlw	high STR_64
 17055  002374  6EE6               	movwf	postinc1,c
 17056  002376  EC0B  F021         	call	_printChar	;wreg free
 17057                           
 17058                           ;lab7.c: 663: printChar("\n\r");
 17059  00237A  0EEC               	movlw	low (STR_17+36)
 17060  00237C  6EE6               	movwf	postinc1,c
 17061  00237E  0E7A               	movlw	high (STR_17+36)
 17062  002380  6EE6               	movwf	postinc1,c
 17063  002382  EC0B  F021         	call	_printChar	;wreg free
 17064                           
 17065                           ;lab7.c: 664: printChar("\n\rSelect one of the following:");
 17066  002386  0ECB               	movlw	low STR_66
 17067  002388  6EE6               	movwf	postinc1,c
 17068  00238A  0E7D               	movlw	high STR_66
 17069  00238C  6EE6               	movwf	postinc1,c
 17070  00238E  EC0B  F021         	call	_printChar	;wreg free
 17071                           
 17072                           ;lab7.c: 665: printChar("\n\r");
 17073  002392  0EEC               	movlw	low (STR_17+36)
 17074  002394  6EE6               	movwf	postinc1,c
 17075  002396  0E7A               	movlw	high (STR_17+36)
 17076  002398  6EE6               	movwf	postinc1,c
 17077  00239A  EC0B  F021         	call	_printChar	;wreg free
 17078                           
 17079                           ;lab7.c: 666: printChar("\n\r         1. Passcode Options");
 17080  00239E  0EEA               	movlw	low STR_68
 17081  0023A0  6EE6               	movwf	postinc1,c
 17082  0023A2  0E7D               	movlw	high STR_68
 17083  0023A4  6EE6               	movwf	postinc1,c
 17084  0023A6  EC0B  F021         	call	_printChar	;wreg free
 17085                           
 17086                           ;lab7.c: 667: printChar("\n\r         2. PIR Sensor Alarm Options");
 17087  0023AA  0E3D               	movlw	low STR_69
 17088  0023AC  6EE6               	movwf	postinc1,c
 17089  0023AE  0E7B               	movlw	high STR_69
 17090  0023B0  6EE6               	movwf	postinc1,c
 17091  0023B2  EC0B  F021         	call	_printChar	;wreg free
 17092                           
 17093                           ;lab7.c: 668: printChar("\n\r         3. Temperature Sensor Alarm Options");
 17094  0023B6  0EEA               	movlw	low STR_70
 17095  0023B8  6EE6               	movwf	postinc1,c
 17096  0023BA  0E78               	movlw	high STR_70
 17097  0023BC  6EE6               	movwf	postinc1,c
 17098  0023BE  EC0B  F021         	call	_printChar	;wreg free
 17099                           
 17100                           ;lab7.c: 669: printChar("\n\r         4. Use Keyboard (Terminal) As The Only Input");
 17101  0023C2  0EEC               	movlw	low STR_71
 17102  0023C4  6EE6               	movwf	postinc1,c
 17103  0023C6  0E77               	movlw	high STR_71
 17104  0023C8  6EE6               	movwf	postinc1,c
 17105  0023CA  EC0B  F021         	call	_printChar	;wreg free
 17106                           
 17107                           ;lab7.c: 670: printChar("\n\r         5. Use Keypad As The Only Input ('D' = Enter Key)"
      +                          );
 17108  0023CE  0E88               	movlw	low STR_72
 17109  0023D0  6EE6               	movwf	postinc1,c
 17110  0023D2  0E76               	movlw	high STR_72
 17111  0023D4  6EE6               	movwf	postinc1,c
 17112  0023D6  EC0B  F021         	call	_printChar	;wreg free
 17113                           
 17114                           ;lab7.c: 671: printChar("\n\r         6. Use BOTH The Keyboard and Keypad As The Input")
      +                          ;
 17115  0023DA  0E3D               	movlw	low STR_73
 17116  0023DC  6EE6               	movwf	postinc1,c
 17117  0023DE  0E77               	movlw	high STR_73
 17118  0023E0  6EE6               	movwf	postinc1,c
 17119  0023E2  EC0B  F021         	call	_printChar	;wreg free
 17120                           
 17121                           ;lab7.c: 672: printChar("\n\r");
 17122  0023E6  0EEC               	movlw	low (STR_17+36)
 17123  0023E8  6EE6               	movwf	postinc1,c
 17124  0023EA  0E7A               	movlw	high (STR_17+36)
 17125  0023EC  6EE6               	movwf	postinc1,c
 17126  0023EE  EC0B  F021         	call	_printChar	;wreg free
 17127                           
 17128                           ;lab7.c: 673: printChar("\n\r         0. Refresh Main Menu");
 17129  0023F2  0E4E               	movlw	low STR_75
 17130  0023F4  6EE6               	movwf	postinc1,c
 17131  0023F6  0E7D               	movlw	high STR_75
 17132  0023F8  6EE6               	movwf	postinc1,c
 17133  0023FA  EC0B  F021         	call	_printChar	;wreg free
 17134                           
 17135                           ;lab7.c: 674: printChar("\n\r");
 17136  0023FE  0EEC               	movlw	low (STR_17+36)
 17137  002400  6EE6               	movwf	postinc1,c
 17138  002402  0E7A               	movlw	high (STR_17+36)
 17139  002404  6EE6               	movwf	postinc1,c
 17140  002406  EC0B  F021         	call	_printChar	;wreg free
 17141                           
 17142                           ;lab7.c: 675: printChar("\n\rInput: ");
 17143  00240A  0ED4               	movlw	low STR_77
 17144  00240C  6EE6               	movwf	postinc1,c
 17145  00240E  0E7F               	movlw	high STR_77
 17146  002410  6EE6               	movwf	postinc1,c
 17147  002412  EC0B  F021         	call	_printChar	;wreg free
 17148                           
 17149                           ;lab7.c: 677: delay();
 17150  002416  ECE8  F022         	call	_delay	;wreg free
 17151                           
 17152                           ;lab7.c: 679: if(status==1 && PORTBbits.RB4 == 1)
 17153  00241A  0410               	decf	_status,w,c
 17154  00241C  1011               	iorwf	_status+1,w,c
 17155  00241E  B4D8               	btfsc	status,2,c
 17156  002420  A881               	btfss	3969,4,c	;volatile
 17157  002422  D012               	goto	l3558
 17158                           
 17159                           ;lab7.c: 680: {
 17160                           ;lab7.c: 681: keypadOnly();
 17161  002424  EC66  F01F         	call	_keypadOnly	;wreg free
 17162  002428                     l363:
 17163  002428  A2AC               	btfss	4012,1,c	;volatile
 17164  00242A  D7FE               	goto	l363
 17165                           
 17166                           ;lab7.c: 683: TXREG = keypadValue;
 17167  00242C  C01C  FFAD         	movff	_keypadValue,4013	;volatile
 17168                           
 17169                           ;lab7.c: 684: option = keypadValue;
 17170  002430  C01C  F01D         	movff	_keypadValue,_option
 17171                           
 17172                           ;lab7.c: 685: delay();
 17173  002434  ECE8  F022         	call	_delay	;wreg free
 17174                           
 17175                           ;lab7.c: 686: while(keypadValue != 'D'){
 17176  002438  D002               	goto	l3556
 17177  00243A                     l3554:
 17178                           
 17179                           ;lab7.c: 687: keypadOnly();
 17180  00243A  EC66  F01F         	call	_keypadOnly	;wreg free
 17181  00243E                     l3556:
 17182  00243E  0E44               	movlw	68
 17183  002440  181C               	xorwf	_keypadValue,w,c
 17184  002442  B4D8               	btfsc	status,2,c
 17185  002444  D05D               	goto	l3616
 17186  002446  D7F9               	goto	l3554
 17187  002448                     l3558:
 17188                           
 17189                           ;lab7.c: 690: else
 17190                           ;lab7.c: 691: {
 17191                           ;lab7.c: 692: option = reception();
 17192  002448  EC2B  F023         	call	_reception	;wreg free
 17193  00244C  5052               	movf	btemp,w,c
 17194  00244E  6E1D               	movwf	_option,c
 17195  002450                     l370:
 17196  002450  A2AC               	btfss	4012,1,c	;volatile
 17197  002452  D7FE               	goto	l370
 17198                           
 17199                           ;lab7.c: 694: TXREG = option;
 17200  002454  C01D  FFAD         	movff	_option,4013	;volatile
 17201  002458                     l3560:
 17202  002458  0E0D               	movlw	13
 17203  00245A  18AE               	xorwf	4014,w,c	;volatile
 17204  00245C  B4D8               	btfsc	status,2,c
 17205  00245E  D050               	goto	l3616
 17206  002460  D7FB               	goto	l3560
 17207  002462                     l3562:
 17208                           
 17209                           ;lab7.c: 702: passcodeMenu();
 17210  002462  EC97  F012         	call	_passcodeMenu	;wreg free
 17211                           
 17212                           ;lab7.c: 703: break;
 17213  002466  0012               	return	
 17214  002468                     l3564:
 17215                           
 17216                           ;lab7.c: 706: pirMenu();
 17217  002468  EC91  F017         	call	_pirMenu	;wreg free
 17218                           
 17219                           ;lab7.c: 707: break;
 17220  00246C  0012               	return	
 17221  00246E                     l3566:
 17222                           
 17223                           ;lab7.c: 710: temperatureMenu();
 17224  00246E  ECCF  F016         	call	_temperatureMenu	;wreg free
 17225                           
 17226                           ;lab7.c: 711: break;
 17227  002472  0012               	return	
 17228  002474                     l3568:
 17229                           
 17230                           ;lab7.c: 714: inputType = "Keyboard";
 17231  002474  0EE7               	movlw	low STR_3
 17232  002476  6E43               	movwf	_inputType,c
 17233  002478  0E7F               	movlw	high STR_3
 17234  00247A  6E44               	movwf	_inputType+1,c
 17235                           
 17236                           ;lab7.c: 715: write_EEPROM(inputMethodAddress,'K');
 17237  00247C  0E4B               	movlw	75
 17238  00247E  6EE6               	movwf	postinc1,c
 17239  002480  0E03               	movlw	3
 17240  002482  6EE6               	movwf	postinc1,c
 17241  002484  0E00               	movlw	0
 17242  002486  6EE6               	movwf	postinc1,c
 17243  002488  ECFD  F022         	call	_write_EEPROM	;wreg free
 17244                           
 17245                           ;lab7.c: 716: PORTBbits.RB4=0;
 17246  00248C  9881               	bcf	3969,4,c	;volatile
 17247  00248E                     l3574:
 17248                           
 17249                           ;lab7.c: 717: status = 0;
 17250  00248E  6A10               	clrf	_status,c
 17251  002490  6A11               	clrf	_status+1,c
 17252  002492                     l3576:
 17253                           
 17254                           ;lab7.c: 718: resetScreen();
 17255  002492  EC41  F023         	call	_resetScreen	;wreg free
 17256                           
 17257                           ;lab7.c: 719: mainMenu();
 17258  002496  DF65               	call	_mainMenu	;wreg free
 17259                           
 17260                           ;lab7.c: 720: break;
 17261  002498  0012               	return	
 17262  00249A                     l3580:
 17263                           
 17264                           ;lab7.c: 723: inputType = "Keypad";
 17265  00249A  0E92               	movlw	low (STR_56+13)
 17266  00249C  6E43               	movwf	_inputType,c
 17267  00249E  0E7F               	movlw	high (STR_56+13)
 17268  0024A0  6E44               	movwf	_inputType+1,c
 17269                           
 17270                           ;lab7.c: 724: write_EEPROM(inputMethodAddress,'P');
 17271  0024A2  0E50               	movlw	80
 17272  0024A4  6EE6               	movwf	postinc1,c
 17273  0024A6  0E03               	movlw	3
 17274  0024A8  6EE6               	movwf	postinc1,c
 17275  0024AA  0E00               	movlw	0
 17276  0024AC  6EE6               	movwf	postinc1,c
 17277  0024AE  ECFD  F022         	call	_write_EEPROM	;wreg free
 17278                           
 17279                           ;lab7.c: 725: PORTBbits.RB4=1;
 17280  0024B2  8881               	bsf	3969,4,c	;volatile
 17281                           
 17282                           ;lab7.c: 726: status = 1;
 17283  0024B4  0E00               	movlw	0
 17284  0024B6  6E11               	movwf	_status+1,c
 17285  0024B8  0E01               	movlw	1
 17286  0024BA  6E10               	movwf	_status,c
 17287  0024BC  D7EA               	goto	l3576
 17288  0024BE                     l3592:
 17289                           
 17290                           ;lab7.c: 732: inputType = "Keyboard and Keypad";
 17291  0024BE  0E99               	movlw	low STR_80
 17292  0024C0  6E43               	movwf	_inputType,c
 17293  0024C2  0E7F               	movlw	high STR_80
 17294  0024C4  6E44               	movwf	_inputType+1,c
 17295                           
 17296                           ;lab7.c: 733: write_EEPROM(inputMethodAddress,'B');
 17297  0024C6  0E42               	movlw	66
 17298  0024C8  6EE6               	movwf	postinc1,c
 17299  0024CA  0E03               	movlw	3
 17300  0024CC  6EE6               	movwf	postinc1,c
 17301  0024CE  0E00               	movlw	0
 17302  0024D0  6EE6               	movwf	postinc1,c
 17303  0024D2  ECFD  F022         	call	_write_EEPROM	;wreg free
 17304                           
 17305                           ;lab7.c: 734: PORTBbits.RB4=1;
 17306  0024D6  8881               	bsf	3969,4,c	;volatile
 17307  0024D8  D7DA               	goto	l3574
 17308  0024DA                     l3604:
 17309                           
 17310                           ;lab7.c: 741: resetScreen();
 17311  0024DA  EC41  F023         	call	_resetScreen	;wreg free
 17312                           
 17313                           ;lab7.c: 742: mainMenu();
 17314  0024DE  DF41               	call	_mainMenu	;wreg free
 17315                           
 17316                           ;lab7.c: 743: break;
 17317  0024E0  0012               	return	
 17318  0024E2                     l3606:
 17319                           
 17320                           ;lab7.c: 746: printChar("\n\r");
 17321  0024E2  0EEC               	movlw	low (STR_17+36)
 17322  0024E4  6EE6               	movwf	postinc1,c
 17323  0024E6  0E7A               	movlw	high (STR_17+36)
 17324  0024E8  6EE6               	movwf	postinc1,c
 17325  0024EA  EC0B  F021         	call	_printChar	;wreg free
 17326                           
 17327                           ;lab7.c: 747: printChar("\n\r         Incorrect Input options selected!!!");
 17328  0024EE  0EBB               	movlw	low STR_82
 17329  0024F0  6EE6               	movwf	postinc1,c
 17330  0024F2  0E78               	movlw	high STR_82
 17331  0024F4  6EE6               	movwf	postinc1,c
 17332  0024F6  EC0B  F021         	call	_printChar	;wreg free
 17333                           
 17334                           ;lab7.c: 748: delay();
 17335  0024FA  ECE8  F022         	call	_delay	;wreg free
 17336  0024FE  D7C9               	goto	l3576
 17337  002500                     l3616:
 17338  002500  501D               	movf	_option,w,c
 17339                           
 17340                           ; Switch size 1, requested type "space"
 17341                           ; Number of cases is 7, Range of values is 48 to 54
 17342                           ; switch strategies available:
 17343                           ; Name         Instructions Cycles
 17344                           ; simple_byte           22    12 (average)
 17345                           ;	Chosen strategy is simple_byte
 17346  002502  0A30               	xorlw	48	; case 48
 17347  002504  B4D8               	btfsc	status,2,c
 17348  002506  D7E9               	goto	l3604
 17349  002508  0A01               	xorlw	1	; case 49
 17350  00250A  B4D8               	btfsc	status,2,c
 17351  00250C  D7AA               	goto	l3562
 17352  00250E  0A03               	xorlw	3	; case 50
 17353  002510  B4D8               	btfsc	status,2,c
 17354  002512  D7AA               	goto	l3564
 17355  002514  0A01               	xorlw	1	; case 51
 17356  002516  B4D8               	btfsc	status,2,c
 17357  002518  D7AA               	goto	l3566
 17358  00251A  0A07               	xorlw	7	; case 52
 17359  00251C  B4D8               	btfsc	status,2,c
 17360  00251E  D7AA               	goto	l3568
 17361  002520  0A01               	xorlw	1	; case 53
 17362  002522  B4D8               	btfsc	status,2,c
 17363  002524  D7BA               	goto	l3580
 17364  002526  0A03               	xorlw	3	; case 54
 17365  002528  B4D8               	btfsc	status,2,c
 17366  00252A  D7C9               	goto	l3592
 17367  00252C  D7DA               	goto	l3606
 17368  00252E                     __end_of_mainMenu:
 17369                           	opt stack 0
 17370                           tblptru	equ	0xFF8
 17371                           tblptrh	equ	0xFF7
 17372                           tblptrl	equ	0xFF6
 17373                           tablat	equ	0xFF5
 17374                           prodh	equ	0xFF4
 17375                           prodl	equ	0xFF3
 17376                           intcon	equ	0xFF2
 17377                           intcon2	equ	0xFF1
 17378                           indf0	equ	0xFEF
 17379                           postinc0	equ	0xFEE
 17380                           fsr0h	equ	0xFEA
 17381                           fsr0l	equ	0xFE9
 17382                           wreg	equ	0xFE8
 17383                           indf1	equ	0xFE7
 17384                           postinc1	equ	0xFE6
 17385                           postdec1	equ	0xFE5
 17386                           plusw1	equ	0xFE3
 17387                           fsr1h	equ	0xFE2
 17388                           fsr1l	equ	0xFE1
 17389                           indf2	equ	0xFDF
 17390                           postinc2	equ	0xFDE
 17391                           postdec2	equ	0xFDD
 17392                           fsr2h	equ	0xFDA
 17393                           fsr2l	equ	0xFD9
 17394                           status	equ	0xFD8
 17395                           
 17396 ;; *************** function _delay *****************
 17397 ;; Defined at:
 17398 ;;		line 1360 in file "lab7.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;		None
 17401 ;; Auto vars:     Size  Location     Type
 17402 ;;		None
 17403 ;; Return value:  Size  Location     Type
 17404 ;;                  1  [STACK] void 
 17405 ;; Registers used:
 17406 ;;		wreg, status,2, status,0, btemp
 17407 ;; Tracked objects:
 17408 ;;		On entry : 0/0
 17409 ;;		On exit  : 0/0
 17410 ;;		Unchanged: 0/0
 17411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17412 ;;      Params:         0       0       0       0       0       0       0
 17413 ;;      Locals:         0       0       0       0       0       0       0
 17414 ;;      Temps:          0       0       0       0       0       0       0
 17415 ;;      Totals:         0       0       0       0       0       0       0
 17416 ;;Total ram usage:        0 bytes
 17417 ;; Hardware stack levels used:    1
 17418 ;; Hardware stack levels required when called:   10
 17419 ;; This function calls:
 17420 ;;		Nothing
 17421 ;; This function is called by:
 17422 ;;		_My_ISR_High
 17423 ;;		_resetPIR
 17424 ;;		_My_ISR_Low
 17425 ;;		_getSingleInput
 17426 ;;		_login
 17427 ;;		_mainMenu
 17428 ;;		_passcodeMenu
 17429 ;;		_setPassword
 17430 ;;		_pirMenu
 17431 ;;		_temperatureMenu
 17432 ;;		_getTempThreshold
 17433 ;;		_getTempPassword
 17434 ;;		_getInput
 17435 ;; This function uses a reentrant model
 17436 ;;
 17437                           
 17438                           	psect	text50
 17439  0045D0                     __ptext50:
 17440                           	opt stack 0
 17441  0045D0                     _delay:
 17442                           	opt stack 1
 17443                           
 17444                           ;lab7.c: 1362: for(i=0; i<25;i++)
 17445                           
 17446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 17447                           ;incstack = 0
 17448  0045D0  6A0A               	clrf	_i,c
 17449  0045D2  6A0B               	clrf	_i+1,c
 17450  0045D4                     l2112:
 17451  0045D4  BE0B               	btfsc	_i+1,7,c
 17452  0045D6  D006               	goto	l2116
 17453  0045D8  500B               	movf	_i+1,w,c
 17454  0045DA  E10E               	bnz	l613
 17455  0045DC  0E19               	movlw	25
 17456  0045DE  5C0A               	subwf	_i,w,c
 17457  0045E0  B0D8               	btfsc	status,0,c
 17458  0045E2  0012               	return	
 17459  0045E4                     l2116:
 17460                           
 17461                           ;lab7.c: 1363: {
 17462                           ;lab7.c: 1364: _delay((unsigned long)((20)*(20000000/4000.0)));
 17463  0045E4  0E82               	movlw	130
 17464  0045E6  6E52               	movwf	btemp,c
 17465  0045E8  0EDE               	movlw	222
 17466  0045EA                     u3877:
 17467  0045EA  2EE8               	decfsz	wreg,f,c
 17468  0045EC  D7FE               	goto	u3877
 17469  0045EE  2E52               	decfsz	btemp,f,c
 17470  0045F0  D7FC               	goto	u3877
 17471  0045F2  4A0A               	infsnz	_i,f,c
 17472  0045F4  2A0B               	incf	_i+1,f,c
 17473  0045F6  D7EE               	goto	l2112
 17474  0045F8                     l613:
 17475                           
 17476                           ; _delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize
      +                           = 0, vargsize = 0
 17477  0045F8  0012               	return		;funcret
 17478  0045FA                     __end_of_delay:
 17479                           	opt stack 0
 17480                           tblptru	equ	0xFF8
 17481                           tblptrh	equ	0xFF7
 17482                           tblptrl	equ	0xFF6
 17483                           tablat	equ	0xFF5
 17484                           prodh	equ	0xFF4
 17485                           prodl	equ	0xFF3
 17486                           intcon	equ	0xFF2
 17487                           intcon2	equ	0xFF1
 17488                           indf0	equ	0xFEF
 17489                           postinc0	equ	0xFEE
 17490                           fsr0h	equ	0xFEA
 17491                           fsr0l	equ	0xFE9
 17492                           wreg	equ	0xFE8
 17493                           indf1	equ	0xFE7
 17494                           postinc1	equ	0xFE6
 17495                           postdec1	equ	0xFE5
 17496                           plusw1	equ	0xFE3
 17497                           fsr1h	equ	0xFE2
 17498                           fsr1l	equ	0xFE1
 17499                           indf2	equ	0xFDF
 17500                           postinc2	equ	0xFDE
 17501                           postdec2	equ	0xFDD
 17502                           fsr2h	equ	0xFDA
 17503                           fsr2l	equ	0xFD9
 17504                           status	equ	0xFD8
 17505                           
 17506 ;; *************** function _My_ISR_Low *****************
 17507 ;; Defined at:
 17508 ;;		line 335 in file "lab7.c"
 17509 ;; Parameters:    Size  Location     Type
 17510 ;;		None
 17511 ;; Auto vars:     Size  Location     Type
 17512 ;;		None
 17513 ;; Return value:  Size  Location     Type
 17514 ;;                  1    wreg      void 
 17515 ;; Registers used:
 17516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17517 ;; Tracked objects:
 17518 ;;		On entry : 0/0
 17519 ;;		On exit  : 0/0
 17520 ;;		Unchanged: 0/0
 17521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17522 ;;      Params:         0       0       0       0       0       0       0
 17523 ;;      Locals:         0       0       0       0       0       0       0
 17524 ;;      Temps:          0      24       0       0       0       0       0
 17525 ;;      Totals:         0      24       0       0       0       0       0
 17526 ;;Total ram usage:       24 bytes
 17527 ;; Hardware stack levels used:    1
 17528 ;; Hardware stack levels required when called:    9
 17529 ;; This function calls:
 17530 ;;		___awtoft
 17531 ;;		___ftge
 17532 ;;		_checkPassword
 17533 ;;		_delay
 17534 ;;		_getSingleInput
 17535 ;;		_getTempPassword
 17536 ;;		_getTempThreshold
 17537 ;;		_getTemperature
 17538 ;;		_keypadOnly
 17539 ;;		_mainScreen
 17540 ;;		_printChar
 17541 ;;		_reception
 17542 ;;		_write_EEPROM
 17543 ;; This function is called by:
 17544 ;;		Interrupt level 1
 17545 ;; This function uses a non-reentrant model
 17546 ;;
 17547                           
 17548                           	psect	intcodelo
 17549  000018                     __pintcodelo:
 17550                           	opt stack 0
 17551  000018                     _My_ISR_Low:
 17552                           	opt stack 11
 17553                           
 17554                           ;incstack = 0
 17555  000018  CFD8 F081          	movff	status,??_My_ISR_Low+1
 17556  00001C  CFE8 F082          	movff	wreg,??_My_ISR_Low+2
 17557  000020  CFE0 F083          	movff	bsr,??_My_ISR_Low+3
 17558  000024  CFE9 F084          	movff	fsr0l,??_My_ISR_Low+4
 17559  000028  CFEA F085          	movff	fsr0h,??_My_ISR_Low+5
 17560  00002C  CFE1 F086          	movff	fsr1l,??_My_ISR_Low+6
 17561  000030  CFE2 F087          	movff	fsr1h,??_My_ISR_Low+7
 17562  000034  CFD9 F088          	movff	fsr2l,??_My_ISR_Low+8
 17563  000038  CFDA F089          	movff	fsr2h,??_My_ISR_Low+9
 17564  00003C  CFF3 F08A          	movff	prodl,??_My_ISR_Low+10
 17565  000040  CFF4 F08B          	movff	prodh,??_My_ISR_Low+11
 17566  000044  CFF6 F08C          	movff	tblptrl,??_My_ISR_Low+12
 17567  000048  CFF7 F08D          	movff	tblptrh,??_My_ISR_Low+13
 17568  00004C  CFF8 F08E          	movff	tblptru,??_My_ISR_Low+14
 17569  000050  CFF5 F08F          	movff	tablat,??_My_ISR_Low+15
 17570  000054  C052  F090         	movff	btemp,??_My_ISR_Low+16
 17571  000058  C053  F091         	movff	btemp+1,??_My_ISR_Low+17
 17572  00005C  C054  F092         	movff	btemp+2,??_My_ISR_Low+18
 17573  000060  C055  F093         	movff	btemp+3,??_My_ISR_Low+19
 17574  000064  C056  F094         	movff	btemp+4,??_My_ISR_Low+20
 17575  000068  C057  F095         	movff	btemp+5,??_My_ISR_Low+21
 17576  00006C  C058  F096         	movff	btemp+6,??_My_ISR_Low+22
 17577  000070  C059  F097         	movff	btemp+7,??_My_ISR_Low+23
 17578  000074  EE14  F033         	lfsr	1,___intlo_sp
 17579                           
 17580                           ;lab7.c: 338: if(INTCONbits.TMR0IF == 1)
 17581  000078  A4F2               	btfss	intcon,2,c	;volatile
 17582  00007A  D009               	goto	i1l4236
 17583                           
 17584                           ;lab7.c: 339: {
 17585                           ;lab7.c: 340: T0CONbits.TMR0ON = 0;
 17586  00007C  9ED5               	bcf	4053,7,c	;volatile
 17587                           
 17588                           ;lab7.c: 341: getTemperature();
 17589  00007E  EC37  F015         	call	_getTemperature	;wreg free
 17590                           
 17591                           ;lab7.c: 342: INTCONbits.TMR0IF=0;
 17592  000082  94F2               	bcf	intcon,2,c	;volatile
 17593                           
 17594                           ;lab7.c: 343: TMR0H = 0x67;
 17595  000084  0E67               	movlw	103
 17596  000086  6ED7               	movwf	4055,c	;volatile
 17597                           
 17598                           ;lab7.c: 344: TMR0L = 0x6A;
 17599  000088  0E6A               	movlw	106
 17600  00008A  6ED6               	movwf	4054,c	;volatile
 17601                           
 17602                           ;lab7.c: 345: T0CONbits.TMR0ON = 1;
 17603  00008C  8ED5               	bsf	4053,7,c	;volatile
 17604  00008E                     i1l4236:
 17605                           
 17606                           ;lab7.c: 346: }
 17607                           ;lab7.c: 348: if(PIR1bits.ADIF == 1)
 17608  00008E  AC9E               	btfss	3998,6,c	;volatile
 17609  000090  D14B               	goto	i1l293
 17610                           
 17611                           ;lab7.c: 349: {
 17612                           ;lab7.c: 352: getTemperature();
 17613  000092  EC37  F015         	call	_getTemperature	;wreg free
 17614                           
 17615                           ;lab7.c: 353: if(temperature>thresholdTemp){
 17616  000096  C001  FFE6         	movff	_temperature,postinc1
 17617  00009A  C002  FFE6         	movff	_temperature+1,postinc1
 17618  00009E  C003  FFE6         	movff	_temperature+2,postinc1
 17619  0000A2  C04D  F036         	movff	_thresholdTemp,___awtoft@c
 17620  0000A6  C04E  F037         	movff	_thresholdTemp+1,___awtoft@c+1
 17621  0000AA  EC3B  F022         	call	___awtoft	;wreg free
 17622  0000AE  C036  FFE6         	movff	?___awtoft,postinc1
 17623  0000B2  C037  FFE6         	movff	?___awtoft+1,postinc1
 17624  0000B6  C038  FFE6         	movff	?___awtoft+2,postinc1
 17625  0000BA  EC10  F01F         	call	___ftge	;wreg free
 17626  0000BE  B052               	btfsc	btemp,0,c
 17627  0000C0  D125               	goto	i1l263
 17628                           
 17629                           ;lab7.c: 354: PORTBbits.RB5 =1;
 17630  0000C2  8A81               	bsf	3969,5,c	;volatile
 17631                           
 17632                           ;lab7.c: 355: T0CONbits.TMR0ON =0;
 17633  0000C4  9ED5               	bcf	4053,7,c	;volatile
 17634                           
 17635                           ;lab7.c: 356: mainScreen();
 17636  0000C6  EC48  F020         	call	_mainScreen	;wreg free
 17637                           
 17638                           ;lab7.c: 357: printChar("\n\r!!!!!!!!!!!!! Temperature SENSOR HAS DETECTED !!!!!!!!!!!!!
      +                          !");
 17639  0000CA  0E91               	movlw	low STR_21
 17640  0000CC  6EE6               	movwf	postinc1,c
 17641  0000CE  0E74               	movlw	high STR_21
 17642  0000D0  6EE6               	movwf	postinc1,c
 17643  0000D2  EC0B  F021         	call	_printChar	;wreg free
 17644                           
 17645                           ;lab7.c: 358: printChar("\n\r");
 17646  0000D6  0EEC               	movlw	low (STR_17+36)
 17647  0000D8  6EE6               	movwf	postinc1,c
 17648  0000DA  0E7A               	movlw	high (STR_17+36)
 17649  0000DC  6EE6               	movwf	postinc1,c
 17650  0000DE  EC0B  F021         	call	_printChar	;wreg free
 17651                           
 17652                           ;lab7.c: 359: printChar("\n\r");
 17653  0000E2  0EEC               	movlw	low (STR_17+36)
 17654  0000E4  6EE6               	movwf	postinc1,c
 17655  0000E6  0E7A               	movlw	high (STR_17+36)
 17656  0000E8  6EE6               	movwf	postinc1,c
 17657  0000EA  EC0B  F021         	call	_printChar	;wreg free
 17658                           
 17659                           ;lab7.c: 360: printChar("\n\rEnter the passcode to reset the alarm and return to main me
      +                          nu.");
 17660  0000EE  0ED0               	movlw	low STR_24
 17661  0000F0  6EE6               	movwf	postinc1,c
 17662  0000F2  0E73               	movlw	high STR_24
 17663  0000F4  6EE6               	movwf	postinc1,c
 17664  0000F6  EC0B  F021         	call	_printChar	;wreg free
 17665                           
 17666                           ;lab7.c: 361: printChar("\n\r");
 17667  0000FA  0EEC               	movlw	low (STR_17+36)
 17668  0000FC  6EE6               	movwf	postinc1,c
 17669  0000FE  0E7A               	movlw	high (STR_17+36)
 17670  000100  6EE6               	movwf	postinc1,c
 17671  000102  EC0B  F021         	call	_printChar	;wreg free
 17672                           
 17673                           ;lab7.c: 362: printChar("\n\rInput Here: ");
 17674  000106  0E2D               	movlw	low (STR_42+21)
 17675  000108  6EE6               	movwf	postinc1,c
 17676  00010A  0E7C               	movlw	high (STR_42+21)
 17677  00010C  6EE6               	movwf	postinc1,c
 17678  00010E  EC0B  F021         	call	_printChar	;wreg free
 17679                           
 17680                           ;lab7.c: 363: delay();
 17681  000112  ECE8  F022         	call	_delay	;wreg free
 17682                           
 17683                           ;lab7.c: 364: tempPass = getTempPassword();
 17684  000116  EC8E  F01B         	call	_getTempPassword	;wreg free
 17685  00011A  C052  F016         	movff	btemp,_tempPass
 17686  00011E  C053  F017         	movff	btemp+1,_tempPass+1
 17687                           
 17688                           ;lab7.c: 365: checkPassword();
 17689  000122  EC84  F021         	call	_checkPassword	;wreg free
 17690                           
 17691                           ;lab7.c: 367: while(valid != 4)
 17692  000126  D016               	goto	i1l4272
 17693  000128                     i1l4264:
 17694                           
 17695                           ;lab7.c: 368: {
 17696                           ;lab7.c: 369: printChar("\n\r Invalid Passcode.. Try Again!!");
 17697  000128  0EEC               	movlw	low STR_27
 17698  00012A  6EE6               	movwf	postinc1,c
 17699  00012C  0E7C               	movlw	high STR_27
 17700  00012E  6EE6               	movwf	postinc1,c
 17701  000130  EC0B  F021         	call	_printChar	;wreg free
 17702                           
 17703                           ;lab7.c: 370: printChar("\n\rEnter passcode: ");
 17704  000134  0EC1               	movlw	low STR_28
 17705  000136  6EE6               	movwf	postinc1,c
 17706  000138  0E7F               	movlw	high STR_28
 17707  00013A  6EE6               	movwf	postinc1,c
 17708  00013C  EC0B  F021         	call	_printChar	;wreg free
 17709                           
 17710                           ;lab7.c: 371: delay();
 17711  000140  ECE8  F022         	call	_delay	;wreg free
 17712                           
 17713                           ;lab7.c: 372: tempPass = getTempPassword();
 17714  000144  EC8E  F01B         	call	_getTempPassword	;wreg free
 17715  000148  C052  F016         	movff	btemp,_tempPass
 17716  00014C  C053  F017         	movff	btemp+1,_tempPass+1
 17717                           
 17718                           ;lab7.c: 373: checkPassword();
 17719  000150  EC84  F021         	call	_checkPassword	;wreg free
 17720  000154                     i1l4272:
 17721  000154  0E04               	movlw	4
 17722  000156  181A               	xorwf	_valid,w,c
 17723  000158  101B               	iorwf	_valid+1,w,c
 17724  00015A  A4D8               	btfss	status,2,c
 17725  00015C  D7E5               	goto	i1l4264
 17726                           
 17727                           ;lab7.c: 374: }
 17728                           ;lab7.c: 376: if(valid == 4){
 17729  00015E  0E04               	movlw	4
 17730  000160  181A               	xorwf	_valid,w,c
 17731  000162  101B               	iorwf	_valid+1,w,c
 17732  000164  A4D8               	btfss	status,2,c
 17733  000166  D0DF               	goto	i1l4368
 17734                           
 17735                           ;lab7.c: 377: printChar("\n\rDo you want to disable the alarm or keep enabled?");
 17736  000168  0E24               	movlw	low STR_29
 17737  00016A  6EE6               	movwf	postinc1,c
 17738  00016C  0E78               	movlw	high STR_29
 17739  00016E  6EE6               	movwf	postinc1,c
 17740  000170  EC0B  F021         	call	_printChar	;wreg free
 17741                           
 17742                           ;lab7.c: 378: printChar("\n\rKeep Enabled = 1    |    Disable = 0");
 17743  000174  0E16               	movlw	low STR_30
 17744  000176  6EE6               	movwf	postinc1,c
 17745  000178  0E7B               	movlw	high STR_30
 17746  00017A  6EE6               	movwf	postinc1,c
 17747  00017C  EC0B  F021         	call	_printChar	;wreg free
 17748                           
 17749                           ;lab7.c: 379: printChar("\n\rInput Here: ");
 17750  000180  0E2D               	movlw	low (STR_42+21)
 17751  000182  6EE6               	movwf	postinc1,c
 17752  000184  0E7C               	movlw	high (STR_42+21)
 17753  000186  6EE6               	movwf	postinc1,c
 17754  000188  EC0B  F021         	call	_printChar	;wreg free
 17755                           
 17756                           ;lab7.c: 380: delay();
 17757  00018C  ECE8  F022         	call	_delay	;wreg free
 17758                           
 17759                           ;lab7.c: 381: getSingleInput();
 17760  000190  EC17  F022         	call	_getSingleInput	;wreg free
 17761                           
 17762                           ;lab7.c: 382: switch(option)
 17763  000194  D046               	goto	i1l4318
 17764  000196                     i1l4282:
 17765                           
 17766                           ;lab7.c: 385: tempState = "ACTIVE";
 17767  000196  0EE0               	movlw	low (STR_1+2)
 17768  000198  6E47               	movwf	_tempState,c
 17769  00019A  0E7F               	movlw	high (STR_1+2)
 17770  00019C  6E48               	movwf	_tempState+1,c
 17771                           
 17772                           ;lab7.c: 386: write_EEPROM(tempStatusAddress, 'E');
 17773  00019E  0E45               	movlw	69
 17774  0001A0  6EE6               	movwf	postinc1,c
 17775  0001A2  C049  FFE6         	movff	_tempStatusAddress,postinc1
 17776  0001A6  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
 17777  0001AA  ECFD  F022         	call	_write_EEPROM	;wreg free
 17778                           
 17779                           ;lab7.c: 387: T0CONbits.TMR0ON = 1;
 17780  0001AE  8ED5               	bsf	4053,7,c	;volatile
 17781                           
 17782                           ;lab7.c: 388: PORTBbits.RB5 =0;
 17783  0001B0  9A81               	bcf	3969,5,c	;volatile
 17784                           
 17785                           ;lab7.c: 389: printChar("\n\rTemperature Sensor has been kept enabled.");
 17786  0001B2  0E9F               	movlw	low STR_33
 17787  0001B4  6EE6               	movwf	postinc1,c
 17788  0001B6  0E79               	movlw	high STR_33
 17789  0001B8  6EE6               	movwf	postinc1,c
 17790  0001BA  EC0B  F021         	call	_printChar	;wreg free
 17791                           
 17792                           ;lab7.c: 390: break;
 17793  0001BE  D039               	goto	i1l4320
 17794  0001C0                     i1l4292:
 17795                           
 17796                           ;lab7.c: 393: tempState = "INACTIVE";
 17797  0001C0  0EDE               	movlw	low STR_1
 17798  0001C2  6E47               	movwf	_tempState,c
 17799  0001C4  0E7F               	movlw	high STR_1
 17800  0001C6  6E48               	movwf	_tempState+1,c
 17801                           
 17802                           ;lab7.c: 394: write_EEPROM(tempStatusAddress, 'D');
 17803  0001C8  0E44               	movlw	68
 17804  0001CA  6EE6               	movwf	postinc1,c
 17805  0001CC  C049  FFE6         	movff	_tempStatusAddress,postinc1
 17806  0001D0  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
 17807  0001D4  ECFD  F022         	call	_write_EEPROM	;wreg free
 17808                           
 17809                           ;lab7.c: 395: T0CONbits.TMR0ON = 0;
 17810  0001D8  9ED5               	bcf	4053,7,c	;volatile
 17811                           
 17812                           ;lab7.c: 396: PIE1bits.ADIE = 0;
 17813  0001DA  9C9D               	bcf	3997,6,c	;volatile
 17814                           
 17815                           ;lab7.c: 397: PORTBbits.RB5 =0;
 17816  0001DC  9A81               	bcf	3969,5,c	;volatile
 17817                           
 17818                           ;lab7.c: 398: printChar("\n\rTemperature Sensor has been disabled.");
 17819  0001DE  0EA0               	movlw	low STR_35
 17820  0001E0  6EE6               	movwf	postinc1,c
 17821  0001E2  0E7A               	movlw	high STR_35
 17822  0001E4  6EE6               	movwf	postinc1,c
 17823  0001E6  EC0B  F021         	call	_printChar	;wreg free
 17824                           
 17825                           ;lab7.c: 399: break;
 17826  0001EA  D023               	goto	i1l4320
 17827  0001EC                     i1l4304:
 17828                           
 17829                           ;lab7.c: 402: printChar("\n\rNo Selection has been made..");
 17830  0001EC  0E8D               	movlw	low STR_36
 17831  0001EE  6EE6               	movwf	postinc1,c
 17832  0001F0  0E7D               	movlw	high STR_36
 17833  0001F2  6EE6               	movwf	postinc1,c
 17834  0001F4  EC0B  F021         	call	_printChar	;wreg free
 17835                           
 17836                           ;lab7.c: 403: tempState = "ACTIVE";
 17837  0001F8  0EE0               	movlw	low (STR_1+2)
 17838  0001FA  6E47               	movwf	_tempState,c
 17839  0001FC  0E7F               	movlw	high (STR_1+2)
 17840  0001FE  6E48               	movwf	_tempState+1,c
 17841                           
 17842                           ;lab7.c: 404: write_EEPROM(tempStatusAddress, 'E');
 17843  000200  0E45               	movlw	69
 17844  000202  6EE6               	movwf	postinc1,c
 17845  000204  C049  FFE6         	movff	_tempStatusAddress,postinc1
 17846  000208  C04A  FFE6         	movff	_tempStatusAddress+1,postinc1
 17847  00020C  ECFD  F022         	call	_write_EEPROM	;wreg free
 17848                           
 17849                           ;lab7.c: 405: T0CONbits.TMR0ON = 1;
 17850  000210  8ED5               	bsf	4053,7,c	;volatile
 17851                           
 17852                           ;lab7.c: 406: PORTBbits.RB5 =0;
 17853  000212  9A81               	bcf	3969,5,c	;volatile
 17854                           
 17855                           ;lab7.c: 407: printChar("\n\rTemperature Sensor has been kept enabled.");
 17856  000214  0E9F               	movlw	low STR_33
 17857  000216  6EE6               	movwf	postinc1,c
 17858  000218  0E79               	movlw	high STR_33
 17859  00021A  6EE6               	movwf	postinc1,c
 17860  00021C  EC0B  F021         	call	_printChar	;wreg free
 17861                           
 17862                           ;lab7.c: 409: }
 17863                           
 17864                           ;lab7.c: 408: break;
 17865  000220  D008               	goto	i1l4320
 17866  000222                     i1l4318:
 17867  000222  501D               	movf	_option,w,c
 17868                           
 17869                           ; Switch size 1, requested type "space"
 17870                           ; Number of cases is 2, Range of values is 48 to 49
 17871                           ; switch strategies available:
 17872                           ; Name         Instructions Cycles
 17873                           ; simple_byte            7     4 (average)
 17874                           ;	Chosen strategy is simple_byte
 17875  000224  0A30               	xorlw	48	; case 48
 17876  000226  B4D8               	btfsc	status,2,c
 17877  000228  D7CB               	goto	i1l4292
 17878  00022A  0A01               	xorlw	1	; case 49
 17879  00022C  B4D8               	btfsc	status,2,c
 17880  00022E  D7B3               	goto	i1l4282
 17881  000230  D7DD               	goto	i1l4304
 17882  000232                     i1l4320:
 17883                           
 17884                           ;lab7.c: 411: delay();
 17885  000232  ECE8  F022         	call	_delay	;wreg free
 17886                           
 17887                           ;lab7.c: 412: printChar("\n\r");
 17888  000236  0EEC               	movlw	low (STR_17+36)
 17889  000238  6EE6               	movwf	postinc1,c
 17890  00023A  0E7A               	movlw	high (STR_17+36)
 17891  00023C  6EE6               	movwf	postinc1,c
 17892  00023E  EC0B  F021         	call	_printChar	;wreg free
 17893                           
 17894                           ;lab7.c: 413: printChar("\n\rDo you want to change the Temperature Threshold.");
 17895  000242  0E58               	movlw	low STR_40
 17896  000244  6EE6               	movwf	postinc1,c
 17897  000246  0E78               	movlw	high STR_40
 17898  000248  6EE6               	movwf	postinc1,c
 17899  00024A  EC0B  F021         	call	_printChar	;wreg free
 17900                           
 17901                           ;lab7.c: 414: printChar("\n\r");
 17902  00024E  0EEC               	movlw	low (STR_17+36)
 17903  000250  6EE6               	movwf	postinc1,c
 17904  000252  0E7A               	movlw	high (STR_17+36)
 17905  000254  6EE6               	movwf	postinc1,c
 17906  000256  EC0B  F021         	call	_printChar	;wreg free
 17907                           
 17908                           ;lab7.c: 415: printChar("\n\rYes = 1  |   No = 0\n\rInput Here: ");
 17909  00025A  0E18               	movlw	low STR_42
 17910  00025C  6EE6               	movwf	postinc1,c
 17911  00025E  0E7C               	movlw	high STR_42
 17912  000260  6EE6               	movwf	postinc1,c
 17913  000262  EC0B  F021         	call	_printChar	;wreg free
 17914                           
 17915                           ;lab7.c: 416: delay();
 17916  000266  ECE8  F022         	call	_delay	;wreg free
 17917                           
 17918                           ;lab7.c: 418: if(status==1 && PORTBbits.RB4 == 1)
 17919  00026A  0410               	decf	_status,w,c
 17920  00026C  1011               	iorwf	_status+1,w,c
 17921  00026E  B4D8               	btfsc	status,2,c
 17922  000270  A881               	btfss	3969,4,c	;volatile
 17923  000272  D012               	goto	i1l4342
 17924                           
 17925                           ;lab7.c: 419: {
 17926                           ;lab7.c: 420: keypadOnly();
 17927  000274  EC66  F01F         	call	_keypadOnly	;wreg free
 17928  000278                     i1l274:
 17929  000278  A2AC               	btfss	4012,1,c	;volatile
 17930  00027A  D7FE               	goto	i1l274
 17931                           
 17932                           ;lab7.c: 422: TXREG = keypadValue;
 17933  00027C  C01C  FFAD         	movff	_keypadValue,4013	;volatile
 17934                           
 17935                           ;lab7.c: 423: option = keypadValue;
 17936  000280  C01C  F01D         	movff	_keypadValue,_option
 17937                           
 17938                           ;lab7.c: 424: delay();
 17939  000284  ECE8  F022         	call	_delay	;wreg free
 17940                           
 17941                           ;lab7.c: 425: while(keypadValue != 'D'){
 17942  000288  D002               	goto	i1l4340
 17943  00028A                     i1l4338:
 17944                           
 17945                           ;lab7.c: 426: keypadOnly();
 17946  00028A  EC66  F01F         	call	_keypadOnly	;wreg free
 17947  00028E                     i1l4340:
 17948  00028E  0E44               	movlw	68
 17949  000290  181C               	xorwf	_keypadValue,w,c
 17950  000292  B4D8               	btfsc	status,2,c
 17951  000294  D033               	goto	i1l4364
 17952  000296  D7F9               	goto	i1l4338
 17953  000298                     i1l4342:
 17954                           
 17955                           ;lab7.c: 429: else
 17956                           ;lab7.c: 430: {
 17957                           ;lab7.c: 431: option = reception();
 17958  000298  EC2B  F023         	call	_reception	;wreg free
 17959  00029C  5052               	movf	btemp,w,c
 17960  00029E  6E1D               	movwf	_option,c
 17961  0002A0                     i1l281:
 17962  0002A0  A2AC               	btfss	4012,1,c	;volatile
 17963  0002A2  D7FE               	goto	i1l281
 17964                           
 17965                           ;lab7.c: 433: TXREG = option;
 17966  0002A4  C01D  FFAD         	movff	_option,4013	;volatile
 17967  0002A8                     i1l4344:
 17968  0002A8  0E0D               	movlw	13
 17969  0002AA  18AE               	xorwf	4014,w,c	;volatile
 17970  0002AC  B4D8               	btfsc	status,2,c
 17971  0002AE  D026               	goto	i1l4364
 17972  0002B0  D7FB               	goto	i1l4344
 17973  0002B2                     i1l4346:
 17974                           
 17975                           ;lab7.c: 440: getTempThreshold();
 17976  0002B2  EC0A  F019         	call	_getTempThreshold	;wreg free
 17977                           
 17978                           ;lab7.c: 441: printChar("\n\rPlease press '0' and 'Enter' to continue: ");
 17979  0002B6  0E19               	movlw	low STR_9
 17980  0002B8  6EE6               	movwf	postinc1,c
 17981  0002BA  0E79               	movlw	high STR_9
 17982  0002BC  6EE6               	movwf	postinc1,c
 17983  0002BE  EC0B  F021         	call	_printChar	;wreg free
 17984                           
 17985                           ;lab7.c: 442: delay();
 17986  0002C2  ECE8  F022         	call	_delay	;wreg free
 17987                           
 17988                           ;lab7.c: 443: break;
 17989  0002C6  D02F               	goto	i1l4368
 17990  0002C8                     i1l4352:
 17991                           
 17992                           ;lab7.c: 446: printChar("\n\rPlease press '0' and 'Enter' to continue: ");
 17993  0002C8  0E19               	movlw	low STR_9
 17994  0002CA  6EE6               	movwf	postinc1,c
 17995  0002CC  0E79               	movlw	high STR_9
 17996  0002CE  6EE6               	movwf	postinc1,c
 17997  0002D0  EC0B  F021         	call	_printChar	;wreg free
 17998                           
 17999                           ;lab7.c: 447: delay();
 18000  0002D4  ECE8  F022         	call	_delay	;wreg free
 18001                           
 18002                           ;lab7.c: 448: break;
 18003  0002D8  D026               	goto	i1l4368
 18004  0002DA                     i1l4356:
 18005                           
 18006                           ;lab7.c: 451: printChar("\n\rNo selection made.");
 18007  0002DA  0E5B               	movlw	low STR_45
 18008  0002DC  6EE6               	movwf	postinc1,c
 18009  0002DE  0E7F               	movlw	high STR_45
 18010  0002E0  6EE6               	movwf	postinc1,c
 18011  0002E2  EC0B  F021         	call	_printChar	;wreg free
 18012                           
 18013                           ;lab7.c: 452: delay();
 18014  0002E6  ECE8  F022         	call	_delay	;wreg free
 18015                           
 18016                           ;lab7.c: 453: printChar("\n\rPlease press '0' and 'Enter' to continue: ");
 18017  0002EA  0E19               	movlw	low STR_9
 18018  0002EC  6EE6               	movwf	postinc1,c
 18019  0002EE  0E79               	movlw	high STR_9
 18020  0002F0  6EE6               	movwf	postinc1,c
 18021  0002F2  EC0B  F021         	call	_printChar	;wreg free
 18022                           
 18023                           ;lab7.c: 454: delay();
 18024  0002F6  ECE8  F022         	call	_delay	;wreg free
 18025                           
 18026                           ;lab7.c: 456: }
 18027                           
 18028                           ;lab7.c: 455: break;
 18029  0002FA  D015               	goto	i1l4368
 18030  0002FC                     i1l4364:
 18031  0002FC  501D               	movf	_option,w,c
 18032                           
 18033                           ; Switch size 1, requested type "space"
 18034                           ; Number of cases is 2, Range of values is 48 to 49
 18035                           ; switch strategies available:
 18036                           ; Name         Instructions Cycles
 18037                           ; simple_byte            7     4 (average)
 18038                           ;	Chosen strategy is simple_byte
 18039  0002FE  0A30               	xorlw	48	; case 48
 18040  000300  B4D8               	btfsc	status,2,c
 18041  000302  D7E2               	goto	i1l4352
 18042  000304  0A01               	xorlw	1	; case 49
 18043  000306  B4D8               	btfsc	status,2,c
 18044  000308  D7D4               	goto	i1l4346
 18045  00030A  D7E7               	goto	i1l4356
 18046  00030C                     i1l263:
 18047                           
 18048                           ;lab7.c: 462: PORTBbits.RB5 =PORTBbits.RB5^1;
 18049  00030C  BA81               	btfsc	3969,5,c	;volatile
 18050  00030E  D002               	goto	i1u385_20
 18051  000310  8A81               	bsf	3969,5,c	;volatile
 18052  000312  D001               	goto	i1l4366
 18053  000314                     i1u385_20:
 18054  000314  9A81               	bcf	3969,5,c	;volatile
 18055  000316                     i1l4366:
 18056                           
 18057                           ;lab7.c: 463: _delay((unsigned long)((20)*(20000000/4000.0)));
 18058  000316  0E82               	movlw	130
 18059  000318  0100               	movlb	0	; () banked
 18060  00031A  6F80               	movwf	??_My_ISR_Low& (0+255),b
 18061  00031C  0EDE               	movlw	222
 18062  00031E                     i1u388_27:
 18063  00031E  2EE8               	decfsz	wreg,f,c
 18064  000320  D7FE               	goto	i1u388_27
 18065  000322  2F80               	decfsz	??_My_ISR_Low& (0+255),f,b
 18066  000324  D7FC               	goto	i1u388_27
 18067  000326                     i1l4368:
 18068                           
 18069                           ;lab7.c: 469: }
 18070                           ;lab7.c: 471: PIR1bits.ADIF = 0;
 18071  000326  9C9E               	bcf	3998,6,c	;volatile
 18072  000328                     i1l293:
 18073  000328  C097  F059         	movff	??_My_ISR_Low+23,btemp+7
 18074  00032C  C096  F058         	movff	??_My_ISR_Low+22,btemp+6
 18075  000330  C095  F057         	movff	??_My_ISR_Low+21,btemp+5
 18076  000334  C094  F056         	movff	??_My_ISR_Low+20,btemp+4
 18077  000338  C093  F055         	movff	??_My_ISR_Low+19,btemp+3
 18078  00033C  C092  F054         	movff	??_My_ISR_Low+18,btemp+2
 18079  000340  C091  F053         	movff	??_My_ISR_Low+17,btemp+1
 18080  000344  C090  F052         	movff	??_My_ISR_Low+16,btemp
 18081  000348  C08F  FFF5         	movff	??_My_ISR_Low+15,tablat
 18082  00034C  C08E  FFF8         	movff	??_My_ISR_Low+14,tblptru
 18083  000350  C08D  FFF7         	movff	??_My_ISR_Low+13,tblptrh
 18084  000354  C08C  FFF6         	movff	??_My_ISR_Low+12,tblptrl
 18085  000358  C08B  FFF4         	movff	??_My_ISR_Low+11,prodh
 18086  00035C  C08A  FFF3         	movff	??_My_ISR_Low+10,prodl
 18087  000360  C089  FFDA         	movff	??_My_ISR_Low+9,fsr2h
 18088  000364  C088  FFD9         	movff	??_My_ISR_Low+8,fsr2l
 18089  000368  C087  FFE2         	movff	??_My_ISR_Low+7,fsr1h
 18090  00036C  C086  FFE1         	movff	??_My_ISR_Low+6,fsr1l
 18091  000370  C085  FFEA         	movff	??_My_ISR_Low+5,fsr0h
 18092  000374  C084  FFE9         	movff	??_My_ISR_Low+4,fsr0l
 18093  000378  C083  FFE0         	movff	??_My_ISR_Low+3,bsr
 18094  00037C  C082  FFE8         	movff	??_My_ISR_Low+2,wreg
 18095  000380  C081  FFD8         	movff	??_My_ISR_Low+1,status
 18096  000384  0010               	retfie	
 18097  000386                     __end_of_My_ISR_Low:
 18098                           	opt stack 0
 18099                           tblptru	equ	0xFF8
 18100                           tblptrh	equ	0xFF7
 18101                           tblptrl	equ	0xFF6
 18102                           tablat	equ	0xFF5
 18103                           prodh	equ	0xFF4
 18104                           prodl	equ	0xFF3
 18105                           intcon	equ	0xFF2
 18106                           intcon2	equ	0xFF1
 18107                           indf0	equ	0xFEF
 18108                           postinc0	equ	0xFEE
 18109                           fsr0h	equ	0xFEA
 18110                           fsr0l	equ	0xFE9
 18111                           wreg	equ	0xFE8
 18112                           indf1	equ	0xFE7
 18113                           postinc1	equ	0xFE6
 18114                           postdec1	equ	0xFE5
 18115                           plusw1	equ	0xFE3
 18116                           fsr1h	equ	0xFE2
 18117                           fsr1l	equ	0xFE1
 18118                           bsr	equ	0xFE0
 18119                           indf2	equ	0xFDF
 18120                           postinc2	equ	0xFDE
 18121                           postdec2	equ	0xFDD
 18122                           fsr2h	equ	0xFDA
 18123                           fsr2l	equ	0xFD9
 18124                           status	equ	0xFD8
 18125                           
 18126 ;; *************** function _getSingleInput *****************
 18127 ;; Defined at:
 18128 ;;		line 482 in file "lab7.c"
 18129 ;; Parameters:    Size  Location     Type
 18130 ;;		None
 18131 ;; Auto vars:     Size  Location     Type
 18132 ;;		None
 18133 ;; Return value:  Size  Location     Type
 18134 ;;                  1    wreg      void 
 18135 ;; Registers used:
 18136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18142 ;;      Params:         0       0       0       0       0       0       0
 18143 ;;      Locals:         0       0       0       0       0       0       0
 18144 ;;      Temps:          0       0       0       0       0       0       0
 18145 ;;      Totals:         0       0       0       0       0       0       0
 18146 ;;Total ram usage:        0 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:    5
 18149 ;; This function calls:
 18150 ;;		_delay
 18151 ;;		_keypadOnly
 18152 ;;		_reception
 18153 ;; This function is called by:
 18154 ;;		_My_ISR_Low
 18155 ;; This function uses a non-reentrant model
 18156 ;;
 18157                           
 18158                           	psect	text52
 18159  00442E                     __ptext52:
 18160                           	opt stack 0
 18161  00442E                     _getSingleInput:
 18162                           	opt stack 14
 18163                           
 18164                           ;lab7.c: 485: if(status==1 && PORTBbits.RB4 == 1)
 18165                           
 18166                           ;incstack = 0
 18167  00442E  0410               	decf	_status,w,c
 18168  004430  1011               	iorwf	_status+1,w,c
 18169  004432  B4D8               	btfsc	status,2,c
 18170  004434  A881               	btfss	3969,4,c	;volatile
 18171  004436  D012               	goto	i1l3196
 18172                           
 18173                           ;lab7.c: 486: {
 18174                           ;lab7.c: 487: keypadOnly();
 18175  004438  EC66  F01F         	call	_keypadOnly	;wreg free
 18176  00443C                     i1l297:
 18177  00443C  A2AC               	btfss	4012,1,c	;volatile
 18178  00443E  D7FE               	goto	i1l297
 18179                           
 18180                           ;lab7.c: 489: TXREG = keypadValue;
 18181  004440  C01C  FFAD         	movff	_keypadValue,4013	;volatile
 18182                           
 18183                           ;lab7.c: 490: option = keypadValue;
 18184  004444  C01C  F01D         	movff	_keypadValue,_option
 18185                           
 18186                           ;lab7.c: 491: delay();
 18187  004448  ECE8  F022         	call	_delay	;wreg free
 18188                           
 18189                           ;lab7.c: 492: while(keypadValue != 'D'){
 18190  00444C  D002               	goto	i1l3194
 18191  00444E                     i1l3192:
 18192                           
 18193                           ;lab7.c: 493: keypadOnly();
 18194  00444E  EC66  F01F         	call	_keypadOnly	;wreg free
 18195  004452                     i1l3194:
 18196  004452  0E44               	movlw	68
 18197  004454  181C               	xorwf	_keypadValue,w,c
 18198  004456  B4D8               	btfsc	status,2,c
 18199  004458  0012               	return	
 18200  00445A  D7F9               	goto	i1l3192
 18201  00445C                     i1l3196:
 18202                           
 18203                           ;lab7.c: 496: else
 18204                           ;lab7.c: 497: {
 18205                           ;lab7.c: 498: option = reception();
 18206  00445C  EC2B  F023         	call	_reception	;wreg free
 18207  004460  5052               	movf	btemp,w,c
 18208  004462  6E1D               	movwf	_option,c
 18209  004464                     i1l304:
 18210  004464  A2AC               	btfss	4012,1,c	;volatile
 18211  004466  D7FE               	goto	i1l304
 18212                           
 18213                           ;lab7.c: 500: TXREG = option;
 18214  004468  C01D  FFAD         	movff	_option,4013	;volatile
 18215  00446C                     i1l3198:
 18216  00446C  0E0D               	movlw	13
 18217  00446E  18AE               	xorwf	4014,w,c	;volatile
 18218  004470  B4D8               	btfsc	status,2,c
 18219  004472  0012               	return	
 18220  004474  D7FB               	goto	i1l3198
 18221  004476                     __end_of_getSingleInput:
 18222                           	opt stack 0
 18223                           tblptru	equ	0xFF8
 18224                           tblptrh	equ	0xFF7
 18225                           tblptrl	equ	0xFF6
 18226                           tablat	equ	0xFF5
 18227                           prodh	equ	0xFF4
 18228                           prodl	equ	0xFF3
 18229                           intcon	equ	0xFF2
 18230                           intcon2	equ	0xFF1
 18231                           indf0	equ	0xFEF
 18232                           postinc0	equ	0xFEE
 18233                           fsr0h	equ	0xFEA
 18234                           fsr0l	equ	0xFE9
 18235                           wreg	equ	0xFE8
 18236                           indf1	equ	0xFE7
 18237                           postinc1	equ	0xFE6
 18238                           postdec1	equ	0xFE5
 18239                           plusw1	equ	0xFE3
 18240                           fsr1h	equ	0xFE2
 18241                           fsr1l	equ	0xFE1
 18242                           bsr	equ	0xFE0
 18243                           indf2	equ	0xFDF
 18244                           postinc2	equ	0xFDE
 18245                           postdec2	equ	0xFDD
 18246                           fsr2h	equ	0xFDA
 18247                           fsr2l	equ	0xFD9
 18248                           status	equ	0xFD8
 18249                           
 18250 ;; *************** function ___awtoft *****************
 18251 ;; Defined at:
 18252 ;;		line 32 in file "/Applications/microchip/xc8/v1.38/sources/common/awtoft.c"
 18253 ;; Parameters:    Size  Location     Type
 18254 ;;  c               2   15[COMRAM] int 
 18255 ;; Auto vars:     Size  Location     Type
 18256 ;;  sign            1   21[COMRAM] unsigned char 
 18257 ;; Return value:  Size  Location     Type
 18258 ;;                  3   15[COMRAM] float 
 18259 ;; Registers used:
 18260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+9, btemp+10, btemp+11
 18261 ;; Tracked objects:
 18262 ;;		On entry : 0/0
 18263 ;;		On exit  : 0/0
 18264 ;;		Unchanged: 0/0
 18265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18266 ;;      Params:         3       0       0       0       0       0       0
 18267 ;;      Locals:         1       0       0       0       0       0       0
 18268 ;;      Temps:          3       0       0       0       0       0       0
 18269 ;;      Totals:         7       0       0       0       0       0       0
 18270 ;;Total ram usage:        7 bytes
 18271 ;; Hardware stack levels used:    1
 18272 ;; Hardware stack levels required when called:    5
 18273 ;; This function calls:
 18274 ;;		___ftpack
 18275 ;; This function is called by:
 18276 ;;		_My_ISR_Low
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text53
 18281  004476                     __ptext53:
 18282                           	opt stack 0
 18283  004476                     ___awtoft:
 18284                           	opt stack 14
 18285                           
 18286                           ;incstack = 0
 18287  004476  0E00               	movlw	0
 18288  004478  6E3C               	movwf	___awtoft@sign,c
 18289  00447A  AE37               	btfss	___awtoft@c+1,7,c
 18290  00447C  D006               	goto	i1l4040
 18291  00447E  6C36               	negf	___awtoft@c,c
 18292  004480  1E37               	comf	___awtoft@c+1,f,c
 18293  004482  B0D8               	btfsc	status,0,c
 18294  004484  2A37               	incf	___awtoft@c+1,f,c
 18295  004486  0E01               	movlw	1
 18296  004488  6E3C               	movwf	___awtoft@sign,c
 18297  00448A                     i1l4040:
 18298  00448A  503C               	movf	___awtoft@sign,w,c
 18299  00448C  6EE6               	movwf	postinc1,c
 18300  00448E  0E8E               	movlw	142
 18301  004490  6EE6               	movwf	postinc1,c
 18302  004492  C036  F039         	movff	___awtoft@c,??___awtoft
 18303  004496  C037  F03A         	movff	___awtoft@c+1,??___awtoft+1
 18304  00449A  6A3B               	clrf	(??___awtoft+2)& (0+255),c
 18305  00449C  C039  FFE6         	movff	??___awtoft,postinc1
 18306  0044A0  C03A  FFE6         	movff	??___awtoft+1,postinc1
 18307  0044A4  C03B  FFE6         	movff	??___awtoft+2,postinc1
 18308  0044A8  ECC1  F01C         	call	___ftpack	;wreg free
 18309  0044AC  C052  F036         	movff	btemp,?___awtoft
 18310  0044B0  C053  F037         	movff	btemp+1,?___awtoft+1
 18311  0044B4  C054  F038         	movff	btemp+2,?___awtoft+2
 18312  0044B8  0012               	return	
 18313  0044BA                     __end_of___awtoft:
 18314                           	opt stack 0
 18315                           tblptru	equ	0xFF8
 18316                           tblptrh	equ	0xFF7
 18317                           tblptrl	equ	0xFF6
 18318                           tablat	equ	0xFF5
 18319                           prodh	equ	0xFF4
 18320                           prodl	equ	0xFF3
 18321                           intcon	equ	0xFF2
 18322                           intcon2	equ	0xFF1
 18323                           indf0	equ	0xFEF
 18324                           postinc0	equ	0xFEE
 18325                           fsr0h	equ	0xFEA
 18326                           fsr0l	equ	0xFE9
 18327                           wreg	equ	0xFE8
 18328                           indf1	equ	0xFE7
 18329                           postinc1	equ	0xFE6
 18330                           postdec1	equ	0xFE5
 18331                           plusw1	equ	0xFE3
 18332                           fsr1h	equ	0xFE2
 18333                           fsr1l	equ	0xFE1
 18334                           bsr	equ	0xFE0
 18335                           indf2	equ	0xFDF
 18336                           postinc2	equ	0xFDE
 18337                           postdec2	equ	0xFDD
 18338                           fsr2h	equ	0xFDA
 18339                           fsr2l	equ	0xFD9
 18340                           status	equ	0xFD8
 18341                           
 18342 ;; *************** function _My_ISR_High *****************
 18343 ;; Defined at:
 18344 ;;		line 231 in file "lab7.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;		None
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;  check           2   13[COMRAM] int 
 18349 ;; Return value:  Size  Location     Type
 18350 ;;                  1    wreg      void 
 18351 ;; Registers used:
 18352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, cstack
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18358 ;;      Params:         0       0       0       0       0       0       0
 18359 ;;      Locals:         2       0       0       0       0       0       0
 18360 ;;      Temps:         13       0       0       0       0       0       0
 18361 ;;      Totals:        15       0       0       0       0       0       0
 18362 ;;Total ram usage:       15 bytes
 18363 ;; Hardware stack levels used:    1
 18364 ;; Hardware stack levels required when called:    3
 18365 ;; This function calls:
 18366 ;;		_delay
 18367 ;;		_keypadOnly
 18368 ;;		_printChar
 18369 ;;		_reception
 18370 ;;		_resetPIR
 18371 ;;		_settingsPIR
 18372 ;;		_write_EEPROM
 18373 ;; This function is called by:
 18374 ;;		Interrupt level 2
 18375 ;; This function uses a non-reentrant model
 18376 ;;
 18377                           
 18378                           	psect	intcode
 18379  000008                     __pintcode:
 18380                           	opt stack 0
 18381  000008                     _My_ISR_High:
 18382                           	opt stack 11
 18383                           
 18384                           ;incstack = 0
 18385  000008  CFE9 F027          	movff	fsr0l,??_My_ISR_High
 18386  00000C  CFEA F028          	movff	fsr0h,??_My_ISR_High+1
 18387  000010  CFE1 F029          	movff	fsr1l,??_My_ISR_High+2
 18388  000014  EDC3  F00F         	call	int_func,f	;refresh shadow registers
 18389                           tblptru	equ	0xFF8
 18390                           tblptrh	equ	0xFF7
 18391                           tblptrl	equ	0xFF6
 18392                           tablat	equ	0xFF5
 18393                           prodh	equ	0xFF4
 18394                           prodl	equ	0xFF3
 18395                           intcon	equ	0xFF2
 18396                           intcon2	equ	0xFF1
 18397                           indf0	equ	0xFEF
 18398                           postinc0	equ	0xFEE
 18399                           fsr0h	equ	0xFEA
 18400                           fsr0l	equ	0xFE9
 18401                           wreg	equ	0xFE8
 18402                           indf1	equ	0xFE7
 18403                           postinc1	equ	0xFE6
 18404                           postdec1	equ	0xFE5
 18405                           plusw1	equ	0xFE3
 18406                           fsr1h	equ	0xFE2
 18407                           fsr1l	equ	0xFE1
 18408                           bsr	equ	0xFE0
 18409                           indf2	equ	0xFDF
 18410                           postinc2	equ	0xFDE
 18411                           postdec2	equ	0xFDD
 18412                           fsr2h	equ	0xFDA
 18413                           fsr2l	equ	0xFD9
 18414                           status	equ	0xFD8
 18415                           
 18416                           	psect	intcode_body
 18417  001F86                     __pintcode_body:
 18418                           	opt stack 11
 18419  001F86                     int_func:
 18420                           	opt stack 11
 18421  001F86  0006               	pop		; remove dummy address from shadow register refresh
 18422  001F88  CFE2 F02A          	movff	fsr1h,??_My_ISR_High+3
 18423  001F8C  CFD9 F02B          	movff	fsr2l,??_My_ISR_High+4
 18424  001F90  CFDA F02C          	movff	fsr2h,??_My_ISR_High+5
 18425  001F94  CFF6 F02D          	movff	tblptrl,??_My_ISR_High+6
 18426  001F98  CFF7 F02E          	movff	tblptrh,??_My_ISR_High+7
 18427  001F9C  CFF8 F02F          	movff	tblptru,??_My_ISR_High+8
 18428  001FA0  CFF5 F030          	movff	tablat,??_My_ISR_High+9
 18429  001FA4  C052  F031         	movff	btemp,??_My_ISR_High+10
 18430  001FA8  C053  F032         	movff	btemp+1,??_My_ISR_High+11
 18431  001FAC  C054  F033         	movff	btemp+2,??_My_ISR_High+12
 18432  001FB0  EE12  F066         	lfsr	1,___inthi_sp
 18433                           
 18434                           ;lab7.c: 233: int check = 0;
 18435  001FB4  0E00               	movlw	0
 18436  001FB6  6E35               	movwf	My_ISR_High@check+1,c
 18437  001FB8  0E00               	movlw	0
 18438  001FBA  6E34               	movwf	My_ISR_High@check,c
 18439                           
 18440                           ;lab7.c: 234: if(INTCONbits.INT0IF == 1 && INTCONbits.INT0IE == 1)
 18441  001FBC  B2F2               	btfsc	intcon,1,c	;volatile
 18442  001FBE  A8F2               	btfss	intcon,4,c	;volatile
 18443  001FC0  D004               	goto	i2l3312
 18444                           
 18445                           ;lab7.c: 235: {
 18446                           ;lab7.c: 236: PORTBbits.RB2 = 1;
 18447  001FC2  8481               	bsf	3969,2,c	;volatile
 18448                           
 18449                           ;lab7.c: 237: INTCONbits.INT0IF = 0;
 18450  001FC4  92F2               	bcf	intcon,1,c	;volatile
 18451                           
 18452                           ;lab7.c: 238: resetPIR();
 18453  001FC6  EC48  F021         	call	_resetPIR	;wreg free
 18454  001FCA                     i2l3312:
 18455                           
 18456                           ;lab7.c: 242: {
 18457                           ;lab7.c: 244: if(valid == 4)
 18458  001FCA  0E04               	movlw	4
 18459  001FCC  181A               	xorwf	_valid,w,c
 18460  001FCE  101B               	iorwf	_valid+1,w,c
 18461  001FD0  A4D8               	btfss	status,2,c
 18462  001FD2  D0A3               	goto	i2l3384
 18463                           
 18464                           ;lab7.c: 245: {
 18465                           ;lab7.c: 246: check = 0;
 18466  001FD4  0E00               	movlw	0
 18467  001FD6  6E35               	movwf	My_ISR_High@check+1,c
 18468  001FD8  0E00               	movlw	0
 18469  001FDA  6E34               	movwf	My_ISR_High@check,c
 18470                           
 18471                           ;lab7.c: 247: PORTBbits.RB2 = 0;
 18472  001FDC  9481               	bcf	3969,2,c	;volatile
 18473                           
 18474                           ;lab7.c: 248: printChar("\n\rDisable or Keep enabled the PIR Sensor Alarm?");
 18475  001FDE  0E8B               	movlw	low STR_4
 18476  001FE0  6EE6               	movwf	postinc1,c
 18477  001FE2  0E78               	movlw	high STR_4
 18478  001FE4  6EE6               	movwf	postinc1,c
 18479  001FE6  EC0B  F021         	call	_printChar	;wreg free
 18480                           
 18481                           ;lab7.c: 249: printChar("\n\rEnable = 1 and Disable = 0");
 18482  001FEA  0E63               	movlw	low STR_5
 18483  001FEC  6EE6               	movwf	postinc1,c
 18484  001FEE  0E7E               	movlw	high STR_5
 18485  001FF0  6EE6               	movwf	postinc1,c
 18486  001FF2  EC0B  F021         	call	_printChar	;wreg free
 18487                           
 18488                           ;lab7.c: 250: printChar("\n\rInput Here: ");
 18489  001FF6  0E2D               	movlw	low (STR_42+21)
 18490  001FF8  6EE6               	movwf	postinc1,c
 18491  001FFA  0E7C               	movlw	high (STR_42+21)
 18492  001FFC  6EE6               	movwf	postinc1,c
 18493  001FFE  EC0B  F021         	call	_printChar	;wreg free
 18494                           
 18495                           ;lab7.c: 251: delay();
 18496  002002  ECE8  F022         	call	_delay	;wreg free
 18497                           
 18498                           ;lab7.c: 253: if(status==1 && PORTBbits.RB4 == 1)
 18499  002006  0410               	decf	_status,w,c
 18500  002008  1011               	iorwf	_status+1,w,c
 18501  00200A  B4D8               	btfsc	status,2,c
 18502  00200C  A881               	btfss	3969,4,c	;volatile
 18503  00200E  D012               	goto	i2l3338
 18504                           
 18505                           ;lab7.c: 254: {
 18506                           ;lab7.c: 255: keypadOnly();
 18507  002010  EC66  F01F         	call	_keypadOnly	;wreg free
 18508  002014                     i2l232:
 18509  002014  A2AC               	btfss	4012,1,c	;volatile
 18510  002016  D7FE               	goto	i2l232
 18511                           
 18512                           ;lab7.c: 257: TXREG = keypadValue;
 18513  002018  C01C  FFAD         	movff	_keypadValue,4013	;volatile
 18514                           
 18515                           ;lab7.c: 258: option = keypadValue;
 18516  00201C  C01C  F01D         	movff	_keypadValue,_option
 18517                           
 18518                           ;lab7.c: 259: delay();
 18519  002020  ECE8  F022         	call	_delay	;wreg free
 18520                           
 18521                           ;lab7.c: 260: while(keypadValue != 'D'){
 18522  002024  D002               	goto	i2l3336
 18523  002026                     i2l3334:
 18524                           
 18525                           ;lab7.c: 261: keypadOnly();
 18526  002026  EC66  F01F         	call	_keypadOnly	;wreg free
 18527  00202A                     i2l3336:
 18528  00202A  0E44               	movlw	68
 18529  00202C  181C               	xorwf	_keypadValue,w,c
 18530  00202E  B4D8               	btfsc	status,2,c
 18531  002030  D06C               	goto	i2l3382
 18532  002032  D7F9               	goto	i2l3334
 18533  002034                     i2l3338:
 18534                           
 18535                           ;lab7.c: 264: else
 18536                           ;lab7.c: 265: {
 18537                           ;lab7.c: 266: option = reception();
 18538  002034  EC2B  F023         	call	_reception	;wreg free
 18539  002038  5052               	movf	btemp,w,c
 18540  00203A  6E1D               	movwf	_option,c
 18541  00203C                     i2l239:
 18542  00203C  A2AC               	btfss	4012,1,c	;volatile
 18543  00203E  D7FE               	goto	i2l239
 18544                           
 18545                           ;lab7.c: 268: TXREG = option;
 18546  002040  C01D  FFAD         	movff	_option,4013	;volatile
 18547  002044                     i2l3340:
 18548  002044  0E0D               	movlw	13
 18549  002046  18AE               	xorwf	4014,w,c	;volatile
 18550  002048  B4D8               	btfsc	status,2,c
 18551  00204A  D05F               	goto	i2l3382
 18552  00204C  D7FB               	goto	i2l3340
 18553  00204E                     i2l246:
 18554                           
 18555                           ;lab7.c: 275: settingsPIR();
 18556  00204E  EC56  F023         	call	_settingsPIR	;wreg free
 18557                           
 18558                           ;lab7.c: 276: pirState = "ACTIVE";
 18559  002052  0EE0               	movlw	low (STR_1+2)
 18560  002054  6E45               	movwf	_pirState,c
 18561  002056  0E7F               	movlw	high (STR_1+2)
 18562  002058  6E46               	movwf	_pirState+1,c
 18563                           
 18564                           ;lab7.c: 277: INTCONbits.INT0IE = 1;
 18565  00205A  88F2               	bsf	intcon,4,c	;volatile
 18566                           
 18567                           ;lab7.c: 278: printChar("\n\r PIR Sensor Alarm Enabled");
 18568  00205C  0E0E               	movlw	low STR_8
 18569  00205E  6EE6               	movwf	postinc1,c
 18570  002060  0E7F               	movlw	high STR_8
 18571  002062  6EE6               	movwf	postinc1,c
 18572  002064  EC0B  F021         	call	_printChar	;wreg free
 18573                           
 18574                           ;lab7.c: 279: write_EEPROM(PIRStatusAddress,'E');
 18575  002068  0E45               	movlw	69
 18576  00206A  6EE6               	movwf	postinc1,c
 18577  00206C  C004  FFE6         	movff	_PIRStatusAddress,postinc1
 18578  002070  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
 18579  002074  ECFD  F022         	call	_write_EEPROM	;wreg free
 18580                           
 18581                           ;lab7.c: 280: printChar("\n\rPlease press '0' and 'Enter' to continue: ");
 18582  002078  0E19               	movlw	low STR_9
 18583  00207A  6EE6               	movwf	postinc1,c
 18584  00207C  0E79               	movlw	high STR_9
 18585  00207E  6EE6               	movwf	postinc1,c
 18586  002080  EC0B  F021         	call	_printChar	;wreg free
 18587                           
 18588                           ;lab7.c: 281: delay();
 18589  002084  ECE8  F022         	call	_delay	;wreg free
 18590                           
 18591                           ;lab7.c: 282: break;
 18592  002088  D05C               	goto	i2l3392
 18593  00208A                     i2l3354:
 18594                           
 18595                           ;lab7.c: 285: pirState = "INACTIVE";
 18596  00208A  0EDE               	movlw	low STR_1
 18597  00208C  6E45               	movwf	_pirState,c
 18598  00208E  0E7F               	movlw	high STR_1
 18599  002090  6E46               	movwf	_pirState+1,c
 18600                           
 18601                           ;lab7.c: 286: write_EEPROM(PIRStatusAddress,'D');
 18602  002092  0E44               	movlw	68
 18603  002094  6EE6               	movwf	postinc1,c
 18604  002096  C004  FFE6         	movff	_PIRStatusAddress,postinc1
 18605  00209A  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
 18606  00209E  ECFD  F022         	call	_write_EEPROM	;wreg free
 18607                           
 18608                           ;lab7.c: 287: INTCONbits.INT0IE = 0;
 18609  0020A2  98F2               	bcf	intcon,4,c	;volatile
 18610                           
 18611                           ;lab7.c: 288: printChar("\n\r PIR Sensor Alarm Disabled");
 18612  0020A4  0E9D               	movlw	low STR_11
 18613  0020A6  6EE6               	movwf	postinc1,c
 18614  0020A8  0E7E               	movlw	high STR_11
 18615  0020AA  6EE6               	movwf	postinc1,c
 18616  0020AC  EC0B  F021         	call	_printChar	;wreg free
 18617                           
 18618                           ;lab7.c: 289: printChar("\n\rPlease press '0' and 'Enter' to continue: ");
 18619  0020B0  0E19               	movlw	low STR_9
 18620  0020B2  6EE6               	movwf	postinc1,c
 18621  0020B4  0E79               	movlw	high STR_9
 18622  0020B6  6EE6               	movwf	postinc1,c
 18623  0020B8  EC0B  F021         	call	_printChar	;wreg free
 18624                           
 18625                           ;lab7.c: 290: delay();
 18626  0020BC  ECE8  F022         	call	_delay	;wreg free
 18627                           
 18628                           ;lab7.c: 291: break;
 18629  0020C0  D040               	goto	i2l3392
 18630  0020C2                     i2l3366:
 18631                           
 18632                           ;lab7.c: 294: printChar("\n\rInvalid Selection");
 18633  0020C2  0EAD               	movlw	low STR_13
 18634  0020C4  6EE6               	movwf	postinc1,c
 18635  0020C6  0E7F               	movlw	high STR_13
 18636  0020C8  6EE6               	movwf	postinc1,c
 18637  0020CA  EC0B  F021         	call	_printChar	;wreg free
 18638                           
 18639                           ;lab7.c: 295: printChar("\n\r PIR SENSOR ALARM IS KEPT ENABLED");
 18640  0020CE  0E3C               	movlw	low STR_14
 18641  0020D0  6EE6               	movwf	postinc1,c
 18642  0020D2  0E7C               	movlw	high STR_14
 18643  0020D4  6EE6               	movwf	postinc1,c
 18644  0020D6  EC0B  F021         	call	_printChar	;wreg free
 18645                           
 18646                           ;lab7.c: 296: pirState = "INACTIVE";
 18647  0020DA  0EDE               	movlw	low STR_1
 18648  0020DC  6E45               	movwf	_pirState,c
 18649  0020DE  0E7F               	movlw	high STR_1
 18650  0020E0  6E46               	movwf	_pirState+1,c
 18651                           
 18652                           ;lab7.c: 297: write_EEPROM(PIRStatusAddress,'E');
 18653  0020E2  0E45               	movlw	69
 18654  0020E4  6EE6               	movwf	postinc1,c
 18655  0020E6  C004  FFE6         	movff	_PIRStatusAddress,postinc1
 18656  0020EA  C005  FFE6         	movff	_PIRStatusAddress+1,postinc1
 18657  0020EE  ECFD  F022         	call	_write_EEPROM	;wreg free
 18658                           
 18659                           ;lab7.c: 298: settingsPIR();
 18660  0020F2  EC56  F023         	call	_settingsPIR	;wreg free
 18661                           
 18662                           ;lab7.c: 299: INTCONbits.INT0IE = 1;
 18663  0020F6  88F2               	bsf	intcon,4,c	;volatile
 18664                           
 18665                           ;lab7.c: 300: printChar("\n\rPlease press '0' and 'Enter' to continue: ");
 18666  0020F8  0E19               	movlw	low STR_9
 18667  0020FA  6EE6               	movwf	postinc1,c
 18668  0020FC  0E79               	movlw	high STR_9
 18669  0020FE  6EE6               	movwf	postinc1,c
 18670  002100  EC0B  F021         	call	_printChar	;wreg free
 18671                           
 18672                           ;lab7.c: 301: delay();
 18673  002104  ECE8  F022         	call	_delay	;wreg free
 18674                           
 18675                           ;lab7.c: 303: }
 18676                           
 18677                           ;lab7.c: 302: break;
 18678  002108  D01C               	goto	i2l3392
 18679  00210A                     i2l3382:
 18680  00210A  501D               	movf	_option,w,c
 18681                           
 18682                           ; Switch size 1, requested type "space"
 18683                           ; Number of cases is 2, Range of values is 48 to 49
 18684                           ; switch strategies available:
 18685                           ; Name         Instructions Cycles
 18686                           ; simple_byte            7     4 (average)
 18687                           ;	Chosen strategy is simple_byte
 18688  00210C  0A30               	xorlw	48	; case 48
 18689  00210E  B4D8               	btfsc	status,2,c
 18690  002110  D7BC               	goto	i2l3354
 18691  002112  0A01               	xorlw	1	; case 49
 18692  002114  B4D8               	btfsc	status,2,c
 18693  002116  D79B               	goto	i2l246
 18694  002118  D7D4               	goto	i2l3366
 18695  00211A                     i2l3384:
 18696                           
 18697                           ;lab7.c: 305: else
 18698                           ;lab7.c: 306: {
 18699                           ;lab7.c: 307: printChar("\n\rIncorrect Password.... TRY AGAIN!!\n\r");
 18700  00211A  0EC8               	movlw	low STR_17
 18701  00211C  6EE6               	movwf	postinc1,c
 18702  00211E  0E7A               	movlw	high STR_17
 18703  002120  6EE6               	movwf	postinc1,c
 18704  002122  EC0B  F021         	call	_printChar	;wreg free
 18705                           
 18706                           ;lab7.c: 308: printChar("\n\r");
 18707  002126  0EEC               	movlw	low (STR_17+36)
 18708  002128  6EE6               	movwf	postinc1,c
 18709  00212A  0E7A               	movlw	high (STR_17+36)
 18710  00212C  6EE6               	movwf	postinc1,c
 18711  00212E  EC0B  F021         	call	_printChar	;wreg free
 18712                           
 18713                           ;lab7.c: 309: check = 1;
 18714  002132  0E00               	movlw	0
 18715  002134  6E35               	movwf	My_ISR_High@check+1,c
 18716  002136  0E01               	movlw	1
 18717  002138  6E34               	movwf	My_ISR_High@check,c
 18718                           
 18719                           ;lab7.c: 310: delay();
 18720  00213A  ECE8  F022         	call	_delay	;wreg free
 18721                           
 18722                           ;lab7.c: 311: resetPIR();
 18723  00213E  EC48  F021         	call	_resetPIR	;wreg free
 18724  002142                     i2l3392:
 18725                           
 18726                           ;lab7.c: 313: }
 18727                           ;lab7.c: 314: }while(check == 1);
 18728  002142  0434               	decf	My_ISR_High@check,w,c
 18729  002144  1035               	iorwf	My_ISR_High@check+1,w,c
 18730  002146  B4D8               	btfsc	status,2,c
 18731  002148  D740               	goto	i2l3312
 18732  00214A  C033  F054         	movff	??_My_ISR_High+12,btemp+2
 18733  00214E  C032  F053         	movff	??_My_ISR_High+11,btemp+1
 18734  002152  C031  F052         	movff	??_My_ISR_High+10,btemp
 18735  002156  C030  FFF5         	movff	??_My_ISR_High+9,tablat
 18736  00215A  C02F  FFF8         	movff	??_My_ISR_High+8,tblptru
 18737  00215E  C02E  FFF7         	movff	??_My_ISR_High+7,tblptrh
 18738  002162  C02D  FFF6         	movff	??_My_ISR_High+6,tblptrl
 18739  002166  C02C  FFDA         	movff	??_My_ISR_High+5,fsr2h
 18740  00216A  C02B  FFD9         	movff	??_My_ISR_High+4,fsr2l
 18741  00216E  C02A  FFE2         	movff	??_My_ISR_High+3,fsr1h
 18742  002172  C029  FFE1         	movff	??_My_ISR_High+2,fsr1l
 18743  002176  C028  FFEA         	movff	??_My_ISR_High+1,fsr0h
 18744  00217A  C027  FFE9         	movff	??_My_ISR_High,fsr0l
 18745  00217E  0011               	retfie		f
 18746  002180                     __end_of_My_ISR_High:
 18747                           	opt stack 0
 18748                           tblptru	equ	0xFF8
 18749                           tblptrh	equ	0xFF7
 18750                           tblptrl	equ	0xFF6
 18751                           tablat	equ	0xFF5
 18752                           prodh	equ	0xFF4
 18753                           prodl	equ	0xFF3
 18754                           intcon	equ	0xFF2
 18755                           intcon2	equ	0xFF1
 18756                           indf0	equ	0xFEF
 18757                           postinc0	equ	0xFEE
 18758                           fsr0h	equ	0xFEA
 18759                           fsr0l	equ	0xFE9
 18760                           wreg	equ	0xFE8
 18761                           indf1	equ	0xFE7
 18762                           postinc1	equ	0xFE6
 18763                           postdec1	equ	0xFE5
 18764                           plusw1	equ	0xFE3
 18765                           fsr1h	equ	0xFE2
 18766                           fsr1l	equ	0xFE1
 18767                           bsr	equ	0xFE0
 18768                           indf2	equ	0xFDF
 18769                           postinc2	equ	0xFDE
 18770                           postdec2	equ	0xFDD
 18771                           fsr2h	equ	0xFDA
 18772                           fsr2l	equ	0xFD9
 18773                           status	equ	0xFD8
 18774                           
 18775 ;; *************** function _resetPIR *****************
 18776 ;; Defined at:
 18777 ;;		line 317 in file "lab7.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;		None
 18780 ;; Auto vars:     Size  Location     Type
 18781 ;;		None
 18782 ;; Return value:  Size  Location     Type
 18783 ;;                  1    wreg      void 
 18784 ;; Registers used:
 18785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru
 18786 ;; Tracked objects:
 18787 ;;		On entry : 0/0
 18788 ;;		On exit  : 0/0
 18789 ;;		Unchanged: 0/0
 18790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18791 ;;      Params:         0       0       0       0       0       0       0
 18792 ;;      Locals:         0       0       0       0       0       0       0
 18793 ;;      Temps:          0       0       0       0       0       0       0
 18794 ;;      Totals:         0       0       0       0       0       0       0
 18795 ;;Total ram usage:        0 bytes
 18796 ;; Hardware stack levels used:    1
 18797 ;; Hardware stack levels required when called:    2
 18798 ;; This function calls:
 18799 ;;		_checkPassword
 18800 ;;		_delay
 18801 ;;		_getTempPassword
 18802 ;;		_mainScreen
 18803 ;;		_printChar
 18804 ;;		_read_EEPROM
 18805 ;; This function is called by:
 18806 ;;		_My_ISR_High
 18807 ;; This function uses a non-reentrant model
 18808 ;;
 18809                           
 18810                           	psect	text55
 18811  004290                     __ptext55:
 18812                           	opt stack 0
 18813  004290                     _resetPIR:
 18814                           	opt stack 11
 18815                           
 18816                           ;lab7.c: 319: mainScreen();
 18817                           
 18818                           ;incstack = 0
 18819  004290  EC48  F020         	call	_mainScreen	;wreg free
 18820                           
 18821                           ;lab7.c: 320: printChar("\n\r!!!!!!!!!!!!! PIR SENSOR HAS DETECTED MOTION !!!!!!!!!!!!!!
      +                          ");
 18822  004294  0E4A               	movlw	low STR_19
 18823  004296  6EE6               	movwf	postinc1,c
 18824  004298  0E76               	movlw	high STR_19
 18825  00429A  6EE6               	movwf	postinc1,c
 18826  00429C  EC0B  F021         	call	_printChar	;wreg free
 18827                           
 18828                           ;lab7.c: 322: printChar("\r\nEnter the password to reset the alarm: ");
 18829  0042A0  0E22               	movlw	low STR_20
 18830  0042A2  6EE6               	movwf	postinc1,c
 18831  0042A4  0E7A               	movlw	high STR_20
 18832  0042A6  6EE6               	movwf	postinc1,c
 18833  0042A8  EC0B  F021         	call	_printChar	;wreg free
 18834                           
 18835                           ;lab7.c: 323: delay();
 18836  0042AC  ECE8  F022         	call	_delay	;wreg free
 18837                           
 18838                           ;lab7.c: 324: for(i = 0, address = 0xE0; i < 4;address++,i++)
 18839  0042B0  0E00               	movlw	0
 18840  0042B2  6E0B               	movwf	_i+1,c
 18841  0042B4  0E00               	movlw	0
 18842  0042B6  6E0A               	movwf	_i,c
 18843  0042B8  0E00               	movlw	0
 18844  0042BA  6E07               	movwf	_address+1,c
 18845  0042BC  0EE0               	movlw	224
 18846  0042BE  6E06               	movwf	_address,c
 18847  0042C0  D012               	goto	i2l3164
 18848  0042C2                     i2l3158:
 18849                           
 18850                           ;lab7.c: 325: {
 18851                           ;lab7.c: 326: password[i] = read_EEPROM(address);
 18852  0042C2  500A               	movf	_i,w,c
 18853  0042C4  240C               	addwf	_password,w,c
 18854  0042C6  6ED9               	movwf	fsr2l,c
 18855  0042C8  500B               	movf	_i+1,w,c
 18856  0042CA  200D               	addwfc	_password+1,w,c
 18857  0042CC  6EDA               	movwf	fsr2h,c
 18858  0042CE  C006  FFE6         	movff	_address,postinc1
 18859  0042D2  C007  FFE6         	movff	_address+1,postinc1
 18860  0042D6  EC36  F023         	call	_read_EEPROM	;wreg free
 18861  0042DA  5052               	movf	btemp,w,c
 18862  0042DC  6EDF               	movwf	indf2,c
 18863  0042DE  4A06               	infsnz	_address,f,c
 18864  0042E0  2A07               	incf	_address+1,f,c
 18865  0042E2  4A0A               	infsnz	_i,f,c
 18866  0042E4  2A0B               	incf	_i+1,f,c
 18867  0042E6                     i2l3164:
 18868  0042E6  BE0B               	btfsc	_i+1,7,c
 18869  0042E8  D7EC               	goto	i2l3158
 18870  0042EA  500B               	movf	_i+1,w,c
 18871  0042EC  E104               	bnz	i2l3166
 18872  0042EE  0E04               	movlw	4
 18873  0042F0  5C0A               	subwf	_i,w,c
 18874  0042F2  A0D8               	btfss	status,0,c
 18875  0042F4  D7E6               	goto	i2l3158
 18876  0042F6                     i2l3166:
 18877                           
 18878                           ;lab7.c: 327: }
 18879                           ;lab7.c: 329: tempPass= getTempPassword();
 18880  0042F6  EC8E  F01B         	call	_getTempPassword	;wreg free
 18881  0042FA  C052  F016         	movff	btemp,_tempPass
 18882  0042FE  C053  F017         	movff	btemp+1,_tempPass+1
 18883                           
 18884                           ;lab7.c: 331: checkPassword();
 18885  004302  EC84  F021         	call	_checkPassword	;wreg free
 18886  004306  0012               	return		;funcret
 18887  004308                     __end_of_resetPIR:
 18888                           	opt stack 0
 18889                           tblptru	equ	0xFF8
 18890                           tblptrh	equ	0xFF7
 18891                           tblptrl	equ	0xFF6
 18892                           tablat	equ	0xFF5
 18893                           prodh	equ	0xFF4
 18894                           prodl	equ	0xFF3
 18895                           intcon	equ	0xFF2
 18896                           intcon2	equ	0xFF1
 18897                           indf0	equ	0xFEF
 18898                           postinc0	equ	0xFEE
 18899                           fsr0h	equ	0xFEA
 18900                           fsr0l	equ	0xFE9
 18901                           wreg	equ	0xFE8
 18902                           indf1	equ	0xFE7
 18903                           postinc1	equ	0xFE6
 18904                           postdec1	equ	0xFE5
 18905                           plusw1	equ	0xFE3
 18906                           fsr1h	equ	0xFE2
 18907                           fsr1l	equ	0xFE1
 18908                           bsr	equ	0xFE0
 18909                           indf2	equ	0xFDF
 18910                           postinc2	equ	0xFDE
 18911                           postdec2	equ	0xFDD
 18912                           fsr2h	equ	0xFDA
 18913                           fsr2l	equ	0xFD9
 18914                           status	equ	0xFD8
 18915                           tblptru	equ	0xFF8
 18916                           tblptrh	equ	0xFF7
 18917                           tblptrl	equ	0xFF6
 18918                           tablat	equ	0xFF5
 18919                           prodh	equ	0xFF4
 18920                           prodl	equ	0xFF3
 18921                           intcon	equ	0xFF2
 18922                           intcon2	equ	0xFF1
 18923                           indf0	equ	0xFEF
 18924                           postinc0	equ	0xFEE
 18925                           fsr0h	equ	0xFEA
 18926                           fsr0l	equ	0xFE9
 18927                           wreg	equ	0xFE8
 18928                           indf1	equ	0xFE7
 18929                           postinc1	equ	0xFE6
 18930                           postdec1	equ	0xFE5
 18931                           plusw1	equ	0xFE3
 18932                           fsr1h	equ	0xFE2
 18933                           fsr1l	equ	0xFE1
 18934                           bsr	equ	0xFE0
 18935                           indf2	equ	0xFDF
 18936                           postinc2	equ	0xFDE
 18937                           postdec2	equ	0xFDD
 18938                           fsr2h	equ	0xFDA
 18939                           fsr2l	equ	0xFD9
 18940                           status	equ	0xFD8
 18941                           
 18942                           	psect	rparam
 18943  0000                     tblptru	equ	0xFF8
 18944                           tblptrh	equ	0xFF7
 18945                           tblptrl	equ	0xFF6
 18946                           tablat	equ	0xFF5
 18947                           prodh	equ	0xFF4
 18948                           prodl	equ	0xFF3
 18949                           intcon	equ	0xFF2
 18950                           intcon2	equ	0xFF1
 18951                           indf0	equ	0xFEF
 18952                           postinc0	equ	0xFEE
 18953                           fsr0h	equ	0xFEA
 18954                           fsr0l	equ	0xFE9
 18955                           wreg	equ	0xFE8
 18956                           indf1	equ	0xFE7
 18957                           postinc1	equ	0xFE6
 18958                           postdec1	equ	0xFE5
 18959                           plusw1	equ	0xFE3
 18960                           fsr1h	equ	0xFE2
 18961                           fsr1l	equ	0xFE1
 18962                           bsr	equ	0xFE0
 18963                           indf2	equ	0xFDF
 18964                           postinc2	equ	0xFDE
 18965                           postdec2	equ	0xFDD
 18966                           fsr2h	equ	0xFDA
 18967                           fsr2l	equ	0xFD9
 18968                           status	equ	0xFD8
 18969                           
 18970                           	psect	temp
 18971  000052                     btemp:
 18972                           	opt stack 0
 18973  000052                     	ds	12
 18974                           tblptru	equ	0xFF8
 18975                           tblptrh	equ	0xFF7
 18976                           tblptrl	equ	0xFF6
 18977                           tablat	equ	0xFF5
 18978                           prodh	equ	0xFF4
 18979                           prodl	equ	0xFF3
 18980                           intcon	equ	0xFF2
 18981                           intcon2	equ	0xFF1
 18982                           indf0	equ	0xFEF
 18983                           postinc0	equ	0xFEE
 18984                           fsr0h	equ	0xFEA
 18985                           fsr0l	equ	0xFE9
 18986                           wreg	equ	0xFE8
 18987                           indf1	equ	0xFE7
 18988                           postinc1	equ	0xFE6
 18989                           postdec1	equ	0xFE5
 18990                           plusw1	equ	0xFE3
 18991                           fsr1h	equ	0xFE2
 18992                           fsr1l	equ	0xFE1
 18993                           bsr	equ	0xFE0
 18994                           indf2	equ	0xFDF
 18995                           postinc2	equ	0xFDE
 18996                           postdec2	equ	0xFDD
 18997                           fsr2h	equ	0xFDA
 18998                           fsr2l	equ	0xFD9
 18999                           status	equ	0xFD8


Data Sizes:
    Strings     3189
    Constant    118
    Data        17
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     26      81
    BANK0           128     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> tempThreshold(COMRAM[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_160(CODE[6]), STR_155(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 3
		 -> getTemperature@arr(UNKNOWN), componentStatus@arr(COMRAM[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    printChar@msg	PTR unsigned char  size(2) Largest target is 71
		 -> STR_161(CODE[5]), STR_159(CODE[3]), STR_158(CODE[63]), STR_157(CODE[3]), 
		 -> STR_156(CODE[36]), STR_154(CODE[36]), degree(COMRAM[3]), currentTemp(COMRAM[6]), 
		 -> STR_153(CODE[36]), STR_152(CODE[36]), STR_151(CODE[36]), STR_150(CODE[63]), 
		 -> STR_149(CODE[21]), STR_148(CODE[3]), STR_147(CODE[2]), STR_146(CODE[2]), 
		 -> STR_145(CODE[2]), STR_144(CODE[2]), STR_143(CODE[56]), STR_142(CODE[3]), 
		 -> STR_141(CODE[71]), STR_140(CODE[28]), STR_139(CODE[3]), STR_138(CODE[40]), 
		 -> STR_137(CODE[9]), STR_136(CODE[39]), STR_135(CODE[7]), STR_134(CODE[15]), 
		 -> STR_133(CODE[3]), STR_132(CODE[30]), STR_131(CODE[3]), STR_130(CODE[45]), 
		 -> STR_129(CODE[36]), STR_128(CODE[43]), STR_127(CODE[3]), STR_126(CODE[28]), 
		 -> STR_125(CODE[3]), STR_124(CODE[64]), STR_123(CODE[28]), STR_122(CODE[3]), 
		 -> STR_121(CODE[32]), STR_120(CODE[9]), STR_119(CODE[31]), STR_118(CODE[7]), 
		 -> STR_117(CODE[15]), STR_116(CODE[3]), STR_115(CODE[30]), STR_114(CODE[3]), 
		 -> STR_113(CODE[35]), STR_112(CODE[35]), STR_111(CODE[3]), STR_110(CODE[29]), 
		 -> STR_109(CODE[3]), STR_108(CODE[64]), STR_107(CODE[44]), STR_106(CODE[34]), 
		 -> STR_105(CODE[59]), STR_104(CODE[30]), STR_103(CODE[3]), STR_102(CODE[42]), 
		 -> STR_101(CODE[3]), STR_100(CODE[42]), STR_99(CODE[3]), STR_98(CODE[23]), 
		 -> STR_97(CODE[28]), STR_96(CODE[31]), STR_95(CODE[28]), STR_94(CODE[3]), 
		 -> STR_93(CODE[3]), STR_92(CODE[60]), STR_91(CODE[60]), STR_90(CODE[10]), 
		 -> STR_89(CODE[3]), STR_88(CODE[30]), STR_87(CODE[3]), STR_86(CODE[26]), 
		 -> STR_85(CODE[3]), STR_84(CODE[60]), STR_83(CODE[3]), STR_82(CODE[47]), 
		 -> STR_81(CODE[3]), STR_80(CODE[20]), STR_79(CODE[7]), STR_78(CODE[9]), 
		 -> STR_77(CODE[10]), STR_76(CODE[3]), STR_75(CODE[32]), STR_74(CODE[3]), 
		 -> STR_73(CODE[60]), STR_72(CODE[61]), STR_71(CODE[56]), STR_70(CODE[47]), 
		 -> STR_69(CODE[39]), STR_68(CODE[31]), STR_67(CODE[3]), STR_66(CODE[31]), 
		 -> STR_65(CODE[3]), STR_64(CODE[63]), STR_63(CODE[3]), STR_62(CODE[63]), 
		 -> STR_61(CODE[63]), STR_60(CODE[63]), STR_59(CODE[63]), STR_58(CODE[63]), 
		 -> STR_57(CODE[63]), tempThreshold(COMRAM[3]), STR_56(CODE[20]), STR_55(CODE[9]), 
		 -> STR_54(CODE[7]), STR_53(CODE[9]), STR_52(CODE[7]), STR_51(CODE[9]), 
		 -> STR_50(CODE[7]), STR_48(CODE[44]), STR_47(CODE[32]), STR_46(CODE[45]), 
		 -> STR_45(CODE[21]), STR_44(CODE[45]), STR_43(CODE[45]), STR_42(CODE[36]), 
		 -> STR_41(CODE[3]), STR_40(CODE[51]), STR_39(CODE[3]), STR_38(CODE[44]), 
		 -> STR_37(CODE[7]), STR_36(CODE[31]), STR_35(CODE[40]), STR_34(CODE[9]), 
		 -> STR_33(CODE[44]), STR_32(CODE[7]), STR_31(CODE[15]), STR_30(CODE[39]), 
		 -> STR_29(CODE[52]), STR_28(CODE[19]), STR_27(CODE[34]), STR_26(CODE[15]), 
		 -> STR_25(CODE[3]), STR_24(CODE[65]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[63]), STR_20(CODE[42]), STR_19(CODE[62]), STR_18(CODE[3]), 
		 -> STR_17(CODE[39]), STR_16(CODE[45]), STR_15(CODE[9]), STR_14(CODE[36]), 
		 -> STR_13(CODE[20]), STR_12(CODE[45]), STR_11(CODE[29]), STR_10(CODE[9]), 
		 -> STR_9(CODE[45]), STR_8(CODE[28]), STR_7(CODE[7]), STR_6(CODE[15]), 
		 -> STR_5(CODE[29]), STR_4(CODE[48]), STR_3(CODE[9]), STR_2(CODE[9]), 
		 -> STR_1(CODE[9]), 

    sp__getInput	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__getTempPassword	PTR unsigned char  size(2) Largest target is 4
		 -> getTempPassword@inputMsg(UNKNOWN), 

    tempPass	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), getTempPassword@inputMsg(UNKNOWN), 

    password	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    inputType	PTR unsigned char  size(2) Largest target is 20
		 -> STR_80(CODE[20]), STR_79(CODE[7]), STR_78(CODE[9]), STR_56(CODE[20]), 
		 -> STR_55(CODE[9]), STR_54(CODE[7]), STR_3(CODE[9]), 

    tempState	PTR unsigned char  size(2) Largest target is 9
		 -> STR_137(CODE[9]), STR_135(CODE[7]), STR_53(CODE[9]), STR_52(CODE[7]), 
		 -> STR_37(CODE[7]), STR_34(CODE[9]), STR_32(CODE[7]), STR_2(CODE[9]), 

    pirState	PTR unsigned char  size(2) Largest target is 9
		 -> STR_120(CODE[9]), STR_118(CODE[7]), STR_51(CODE[9]), STR_50(CODE[7]), 
		 -> STR_15(CODE[9]), STR_10(CODE[9]), STR_7(CODE[7]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _setPassword->_getInput
    _passcodeMenu->_getInput
    _resetScreen->_componentStatus
    _passcodeMenu->_getInput

Critical Paths under _My_ISR_Low in COMRAM

    _My_ISR_Low->___awtoft

Critical Paths under _My_ISR_High in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _My_ISR_Low in BANK0

    None.

Critical Paths under _My_ISR_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _My_ISR_Low in BANK1

    None.

Critical Paths under _My_ISR_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _My_ISR_Low in BANK2

    None.

Critical Paths under _My_ISR_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _My_ISR_Low in BANK3

    None.

Critical Paths under _My_ISR_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _My_ISR_Low in BANK4

    None.

Critical Paths under _My_ISR_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _My_ISR_Low in BANK5

    None.

Critical Paths under _My_ISR_High in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  432483
                            _Initial
                     _getTemperature
                              _login
                         _mainScreen
                        _read_EEPROM
                        _setPassword
                        _settingsCom
                        _settingsPIR
                      _settingsTimer
                        _tempSetting
 ---------------------------------------------------------------------------------
 (1) _settingsTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _settingsCom                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setPassword                                          0     0      0  240887
                    _componentStatus
                              _delay
                           _getInput
                              _login
                           _mainMenu
                         _mainScreen
                          _printChar
                        _resetScreen
 ---------------------------------------------------------------------------------
 (12) _getTemperature                                      3     3      0   20498
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (13) ___lwtoft                                            2     0      2     505
                           ___ftpack
 ---------------------------------------------------------------------------------
 (13) ___ftdiv                                            12     6      6     720
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _keypadOnly                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _reception                                           1     1      0      15
 ---------------------------------------------------------------------------------
 (18) _write_EEPROM                                        3     0      3     330
 ---------------------------------------------------------------------------------
 (19) _getTempPassword                                     6     6      0    3065
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
 ---------------------------------------------------------------------------------
 (19) _checkPassword                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _getTempThreshold                                    0     0      0    6050
                               _atoi
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (3) _checkStatus                                          0     0      0    2810
                               _atoi
                        _read_EEPROM
                        _settingsPIR
                        _tempSetting
 ---------------------------------------------------------------------------------
 (1) _tempSetting                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _atoi                                                5     3      2    1230
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (13) _atoi                                                5     3      2    1230
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (14) _isdigit                                             2     1      1      45
 ---------------------------------------------------------------------------------
 (3) _passcodeMenu                                         0     0      0  108972
                      _checkPassword
                              _delay
                           _getInput
                    _getTempPassword
                         _keypadOnly
                           _mainMenu
                          _printChar
                          _reception
                        _resetScreen
 ---------------------------------------------------------------------------------
 (4) _getInput                                             4     2      2    1645
                                             22 COMRAM     4     2      2
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
 ---------------------------------------------------------------------------------
 (3) _pirMenu                                              0     0      0  100212
                              _delay
                         _keypadOnly
                           _mainMenu
                          _printChar
                          _reception
                        _resetScreen
                        _settingsPIR
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (18) _settingsPIR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _temperatureMenu                                      0     0      0  112312
                              _delay
                   _getTempThreshold
                         _keypadOnly
                           _mainMenu
                          _printChar
                          _reception
                        _resetScreen
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (12) _getTempThreshold                                    0     0      0    6050
                               _atoi
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (18) _write_EEPROM                                        3     0      3     330
 ---------------------------------------------------------------------------------
 (20) _reception                                           1     1      0      15
 ---------------------------------------------------------------------------------
 (20) _keypadOnly                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _fround                                              1     0      1    2708
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (15) ___lbmod                                             4     2      2     132
 ---------------------------------------------------------------------------------
 (15) ___lbdiv                                             4     2      2     132
 ---------------------------------------------------------------------------------
 (14) _scale                                               1     0      1    4840
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (15) ___wmul                                              6     2      4     485
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             6     2      4     375
 ---------------------------------------------------------------------------------
 (14) _isdigit                                             2     1      1      45
 ---------------------------------------------------------------------------------
 (14) __tdiv_to_l_                                        12     6      6     215
 ---------------------------------------------------------------------------------
 (14) __div_to_l_                                         12     6      6     305
 ---------------------------------------------------------------------------------
 (15) ___wmul                                              6     2      4     485
 ---------------------------------------------------------------------------------
 (14) ___ftsub                                             6     0      6    2355
                            ___ftadd
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             8     4      4     395
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             6     2      4     375
 ---------------------------------------------------------------------------------
 (14) ___ftge                                              6     0      6     170
 ---------------------------------------------------------------------------------
 (14) ___ftneg                                             3     0      3      40
 ---------------------------------------------------------------------------------
 (14) ___fttol                                             9     6      3     195
 ---------------------------------------------------------------------------------
 (15) ___lbdiv                                             4     2      2     132
 ---------------------------------------------------------------------------------
 (15) ___lbmod                                             4     2      2     132
 ---------------------------------------------------------------------------------
 (14) ___lldiv                                            13     5      8     165
 ---------------------------------------------------------------------------------
 (14) ___llmod                                             9     1      8     185
 ---------------------------------------------------------------------------------
 (14) ___lltoft                                            5     1      4    1015
                           ___ftpack
 ---------------------------------------------------------------------------------
 (18) _settingsPIR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tempSetting                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _read_EEPROM                                         2     0      2     175
 ---------------------------------------------------------------------------------
 (19) _mainScreen                                          0     0      0    3250
                          _printChar
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (19) _read_EEPROM                                         2     0      2     175
 ---------------------------------------------------------------------------------
 (2) _login                                                0     0      0  167673
                      _checkPassword
                        _checkStatus
                              _delay
                    _getTempPassword
                              _login
                           _mainMenu
                          _printChar
                        _resetScreen
 ---------------------------------------------------------------------------------
 (2) _login                                                0     0      0  167673
                      _checkPassword
                        _checkStatus
                              _delay
                    _getTempPassword
                              _login
                           _mainMenu
                          _printChar
                        _resetScreen
 ---------------------------------------------------------------------------------
 (2) _resetScreen                                          0     0      0   23258
                    _componentStatus
                         _mainScreen
                          _printChar
 ---------------------------------------------------------------------------------
 (19) _printChar                                           2     0      2    1450
 ---------------------------------------------------------------------------------
 (19) _mainScreen                                          0     0      0    3250
                          _printChar
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (3) _componentStatus                                      2     2      0   18558
                                             22 COMRAM     2     2      0
                          _printChar
                            _sprintf
 ---------------------------------------------------------------------------------
 (13) _sprintf                                            35    28      7   17078
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (14) _scale                                               1     0      1    4840
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) _fround                                              1     0      1    2708
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (14) __tdiv_to_l_                                        12     6      6     215
 ---------------------------------------------------------------------------------
 (14) __div_to_l_                                         12     6      6     305
 ---------------------------------------------------------------------------------
 (14) ___lltoft                                            5     1      4    1015
                           ___ftpack
 ---------------------------------------------------------------------------------
 (14) ___llmod                                             9     1      8     185
 ---------------------------------------------------------------------------------
 (14) ___lldiv                                            13     5      8     165
 ---------------------------------------------------------------------------------
 (14) ___fttol                                             9     6      3     195
 ---------------------------------------------------------------------------------
 (14) ___ftsub                                             6     0      6    2355
                            ___ftadd
 ---------------------------------------------------------------------------------
 (14) ___ftneg                                             3     0      3      40
 ---------------------------------------------------------------------------------
 (15) ___ftmul                                            12     6      6    1030
                           ___ftpack
 ---------------------------------------------------------------------------------
 (16) ___ftpack                                            5     0      5     480
 ---------------------------------------------------------------------------------
 (14) ___ftge                                              6     0      6     170
 ---------------------------------------------------------------------------------
 (15) ___ftadd                                             9     3      6    1135
                           ___ftpack
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             8     4      4     395
 ---------------------------------------------------------------------------------
 (2) _mainMenu                                             0     0      0   25053
                              _delay
                         _keypadOnly
                           _mainMenu
                       _passcodeMenu
                            _pirMenu
                          _printChar
                          _reception
                        _resetScreen
                    _temperatureMenu
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (3) _temperatureMenu                                      0     0      0  112312
                              _delay
                   _getTempThreshold
                         _keypadOnly
                           _mainMenu
                          _printChar
                          _reception
                        _resetScreen
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (3) _pirMenu                                              0     0      0  100212
                              _delay
                         _keypadOnly
                           _mainMenu
                          _printChar
                          _reception
                        _resetScreen
                        _settingsPIR
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (3) _passcodeMenu                                         0     0      0  108972
                      _checkPassword
                              _delay
                           _getInput
                    _getTempPassword
                         _keypadOnly
                           _mainMenu
                          _printChar
                          _reception
                        _resetScreen
 ---------------------------------------------------------------------------------
 (19) _getTempPassword                                     6     6      0    3065
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
 ---------------------------------------------------------------------------------
 (20) _delay                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _checkStatus                                          0     0      0    2810
                               _atoi
                        _read_EEPROM
                        _settingsPIR
                        _tempSetting
 ---------------------------------------------------------------------------------
 (19) _checkPassword                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _My_ISR_Low                                         24    24      0   23639
                                              0 BANK0     24    24      0
                           ___awtoft
                             ___ftge
                      _checkPassword
                              _delay
                     _getSingleInput
                    _getTempPassword
                   _getTempThreshold
                     _getTemperature
                         _keypadOnly
                         _mainScreen
                          _printChar
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (19) _mainScreen                                          0     0      0    3250
                          _printChar
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (19) _read_EEPROM                                         2     0      2     175
 ---------------------------------------------------------------------------------
 (12) _getTemperature                                      3     3      0   20498
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (13) _sprintf                                            35    28      7   17078
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (14) _scale                                               1     0      1    4840
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             6     2      4     375
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             8     4      4     395
 ---------------------------------------------------------------------------------
 (14) _fround                                              1     0      1    2708
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (15) ___lbmod                                             4     2      2     132
 ---------------------------------------------------------------------------------
 (15) ___lbdiv                                             4     2      2     132
 ---------------------------------------------------------------------------------
 (15) ___ftmul                                            12     6      6    1030
                           ___ftpack
 ---------------------------------------------------------------------------------
 (14) __tdiv_to_l_                                        12     6      6     215
 ---------------------------------------------------------------------------------
 (14) __div_to_l_                                         12     6      6     305
 ---------------------------------------------------------------------------------
 (14) ___lltoft                                            5     1      4    1015
                           ___ftpack
 ---------------------------------------------------------------------------------
 (14) ___llmod                                             9     1      8     185
 ---------------------------------------------------------------------------------
 (14) ___lldiv                                            13     5      8     165
 ---------------------------------------------------------------------------------
 (14) ___fttol                                             9     6      3     195
 ---------------------------------------------------------------------------------
 (14) ___ftsub                                             6     0      6    2355
                            ___ftadd
 ---------------------------------------------------------------------------------
 (15) ___ftadd                                             9     3      6    1135
                           ___ftpack
 ---------------------------------------------------------------------------------
 (14) ___ftneg                                             3     0      3      40
 ---------------------------------------------------------------------------------
 (14) ___ftge                                              6     0      6     170
 ---------------------------------------------------------------------------------
 (13) ___lwtoft                                            2     0      2     505
                           ___ftpack
 ---------------------------------------------------------------------------------
 (13) ___ftdiv                                            12     6      6     720
                           ___ftpack
 ---------------------------------------------------------------------------------
 (12) _getTempThreshold                                    0     0      0    6050
                               _atoi
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (18) _write_EEPROM                                        3     0      3     330
 ---------------------------------------------------------------------------------
 (13) _atoi                                                5     3      2    1230
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (14) _isdigit                                             2     1      1      45
 ---------------------------------------------------------------------------------
 (15) ___wmul                                              6     2      4     485
 ---------------------------------------------------------------------------------
 (19) _getTempPassword                                     6     6      0    3065
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
 ---------------------------------------------------------------------------------
 (19) _printChar                                           2     0      2    1450
 ---------------------------------------------------------------------------------
 (12) _getSingleInput                                      0     0      0      15
                              _delay
                         _keypadOnly
                          _reception
 ---------------------------------------------------------------------------------
 (20) _reception                                           1     1      0      15
 ---------------------------------------------------------------------------------
 (20) _keypadOnly                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _delay                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _checkPassword                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) ___awtoft                                            7     4      3     635
                                             15 COMRAM     7     4      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (16) ___ftpack                                            5     0      5     480
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _My_ISR_High                                        15    15      0    6660
                                              0 COMRAM    15    15      0
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
                           _resetPIR
                        _settingsPIR
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (18) _write_EEPROM                                        3     0      3     330
 ---------------------------------------------------------------------------------
 (18) _settingsPIR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _resetPIR                                            0     0      0    4850
                      _checkPassword
                              _delay
                    _getTempPassword
                         _mainScreen
                          _printChar
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (19) _mainScreen                                          0     0      0    3250
                          _printChar
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (19) _read_EEPROM                                         2     0      2     175
 ---------------------------------------------------------------------------------
 (19) _getTempPassword                                     6     6      0    3065
                              _delay
                         _keypadOnly
                          _printChar
                          _reception
 ---------------------------------------------------------------------------------
 (20) _reception                                           1     1      0      15
 ---------------------------------------------------------------------------------
 (19) _printChar                                           2     0      2    1450
 ---------------------------------------------------------------------------------
 (20) _keypadOnly                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _delay                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _checkPassword                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
   _getTemperature
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
     _sprintf
       ___awdiv
       ___ftadd
         ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
       ___fttol
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___ftmul
           ___ftpack
         ___lbdiv
         ___lbmod
       _isdigit
       _scale
         ___awdiv
         ___awmod
         ___ftmul
           ___ftpack
         ___wmul
   _login
     _checkPassword
     _checkStatus
       _atoi
         ___wmul
         _isdigit
       _read_EEPROM
       _settingsPIR
       _tempSetting
     _delay
     _getTempPassword
       _delay
       _keypadOnly
       _printChar
       _reception
     _mainMenu
       _delay
       _keypadOnly
       _passcodeMenu
         _checkPassword
         _delay
         _getInput
           _delay
           _keypadOnly
           _printChar
           _reception
         _getTempPassword
           _delay
           _keypadOnly
           _printChar
           _reception
         _keypadOnly
         _printChar
         _reception
         _resetScreen
           _componentStatus
             _printChar
             _sprintf
               ___awdiv
               ___ftadd
                 ___ftpack
               ___ftge
               ___ftmul
                 ___ftpack
               ___ftneg
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___fttol
               ___lldiv
               ___llmod
               ___lltoft
                 ___ftpack
               ___wmul
               __div_to_l_
               __tdiv_to_l_
               _fround
                 ___ftmul
                   ___ftpack
                 ___lbdiv
                 ___lbmod
               _isdigit
               _scale
                 ___awdiv
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
           _mainScreen
             _printChar
             _read_EEPROM
           _printChar
       _pirMenu
         _delay
         _keypadOnly
         _printChar
         _reception
         _resetScreen
           _componentStatus
             _printChar
             _sprintf
               ___awdiv
               ___ftadd
                 ___ftpack
               ___ftge
               ___ftmul
                 ___ftpack
               ___ftneg
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___fttol
               ___lldiv
               ___llmod
               ___lltoft
                 ___ftpack
               ___wmul
               __div_to_l_
               __tdiv_to_l_
               _fround
                 ___ftmul
                   ___ftpack
                 ___lbdiv
                 ___lbmod
               _isdigit
               _scale
                 ___awdiv
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
           _mainScreen
             _printChar
             _read_EEPROM
           _printChar
         _settingsPIR
         _write_EEPROM
       _printChar
       _reception
       _resetScreen
         _componentStatus
           _printChar
           _sprintf
             ___awdiv
             ___ftadd
               ___ftpack
             ___ftge
             ___ftmul
               ___ftpack
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftpack
             ___fttol
             ___lldiv
             ___llmod
             ___lltoft
               ___ftpack
             ___wmul
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___ftmul
                 ___ftpack
               ___lbdiv
               ___lbmod
             _isdigit
             _scale
               ___awdiv
               ___awmod
               ___ftmul
                 ___ftpack
               ___wmul
         _mainScreen
           _printChar
           _read_EEPROM
         _printChar
       _temperatureMenu
         _delay
         _getTempThreshold
           _atoi
             ___wmul
             _isdigit
           _delay
           _keypadOnly
           _printChar
           _reception
           _write_EEPROM
         _keypadOnly
         _printChar
         _reception
         _resetScreen
           _componentStatus
             _printChar
             _sprintf
               ___awdiv
               ___ftadd
                 ___ftpack
               ___ftge
               ___ftmul
                 ___ftpack
               ___ftneg
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___fttol
               ___lldiv
               ___llmod
               ___lltoft
                 ___ftpack
               ___wmul
               __div_to_l_
               __tdiv_to_l_
               _fround
                 ___ftmul
                   ___ftpack
                 ___lbdiv
                 ___lbmod
               _isdigit
               _scale
                 ___awdiv
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
           _mainScreen
             _printChar
             _read_EEPROM
           _printChar
         _write_EEPROM
       _write_EEPROM
     _printChar
     _resetScreen
       _componentStatus
         _printChar
         _sprintf
           ___awdiv
           ___ftadd
             ___ftpack
           ___ftge
           ___ftmul
             ___ftpack
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftpack
           ___fttol
           ___lldiv
           ___llmod
           ___lltoft
             ___ftpack
           ___wmul
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___ftmul
               ___ftpack
             ___lbdiv
             ___lbmod
           _isdigit
           _scale
             ___awdiv
             ___awmod
             ___ftmul
               ___ftpack
             ___wmul
       _mainScreen
         _printChar
         _read_EEPROM
       _printChar
   _mainScreen
     _printChar
     _read_EEPROM
   _read_EEPROM
   _setPassword
     _componentStatus
       _printChar
       _sprintf
         ___awdiv
         ___ftadd
           ___ftpack
         ___ftge
         ___ftmul
           ___ftpack
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
         ___fttol
         ___lldiv
         ___llmod
         ___lltoft
           ___ftpack
         ___wmul
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___ftmul
             ___ftpack
           ___lbdiv
           ___lbmod
         _isdigit
         _scale
           ___awdiv
           ___awmod
           ___ftmul
             ___ftpack
           ___wmul
     _delay
     _getInput
       _delay
       _keypadOnly
       _printChar
       _reception
     _login
       _checkPassword
       _checkStatus
         _atoi
           ___wmul
           _isdigit
         _read_EEPROM
         _settingsPIR
         _tempSetting
       _delay
       _getTempPassword
         _delay
         _keypadOnly
         _printChar
         _reception
       _mainMenu
         _delay
         _keypadOnly
         _passcodeMenu
           _checkPassword
           _delay
           _getInput
             _delay
             _keypadOnly
             _printChar
             _reception
           _getTempPassword
             _delay
             _keypadOnly
             _printChar
             _reception
           _keypadOnly
           _printChar
           _reception
           _resetScreen
             _componentStatus
               _printChar
               _sprintf
                 ___awdiv
                 ___ftadd
                   ___ftpack
                 ___ftge
                 ___ftmul
                   ___ftpack
                 ___ftneg
                 ___ftsub
                   ___ftadd
                     ___ftpack
                 ___fttol
                 ___lldiv
                 ___llmod
                 ___lltoft
                   ___ftpack
                 ___wmul
                 __div_to_l_
                 __tdiv_to_l_
                 _fround
                   ___ftmul
                     ___ftpack
                   ___lbdiv
                   ___lbmod
                 _isdigit
                 _scale
                   ___awdiv
                   ___awmod
                   ___ftmul
                     ___ftpack
                   ___wmul
             _mainScreen
               _printChar
               _read_EEPROM
             _printChar
         _pirMenu
           _delay
           _keypadOnly
           _printChar
           _reception
           _resetScreen
             _componentStatus
               _printChar
               _sprintf
                 ___awdiv
                 ___ftadd
                   ___ftpack
                 ___ftge
                 ___ftmul
                   ___ftpack
                 ___ftneg
                 ___ftsub
                   ___ftadd
                     ___ftpack
                 ___fttol
                 ___lldiv
                 ___llmod
                 ___lltoft
                   ___ftpack
                 ___wmul
                 __div_to_l_
                 __tdiv_to_l_
                 _fround
                   ___ftmul
                     ___ftpack
                   ___lbdiv
                   ___lbmod
                 _isdigit
                 _scale
                   ___awdiv
                   ___awmod
                   ___ftmul
                     ___ftpack
                   ___wmul
             _mainScreen
               _printChar
               _read_EEPROM
             _printChar
           _settingsPIR
           _write_EEPROM
         _printChar
         _reception
         _resetScreen
           _componentStatus
             _printChar
             _sprintf
               ___awdiv
               ___ftadd
                 ___ftpack
               ___ftge
               ___ftmul
                 ___ftpack
               ___ftneg
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___fttol
               ___lldiv
               ___llmod
               ___lltoft
                 ___ftpack
               ___wmul
               __div_to_l_
               __tdiv_to_l_
               _fround
                 ___ftmul
                   ___ftpack
                 ___lbdiv
                 ___lbmod
               _isdigit
               _scale
                 ___awdiv
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
           _mainScreen
             _printChar
             _read_EEPROM
           _printChar
         _temperatureMenu
           _delay
           _getTempThreshold
             _atoi
               ___wmul
               _isdigit
             _delay
             _keypadOnly
             _printChar
             _reception
             _write_EEPROM
           _keypadOnly
           _printChar
           _reception
           _resetScreen
             _componentStatus
               _printChar
               _sprintf
                 ___awdiv
                 ___ftadd
                   ___ftpack
                 ___ftge
                 ___ftmul
                   ___ftpack
                 ___ftneg
                 ___ftsub
                   ___ftadd
                     ___ftpack
                 ___fttol
                 ___lldiv
                 ___llmod
                 ___lltoft
                   ___ftpack
                 ___wmul
                 __div_to_l_
                 __tdiv_to_l_
                 _fround
                   ___ftmul
                     ___ftpack
                   ___lbdiv
                   ___lbmod
                 _isdigit
                 _scale
                   ___awdiv
                   ___awmod
                   ___ftmul
                     ___ftpack
                   ___wmul
             _mainScreen
               _printChar
               _read_EEPROM
             _printChar
           _write_EEPROM
         _write_EEPROM
       _printChar
       _resetScreen
         _componentStatus
           _printChar
           _sprintf
             ___awdiv
             ___ftadd
               ___ftpack
             ___ftge
             ___ftmul
               ___ftpack
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftpack
             ___fttol
             ___lldiv
             ___llmod
             ___lltoft
               ___ftpack
             ___wmul
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___ftmul
                 ___ftpack
               ___lbdiv
               ___lbmod
             _isdigit
             _scale
               ___awdiv
               ___awmod
               ___ftmul
                 ___ftpack
               ___wmul
         _mainScreen
           _printChar
           _read_EEPROM
         _printChar
     _mainMenu
       _delay
       _keypadOnly
       _passcodeMenu
         _checkPassword
         _delay
         _getInput
           _delay
           _keypadOnly
           _printChar
           _reception
         _getTempPassword
           _delay
           _keypadOnly
           _printChar
           _reception
         _keypadOnly
         _printChar
         _reception
         _resetScreen
           _componentStatus
             _printChar
             _sprintf
               ___awdiv
               ___ftadd
                 ___ftpack
               ___ftge
               ___ftmul
                 ___ftpack
               ___ftneg
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___fttol
               ___lldiv
               ___llmod
               ___lltoft
                 ___ftpack
               ___wmul
               __div_to_l_
               __tdiv_to_l_
               _fround
                 ___ftmul
                   ___ftpack
                 ___lbdiv
                 ___lbmod
               _isdigit
               _scale
                 ___awdiv
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
           _mainScreen
             _printChar
             _read_EEPROM
           _printChar
       _pirMenu
         _delay
         _keypadOnly
         _printChar
         _reception
         _resetScreen
           _componentStatus
             _printChar
             _sprintf
               ___awdiv
               ___ftadd
                 ___ftpack
               ___ftge
               ___ftmul
                 ___ftpack
               ___ftneg
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___fttol
               ___lldiv
               ___llmod
               ___lltoft
                 ___ftpack
               ___wmul
               __div_to_l_
               __tdiv_to_l_
               _fround
                 ___ftmul
                   ___ftpack
                 ___lbdiv
                 ___lbmod
               _isdigit
               _scale
                 ___awdiv
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
           _mainScreen
             _printChar
             _read_EEPROM
           _printChar
         _settingsPIR
         _write_EEPROM
       _printChar
       _reception
       _resetScreen
         _componentStatus
           _printChar
           _sprintf
             ___awdiv
             ___ftadd
               ___ftpack
             ___ftge
             ___ftmul
               ___ftpack
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftpack
             ___fttol
             ___lldiv
             ___llmod
             ___lltoft
               ___ftpack
             ___wmul
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___ftmul
                 ___ftpack
               ___lbdiv
               ___lbmod
             _isdigit
             _scale
               ___awdiv
               ___awmod
               ___ftmul
                 ___ftpack
               ___wmul
         _mainScreen
           _printChar
           _read_EEPROM
         _printChar
       _temperatureMenu
         _delay
         _getTempThreshold
           _atoi
             ___wmul
             _isdigit
           _delay
           _keypadOnly
           _printChar
           _reception
           _write_EEPROM
         _keypadOnly
         _printChar
         _reception
         _resetScreen
           _componentStatus
             _printChar
             _sprintf
               ___awdiv
               ___ftadd
                 ___ftpack
               ___ftge
               ___ftmul
                 ___ftpack
               ___ftneg
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___fttol
               ___lldiv
               ___llmod
               ___lltoft
                 ___ftpack
               ___wmul
               __div_to_l_
               __tdiv_to_l_
               _fround
                 ___ftmul
                   ___ftpack
                 ___lbdiv
                 ___lbmod
               _isdigit
               _scale
                 ___awdiv
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
           _mainScreen
             _printChar
             _read_EEPROM
           _printChar
         _write_EEPROM
       _write_EEPROM
     _mainScreen
       _printChar
       _read_EEPROM
     _printChar
     _resetScreen
       _componentStatus
         _printChar
         _sprintf
           ___awdiv
           ___ftadd
             ___ftpack
           ___ftge
           ___ftmul
             ___ftpack
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftpack
           ___fttol
           ___lldiv
           ___llmod
           ___lltoft
             ___ftpack
           ___wmul
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___ftmul
               ___ftpack
             ___lbdiv
             ___lbmod
           _isdigit
           _scale
             ___awdiv
             ___awmod
             ___ftmul
               ___ftpack
             ___wmul
       _mainScreen
         _printChar
         _read_EEPROM
       _printChar
   _settingsCom
   _settingsPIR
   _settingsTimer
   _tempSetting

 _My_ISR_Low (ROOT)
   ___awtoft
     ___ftpack
   ___ftge
   _checkPassword
   _delay
   _getSingleInput
     _delay
     _keypadOnly
     _reception
   _getTempPassword
     _delay
     _keypadOnly
     _printChar
     _reception
   _getTempThreshold
     _atoi
       ___wmul
       _isdigit
     _delay
     _keypadOnly
     _printChar
     _reception
     _write_EEPROM
   _getTemperature
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
     _sprintf
       ___awdiv
       ___ftadd
         ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
       ___fttol
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___ftmul
           ___ftpack
         ___lbdiv
         ___lbmod
       _isdigit
       _scale
         ___awdiv
         ___awmod
         ___ftmul
           ___ftpack
         ___wmul
   _keypadOnly
   _mainScreen
     _printChar
     _read_EEPROM
   _printChar
   _reception
   _write_EEPROM

 _My_ISR_High (ROOT)
   _delay
   _keypadOnly
   _printChar
   _reception
   _resetPIR
     _checkPassword
     _delay
     _getTempPassword
       _delay
       _keypadOnly
       _printChar
       _reception
     _mainScreen
       _printChar
       _read_EEPROM
     _printChar
     _read_EEPROM
   _settingsPIR
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      18       5       18.8%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     1A      51       1       70.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      36       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      15        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Dec 14 15:53:45 2016

                        _i 000A                         _RD 007D30                         _WR 007D31  
    __end_of_checkPassword 4376                         bsr 000FE0                __CFG_BORV$3 000000  
         ??_getSingleInput 0036               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000  
                      l320 433E                        l323 4374                        l500 3F08  
                      l422 2FB0                        l502 3F10                        l512 3F48  
                      l600 2A84                        l505 3F24                        l370 2450  
                      l514 3F50                        l363 2428                        l347 4616  
                      l523 4658                        l507 3F2C                        l452 2E60  
                      l516 3F58                        l604 2BFE                        l613 45F8  
                      l445 2E38                        l429 2FD8                        l509 3F34  
                      l390 25A4                        l471 328A                        l640 17FC  
                      l480 3302                        l633 2A6A                        l561 3426  
                      l490 3EDC                        l571 3476                        l548 33A0  
                      l468 32AE                        l397 25CC                        l493 3EE4  
                      l670 0892                        l582 4218                        l495 3EEC  
                      l585 4240                        l489 3ED0                        l906 35DA  
                      l498 3F00                        l948 1D62                        l978 3A90  
                      _GIE 007F97               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
                      u540 182A                        u550 185C                        u545 1822  
                      u555 1854                        u750 1D98                        u770 1DD2  
                      u755 1D90                        u775 1DCA                        _top 0018  
                      wreg 000FE8               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     l1013 1B02                       l1017 1910                       l1018 191A  
                     l2010 3BCE                       l1052 2358                       l2020 3C0C  
                     l1044 28AC                       l1070 3EC2                       l2014 3BE4  
                     l2006 3BBC                       l2112 45D4                       l3000 1346  
                     l2032 3C86                       l2024 3C54                       l2040 3D88  
                     l1081 1EF2                       l3002 1364                       l2116 45E4  
                     l1076 1F7C                       l3004 139C                       l1420 3690  
                     l2108 4262                       l2028 3C72                       l2212 2C3E  
                     l2140 3EF4                       l3020 2780                       l1430 36C2  
                     l2054 3DEA                       l2046 3DA4                       l1424 36A0  
                     l4000 4416                       l2400 2322                       l2312 15CE  
                     l3040 280A                       l3016 2772                       l3112 2BB8  
                     l1097 320A                       l2410 1B50                       l2402 2338  
                     l2330 17D8                       l2306 1510                       l2058 3E10  
                     l2074 406C                       l2066 4010                       l2218 2C5C  
                     l2404 2340                       l2324 171A                       l2316 15DE  
                     l2228 2C92                       l3212 323A                       l3116 2BC8  
                     l2430 1C4C                       l2414 1B5C                       l2342 4520  
                     l2254 2D0A                       l2262 2D30                       l2238 2CB4  
                     l3230 32A0                       l2158 3F18                       l4014 41E0  
                     l2504 30E0                       l2352 21CE                       l2272 2D78  
                     l2248 2CEC                       l3232 32A4                       l3216 324A  
                     l2176 3F3C                       l3048 286C                       l1802 3A7E  
                     l2450 1D02                       l2290 2A36                       l2274 2D88  
                     l2266 2D54                       l3250 3328                       l3234 32B2  
                     l2508 30EC                       l2460 1D42                       l2452 1D1E  
                     l2380 22C4                       l2372 225E                       l2348 21C2  
                     l2284 29A0                       l2700 354E                       l3252 3330  
                     l1830 18B2                       l1910 1DE8                       l2614 410A  
                     l2542 31F2                       l2534 31AA                       l2526 3180  
                     l2470 44D2                       l2462 1D4A                       l2438 1CC6  
                     l3238 32C2                       l1840 18FE                       l2608 40E6  
                     l2552 3AD2                       l2536 31C0                       l2528 319C  
                     l2392 22F8                       l2712 35CE                       l2704 3596  
                     l2640 37B0                       l4072 4196                       l4064 416A  
                     l1826 18A2                       l1914 1DF6                       l2802 08AC  
                     l2730 0440                       l2538 31C8                       l2490 3EC0  
                     l2482 3E90                       l2458 1D2C                       l2394 2314  
                     l2626 3736                       l2642 37BA                       l4066 417A  
                     l4058 4146                       l3604 24DA                       l1860 1992  
                     l1852 1942                       l1836 18EA                       l1772 39AC  
                     l1932 1E7E                       l2812 0974                       l2804 08E6  
                     l2724 0404                       l2580 3CDA                       l2564 3B54  
                     l2556 3AEE                       l4068 417E                       l3606 24E2  
                     l1870 1A02                       l1862 19AC                       l1790 3A32  
                     l1782 39FA                       l1774 39BE                       l2902 0DC0  
                     l2806 0900                       l2750 05A4                       l2718 03C2  
                     l2478 3E58                       l2670 4346                       l2638 37AC  
                     l3560 2458                       l3616 2500                       l1880 1A54  
                     l1872 1A14                       l1864 19C4                       l1784 3A0E  
                     l1776 39D2                       l1768 399E                       l1944 1F2E  
                     l1936 1EBA                       l2904 0DFA                       l2832 0AAA  
                     l2816 09A8                       l2760 062C                       l2752 05CA  
                     l2584 3D2A                       l2576 3CBE                       l2568 3B7A  
                     l1960 3874                       l2680 34AE                       l2656 3832  
                     l2648 37C2                       l3562 2462                       l3554 243A  
                     l1874 1A2C                       l1858 1980                       l1794 3A3C  
                     l1786 3A20                       l2922 0F76                       l2826 0A32  
                     l2754 05D8                       l2746 0534                       l2738 04E8  
                     l2594 4384                       l2498 45B6                       l2682 34CC  
                     l2666 431A                       l2658 383A                       l3580 249A  
                     l3564 2468                       l3556 243E                       l2932 1010  
                     l2916 0F34                       l2852 0B70                       l2924 0F88  
                     l2596 439A                       l2588 3D50                       l1972 38A8  
                     l3660 2E72                       l3652 2E4A                       l3740 2FEA  
                     l3732 2FC2                       l3574 248E                       l3566 246E  
                     l3558 2448                       l1886 1A7C                       l2870 0C16  
                     l2854 0B7E                       l2862 0BC4                       l2846 0B08  
                     l2838 0AB0                       l2790 07CA                       l2774 06E2  
                     l2766 0660                       l2758 05DE                       l1990 3958  
                     l1966 388A                       l3654 2E4E                       l3734 2FC6  
                     l3830 33F0                       l2694 3518                       l3592 24BE  
                     l3576 2492                       l3568 2474                       l2960 112C  
                     l2952 10B6                       l2944 105E                       l2880 0CDA  
                     l2864 0BD8                       l2856 0B94                       l3672 2EA0  
                     l3656 2E58                       l3736 2FD0                       l3832 33FA  
                     l3920 25BA                       l2696 3538                       l1898 1AE4  
                     l2938 1058                       l1994 396C                       l1986 393A  
                     l1978 38D0                       l3658 2E68                       l3738 2FE0  
                     l3834 3402                       l3922 25C4                       l2980 1216  
                     l2972 11B0                       l2956 10EC                       l2892 0D52  
                     l3772 3058                       l3756 3022                       l3828 33EC  
                     l3924 25D4                       l2982 1226                       l2974 11B8  
                     l2966 115E                       l2894 0D5E                       l2886 0D1C  
                     l2878 0CC0                       l2798 0852                       l3686 2ED0  
                     l3774 3062                       l3782 3088                       l3838 3412  
                     l3926 25DE                       l3918 25B6                       l2992 128E  
                     l2888 0D30                       l3688 2ED6                       l3696 2EFC  
                     l3792 337C                       l3928 25E8                       l2994 12AE  
                     l2978 120E                       l3698 2F18                       l3866 346E  
                     l3946 263E                       l2988 1270                       l3796 338C  
                     l3956 266E                       l3974 26C0                       _ADIE 007CEE  
                     l3984 26E6                       _CFGS 007D36                       STR_1 7FDE  
                     STR_2 7FDE                       STR_3 7FE7                       STR_4 788B  
                     STR_5 7E63                       STR_6 7C2D                       STR_7 7FE0  
                     STR_8 7F0E                       STR_9 7919                       u1050 423E  
                     u2010 3832                       u1070 4284                       u2040 4356  
                     u1057 4234                       u2210 06FE                       u2300 0974  
                     u2220 0730                       u1500 21AC                       u1260 3F68  
                     u1077 427A                       u2400 0D4A                       u1520 21F2  
                     u2225 0726                       u1505 21A4                       u1610 1B3E  
                     u1525 21EA                       u1630 1B86                       u1615 1B34  
                     u2280 0914                       u1720 44CE                       u2450 1010  
                     u1635 1B7C                       u2620 2722                       u1910 3CB8  
                     u2295 0956                       u1760 45B2                       u2640 275C  
                     u2625 271A                       u1770 30CA                       u1860 31F2  
                     u2645 2754                       u1870 3ACC                       u1790 3110  
                     u1775 30C2                       u1960 411A                       u1795 3108  
                     u3877 45EA                       _WREN 007D32          ??_temperatureMenu 003F  
         My_ISR_High@check 0034                       _atoi 34A6                       _main 411C  
                     _temp 0012                       fsr0h 000FEA                       fsr1h 000FE2  
                     indf0 000FEF                       fsr0l 000FE9                       fsr2h 000FDA  
                     indf1 000FE7                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       btemp 0052                       prodh 000FF4  
                     prodl 000FF3                       start 0386              __CFG_IESO$OFF 000000  
            __CFG_MCLRE$ON 000000               ___param_bank 000010            __end_of_Initial 4640  
            ??_My_ISR_High 0027                      ?_main 0027            __end_of___awdiv 3982  
          __end_of___lbdiv 3E20                      _EEADR 000FA9            __end_of___ftadd 1B0C  
                    STR_10 7FDE                      STR_11 7E9D                      STR_12 7919  
                    STR_20 7A22                      STR_13 7FAD                      STR_21 7491  
                    STR_22 7AEC                      STR_14 7C3C                      STR_30 7B16  
                    STR_23 7AEC                      STR_31 7C2D                      STR_15 7FDE  
                    STR_16 7919                      STR_32 7FE0                      STR_40 7858  
                    STR_24 73D0                      STR_41 7AEC                      STR_25 7AEC  
                    STR_17 7AC8                      STR_33 799F                      STR_18 7AEC  
                    STR_26 7C2D                      STR_50 7FE0                      STR_34 7FDE  
                    STR_42 7C18                      STR_43 7919                      STR_51 7FDE  
                    STR_27 7CEC                      STR_35 7AA0                      STR_19 764A  
                    STR_44 7919                      STR_52 7FE0                      STR_28 7FC1  
                    STR_36 7D8D                      STR_60 758D            __end_of___awmod 3C9C  
                    STR_37 7FE0                      STR_53 7FDE                      STR_45 7F5B  
                    STR_29 7824                      STR_61 74D0                      STR_46 7919  
                    STR_62 75CC                      STR_38 799F                      STR_54 7F92  
                    STR_70 78EA                      STR_63 7AEC                      STR_39 7AEC  
                    STR_55 7FE7                      STR_47 7D0E                      STR_71 77EC  
                    STR_80 7F99                      STR_56 7F85                      STR_48 7973  
                    STR_72 7688                      STR_64 760B                      STR_81 7AEC  
                    STR_65 7AEC                      STR_49 7FE0                      STR_73 773D  
                    STR_57 75CC                      STR_74 7AEC                      STR_90 7FD4  
                    STR_66 7DCB                      STR_82 78BB                      STR_58 754E  
                    STR_83 7AEC                      STR_67 7AEC                      STR_91 76C5  
                    STR_75 7D4E                      STR_59 750F                      STR_76 7AEC  
                    STR_68 7DEA                      STR_92 7701                      STR_84 76C5  
          __end_of___lbmod 4090                      STR_93 7AEC                      STR_85 7AEC  
                    STR_77 7FD4                      STR_69 7B3D                      STR_94 7AEC  
                    STR_78 7FE7                      STR_86 7F2A                      STR_87 7AEC  
                    STR_79 7F92                      STR_95 7EBA                      STR_88 7E27  
                    STR_96 7D6E                      STR_89 7AEC                      STR_97 7EBA  
                    STR_98 7F44                      STR_99 7AEC                      _CARRY 007EC0  
          __end_of___ftdiv 28B6                      _EEPGD 007D37            __end_of___ftneg 45D0  
          __end_of___lldiv 3B9C            __end_of___ftmul 1F86                      _T0CON 000FD5  
          __end_of___llmod 3D72            __end_of___ftsub 44FC            __end_of___fttol 3214  
                    i1l304 4464                      i1l263 030C                      i1l281 02A0  
                    i1l274 0278                      i1l293 0328                      i2l232 2014  
                    i1l297 443C                      i2l246 204E                      i2l239 203C  
                    _RCREG 000FAE                      _TMR0H 000FD7                      _TMR0L 000FD6  
                    _SPBRG 000FAF                      _PORTA 000F80                      _PORTD 000F83  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96                      _TXREG 000FAD  
            __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000       __size_of_checkStatus 0196              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000            ??_settingsTimer 003D  
           __CFG_EBTRB$OFF 000000              ___awtoft@sign 003C                      _delay 45D0  
          __end_of_dpowers 733B                      _scale 13C0                      _login 43DC  
          __end_of_isdigit 4534                      _temp1 0014                      _valid 001A  
          __end_of_pirMenu 309E      __size_of_write_EEPROM 0028                      tablat 000FF5  
                    plusw1 000FE3                      status 000FD8            __end_of_sprintf 13C0  
           __CFG_PBADEN$ON 000000            __initialization 4534               __end_of_atoi 35E4  
             __end_of_main 419C                 _My_ISR_Low 0018                     ??_main 0041  
            __activetblptr 000002       __size_of__tdiv_to_l_ 01E2               _write_EEPROM 45FA  
      __end_of_My_ISR_High 2180               ?_setPassword 0027                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _ADCON2 000FC0            _componentStatus 35E4  
                   STR_100 7A76                     STR_101 7AEC                     STR_110 7E80  
                   STR_102 7A4C                     STR_111 7AEC                     STR_103 7AEC  
                   STR_120 7FDE                     STR_104 7E09                     STR_112 7C84  
                   STR_121 7D2E                     STR_113 7CA7                     STR_105 7779  
                   STR_122 7AEC                     STR_114 7AEC                     STR_106 7CCA  
                   STR_130 7946                     _ADRESH 000FC4                     STR_131 7AEC  
                   STR_123 7ED6                     STR_115 7E45                     STR_107 79CB  
                   STR_116 7AEC                     STR_140 7ED6                     STR_132 7E45  
                   STR_108 7451                     STR_124 7411                     STR_133 7AEC  
                   STR_125 7AEC                     STR_109 7AEC                     STR_117 7C2D  
                   STR_141 7389                     STR_142 7AEC                     STR_134 7C2D  
                   STR_150 75CC                     STR_118 7FE0                     STR_126 7EF2  
                   _ADRESL 000FC3                     STR_127 7AEC                     STR_135 7FE0  
                   STR_119 7DAC                     STR_151 7B88                     STR_143 77B4  
                   STR_144 750D                     STR_160 7FF0                     STR_152 7BAC  
                   STR_136 7AEF                     STR_128 79F7                     STR_145 750D  
                   STR_137 7FDE                     STR_161 7FF6                     STR_129 7C60  
                   STR_153 7BF4                     STR_146 750D                     STR_138 7AA0  
                   STR_154 7BD0                     STR_139 7AEC                     STR_147 750D  
                   STR_155 7FFB                     STR_148 7AEC                     STR_156 7B64  
                   STR_157 7AEC                     STR_149 7F70                     _EEDATA 000FA8  
                   STR_158 75CC                     STR_159 7AEC                     _EECON2 000FA7  
         __end_of___awtoft 44BA           __end_of___ftpack 3A9A           __end_of___lltoft 43DC  
                   i1l4040 448A                     i1l3192 444E                     i1l4304 01EC  
                   i1l4320 0232                     i1l3194 4452                     i1l3196 445C  
                   i1l4340 028E                     i1l4236 008E                     i1l3198 446C  
                   i1l4342 0298                     i1l4318 0222                     i1l4352 02C8  
                   i1l4344 02A8                     i1l4264 0128                     i1l4272 0154  
                   i1l4346 02B2                     i1l4338 028A                     i1l4282 0196  
                   i1l4356 02DA                     i1l4364 02FC                     i1l4292 01C0  
                   i1l4366 0316                     i1l4368 0326                     i2l3312 1FCA  
                   i2l3164 42E6                     i2l3340 2044                     i2l3166 42F6  
                   i2l3158 42C2                     i2l3334 2026                     i2l3336 202A  
                   i2l3354 208A                     i2l3338 2034                     i2l3366 20C2  
                   i2l3382 210A                     i2l3392 2142                     i2l3384 211A  
         __end_of___lwtoft 459E               ?_resetScreen 0027                  ??_Initial 003D  
         __end_of_getInput 34A6             __CFG_XINST$OFF 000000               ?_tempSetting 0027  
         __end_of__powers_ 7389                     ___ftge 3E20           __end_of_mainMenu 252E  
                   ___wmul 3F6C             __CFG_STVREN$ON 000000                     _degree 004F  
                   _bottom 0008                     _fround 28B6                     clear_0 455A  
         _PIRStatusAddress 0004                     _option 001D                     _status 0010  
         __end_of_resetPIR 4308               __pdataCOMRAM 0041                  ??_pirMenu 003F  
             __mediumconst 7312            _getTempPassword 371C                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8               ?_settingsCom 0027  
               __accesstop 0080    __end_of__initialization 4560              ___rparam_used 000001  
               ___awtoft@c 0036             __pcstackCOMRAM 0027                 ___inthi_sp 0266  
               ___intlo_sp 0433                ?_My_ISR_Low 0027              __end_of_delay 45FA  
     __size_of_read_EEPROM 0016              __end_of_scale 1800              __end_of_login 442E  
              _My_ISR_High 0008  __size_of_getTempThreshold 014E              ?_passcodeMenu 0027  
  __end_of_componentStatus 371C                 __div_to_l_ 1B0C            _temperatureMenu 2D9E  
       __size_of_reception 0016    __end_of_getTempPassword 3850                  ?___awtoft 0036  
           ??_passcodeMenu 0041         __size_of_printChar 007A                  ?_getInput 003D  
     __size_of_setPassword 007A        __size_of_My_ISR_Low 036E                 _mainScreen 4090  
   __size_of_checkPassword 006E                    _Initial 4622          __end_of__npowers_ 7362  
                  __Hparam 0000         componentStatus@arr 003D                  ?_resetPIR 0027  
     __size_of_resetScreen 0016                    __Lparam 0000            __size_of___ftge 00AC  
                  ___awdiv 3850                    ___lbdiv 3D72                    ___ftadd 1800  
                  ___awmod 3B9C                    ___lbmod 4002                    ___ftdiv 26F6  
                  ___ftneg 459E                    ___lldiv 3A9A            __size_of___wmul 0096  
                  ___ftmul 1D6C                    ___llmod 3C9C                    ___ftsub 44BA  
                  ___fttol 309E       __size_of_tempSetting 0010    __end_of_temperatureMenu 2F22  
                  _address 0006                    __pcinit 4534                 ??___awtoft 0039  
          __size_of_fround 01B8                    __ramtop 0600                 _keypadOnly 3ECC  
                  __ptext0 411C                    __ptext1 4698                    __ptext2 4640  
                  __ptext3 419C                    __ptext4 2A6E                    __ptext5 456A  
                  __ptext6 26F6                    __ptext7 4622                    __ptext8 3ECC  
                  __ptext9 4656                  _T0CONbits 000FD5              ??_checkStatus 003D  
         ?_componentStatus 0027                    _dpowers 7313                    _isdigit 44FC  
                  _pirMenu 2F22                    _pot_vol 000E                 ??_getInput 003F  
        __end_of_reception 466C    __size_of_getSingleInput 0048                    _sprintf 038E  
           __pintcode_body 1F86      __end_of_settingsTimer 46AC       end_of_initialization 4560  
  __size_of_getTemperature 019A       __size_of_settingsPIR 0014              __Lmediumconst 7312  
     __size_of_settingsCom 0016                    int_func 1F86          __end_of_printChar 4290  
               ??_resetPIR 0027                  _RCSTAbits 000FAB                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE              _checkPassword 4308           _getTempThreshold 3214  
                _PORTBbits 000F81                  _PORTDbits 000F83                  _TRISAbits 000F92  
                _TRISBbits 000F93                  _TRISCbits 000F94        __end_of_checkStatus 2D9E  
     __end_of_passcodeMenu 26F6                  _TXSTAbits 000FAC        __size_of__div_to_l_ 0260  
             ??_My_ISR_Low 0080             __end_of___ftge 3ECC           ?_temperatureMenu 0027  
             ?_My_ISR_High 0027             __end_of___wmul 4002              __pidataCOMRAM 46C0  
           __end_of_fround 2A6E        start_initialization 4534        __end_of__tdiv_to_l_ 2362  
       __end_of_My_ISR_Low 0386           __CFG_LPT1OSC$OFF 000000        __size_of_mainScreen 008C  
              _checkStatus 2C08          __size_of___awtoft 0044          __size_of___ftpack 0118  
        __size_of___lltoft 0066                __pbssCOMRAM 0001          __size_of___lwtoft 0034  
            __pcstackBANK0 0080             _getSingleInput 442E             _getTemperature 2A6E  
        __size_of_getInput 0144       _tempThresholdAddress 004B          __size_of_mainMenu 01CC  
      __size_of_keypadOnly 00A0                   ?_Initial 0027          __CFG_CCP2MX$PORTC 000000  
                __pintcode 0008              __pmediumconst 7312          __size_of_resetPIR 0078  
                __npowers_ 733B                __pintcodelo 0018        __end_of_read_EEPROM 4682  
              __tdiv_to_l_ 2180                   ?_pirMenu 0027     __end_of_getSingleInput 4476  
            ??_setPassword 0041     __end_of_getTemperature 2C08             __size_of_delay 002A  
    __size_of_passcodeMenu 01C8             __size_of_scale 0440             __size_of_login 0052  
                _reception 4656                  _inputType 0043   __end_of_getTempThreshold 3362  
            ??_resetScreen 003F                   _IPR1bits 000F9F                   _PIE1bits 000F9D  
                 i1u385_20 0314              ??_tempSetting 003D                   i1u388_27 031E  
                 _PIR1bits 000F9E         __end_of__div_to_l_ 1D6C                  _tempState 0047  
                 _RCONbits 000FD0           __CFG_WDTPS$32768 000000                  getInput@i 003F  
            _tempThreshold 0024                  _printChar 4216                 _ADCON0bits 000FC2  
     __size_of_My_ISR_High 2178         _inputMethodAddress 0041               _passcodeMenu 252E  
          ?_getSingleInput 0027              ??_settingsCom 003D                _INTCON2bits 000FF1  
                copy_data0 4548   __size_of_componentStatus 0138        __end_of_setPassword 4216  
               _EECON1bits 000FA6                   __Hrparam 0000           __size_of_Initial 001E  
              _read_EEPROM 466C                   __Lrparam 0000         __CFG_BOREN$SBORDIS 000000  
      __end_of_resetScreen 4698           __size_of___awdiv 0132           __size_of___lbdiv 00AE  
         __size_of___ftadd 030C           __size_of___awmod 0100           __size_of___lbmod 008E  
         __size_of___ftdiv 01C0           __size_of___ftneg 0032           __size_of___lldiv 0102  
         __size_of___ftmul 021A           __size_of___llmod 00D6           __size_of___ftsub 0042  
         __size_of___fttol 0176     __size_of_settingsTimer 0014                   ___awtoft 4476  
                 ___ftpack 3982        __end_of_tempSetting 46E2                   ___lltoft 4376  
       __end_of_mainScreen 411C                   ___lwtoft 456A                _currentTemp 001E  
         __size_of_isdigit 0038           __size_of_pirMenu 017C                _keypadValue 001C  
                 _getInput 3362   __size_of_getTempPassword 0134                   __ptext10 45FA  
                 __ptext11 371C                   __ptext20 2F22                   __ptext12 4308  
                 __ptext21 46AC                   __ptext13 3214                   __ptext30 1B0C  
                 __ptext22 2D9E                   __ptext14 2C08                   __ptext31 44BA  
                 __ptext23 28B6                   __ptext15 46D2                   __ptext40 4090  
                 __ptext32 3850                   __ptext24 4002                   __ptext16 34A6  
                 __ptext41 43DC                   __ptext33 3E20                   __ptext25 3D72  
                 __ptext17 44FC                   __ptext50 45D0                   __ptext42 4682  
                 __ptext34 459E                   __ptext26 13C0                   __ptext18 252E  
                 __ptext43 4216                   __ptext35 309E                   __ptext27 3F6C  
                 __ptext19 3362                   __ptext52 442E                   __ptext44 35E4  
                 __ptext36 3A9A                   __ptext28 3B9C                   __ptext53 4476  
                 __ptext45 038E                   __ptext37 3C9C                   __ptext29 2180  
                 __ptext46 1D6C                   __ptext38 4376                   __ptext55 4290  
                 __ptext47 3982                   __ptext39 466C                   __ptext48 1800  
                 __ptext49 2362                   __powers_ 7362                   _mainMenu 2362  
         __size_of_sprintf 1032              __size_of_atoi 013E              __size_of_main 0080  
      __end_of_settingsPIR 46C0         __end_of_keypadOnly 3F6C        __end_of_settingsCom 4656  
                 _pirState 0045                   _password 000C                   _resetPIR 4290  
                 _tempPass 0016               ?_checkStatus 0027                 _INTCONbits 000FF2  
 __size_of_temperatureMenu 0184                _setPassword 419C                   intlevel1 0000  
                 intlevel2 0000              _settingsTimer 4698                _resetScreen 4682  
     __end_of_write_EEPROM 4622          ??_componentStatus 003D                _tempSetting 46D2  
              _temperature 0001              _thresholdTemp 004D             ?_settingsTimer 0027  
              _settingsPIR 46AC                _settingsCom 4640          _tempStatusAddress 0049  
